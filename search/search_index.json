{
    "docs": [
        {
            "location": "/",
            "text": "Welcome to the Golem wiki!\n\n\nCurrent Status\n\n\nThe Golem software is in Alpha testing. \nUsers can \ninstall the software\n on a variety of platforms \nand \nparticipate in testing\n. \nThe first use of Golem, called \nBrass Golem\n, will provide CGI rendering for Blender. \nThe \nGolem project milestones\n do not have set dates, \nBrass Golem is expected to be completed in 2018. \nTo follow the progress of Brass Golem, you can follow our \nKanban\n\n\nGolem is open source and distributed under \nGPLv3 license\n.\n\n\nVision\n\n\nWith Golem, anyone will be able to rent their unused computing resources. \nSimultaneously, Golem will enable any user to buy computing time from other users to complete virtually any computationally demanding task. Consequently, Golem will create the first global market for idle computing power. \nGolem is a decentralized P2P network that uses Ethereum and smart contracts for transactions. \n\n\nConnected Repositories\n\n\n\n\nEthereum Payments for Golem\n: The Ethereum payment module for Golem.\n\n\nMicropayments Whitepaper\n: A whitepaper about micropayments for Golem.\n\n\n\n\nUseful Links\n\n\n\n\nWebsite\n\n\nRocket chat\n\n\nBlog\n\n\nTwitter\n\n\n\n\nTechnologies\n\n\nIt communicates with external technologies some of them may be downloaded and installed with the Golem package:\n\n\n\n\nDocker\n (Apache License 2)\n\n\nFreeImage\n (GPLv3)\n\n\nGeth\n (GPLv3)\n\n\nOpenExr\n (modified BSD)\n\n\nOpenSSL\n (OpenSSL License)\n\n\nPython3.6\n (PSF license)\n\n\nSQLite3\n (Public Domain)\n\n\n\n\nBenchmarks:\n\n\n\n\nGeneral: \nMinilight\n by Harrison Ainsworth / HXA7241 and Juraj Sukop\n\n\nBlender: \nscene-Helicopter\n (CC0)\n\n\nLuxRender: \nSchoolCorridor\n by Simon Wendsche",
            "title": "Home"
        },
        {
            "location": "/#welcome-to-the-golem-wiki",
            "text": "",
            "title": "Welcome to the Golem wiki!"
        },
        {
            "location": "/#current-status",
            "text": "The Golem software is in Alpha testing. \nUsers can  install the software  on a variety of platforms \nand  participate in testing . \nThe first use of Golem, called  Brass Golem , will provide CGI rendering for Blender. \nThe  Golem project milestones  do not have set dates, \nBrass Golem is expected to be completed in 2018. \nTo follow the progress of Brass Golem, you can follow our  Kanban  Golem is open source and distributed under  GPLv3 license .",
            "title": "Current Status"
        },
        {
            "location": "/#vision",
            "text": "With Golem, anyone will be able to rent their unused computing resources. \nSimultaneously, Golem will enable any user to buy computing time from other users to complete virtually any computationally demanding task. Consequently, Golem will create the first global market for idle computing power. \nGolem is a decentralized P2P network that uses Ethereum and smart contracts for transactions.",
            "title": "Vision"
        },
        {
            "location": "/#connected-repositories",
            "text": "Ethereum Payments for Golem : The Ethereum payment module for Golem.  Micropayments Whitepaper : A whitepaper about micropayments for Golem.",
            "title": "Connected Repositories"
        },
        {
            "location": "/#useful-links",
            "text": "Website  Rocket chat  Blog  Twitter",
            "title": "Useful Links"
        },
        {
            "location": "/#technologies",
            "text": "It communicates with external technologies some of them may be downloaded and installed with the Golem package:   Docker  (Apache License 2)  FreeImage  (GPLv3)  Geth  (GPLv3)  OpenExr  (modified BSD)  OpenSSL  (OpenSSL License)  Python3.6  (PSF license)  SQLite3  (Public Domain)   Benchmarks:   General:  Minilight  by Harrison Ainsworth / HXA7241 and Juraj Sukop  Blender:  scene-Helicopter  (CC0)  LuxRender:  SchoolCorridor  by Simon Wendsche",
            "title": "Technologies"
        },
        {
            "location": "/1.-Installation/Installation/",
            "text": "Installers\n\n\nmacOS\n\n\nFor more detailed information, including macOS troubleshooting, please visit the official golem \n\nHomebrew formula repository\n.\n\n\nUbuntu\n\n\nWindows\n\n\nPost Setup\n\n\nIf you dont have a public ip, you need to forward ports 40102,40103 and 3282 to your machine from your router for golem to accept tasks.\nRefer \nhttps://bitcoin.org/en/full-node#enabling-connections for port forwarding instructions but use above ports instead.\nYou may also need to open the ports through your firewall.\n\n\nInterface\n\n\nGraphical interface\n\n\n\n\n\n\nWindows\n\n\nYou can launch golem golem from shortcut on your desktop or search it in the \nStart\n menu\n\n\n[[https://golem.network/img/screens/Untitled.png|alt=gui]]\n\n\n\n\n\n\nLinux\n\n\nLaunch \ngolem\n command\n\n\n\n\n\n\nmacOS\n\n\nType \ngolem\n into Spotlight or select \ngolem\n from \nApplications\n.\n\n\n\n\n\n\nFor more info see [[this instruction|https://docs.golem.network]]\n\n\nCommand line interface\n\n\n\n\n\n\nOn Windows\n\n\nOpen the windows command prompt and type: \n\n\ngolemapp --nogui\n\n\nAnd wait for Golem to start. Then type (in another console window):\n\n\ngolemcli -i\n\n\nto use the command line interface in interactive mode.\n\n\n\n\n\n\nOn Linux/macOS\n\n\nIn terminal write:\n\n\ngolemapp --nogui\n\n\nAnd wait for Golem to start. Then type (in another terminal):\n\n\ngolemcli -i\n\n\nto use the command line interface in interactive mode.\n\n\n\n\n\n\nRunning from the source\n\n\nInstallation from source\n\n\nInstallation on Mac\n\n\nInstallation on Ubuntu\n\n\nInstallation on Windows 10\n\n\nArch Linux-unofficial\n\n\nRunning\n\n\n\n\nSetup:\n\n\n\n\nOn \nWindows\n, run the command line as Administrator and type:\n\n\npython3 setup.py develop\n\n\nOn \nLinux\n, type in terminal:\n\n\nsudo python3 setup.py develop\n\n\nIn case of \nmacOS\n, run:\n\n\npython3 setup.py develop\n\n\n\n\nExecuting Golem does not require elevated privileges and can be simply done by typing:\n\n\n\n\ngolemapp\n\n\nor:\n\n\npython3 golemapp.py\n\n\nOn \nWindows\n, run the foregoing commands in \nDocker Quickstart Terminal\n.\n\n\n\n\nUnit tests require additional packages:\n\n\n\n\npip3 install -r requirements-test.txt\n\n\nTo run the tests:\n\n\npython3 setup.py test\n\n\nTo run more complicated test with imunes follow instruction from \n\nhere\n\n\nPackaging\n\n\nBuilding\n\n\nIf you want to create a stand-alone executable package, you may do so for (64-bit) Linux, Windows and macOS. \n\n\nFor windows, install the requirements using \npip3 install -r requirements-winpackager.txt\n. For other systems, make sure you have installed the \npyinstaller\n python module.\n\n\nTo build the package:\n\n\n1) install requirements, as explained in 'Running from the source' section.\n\n\n2) install pyinstaller \npip3 install git+https://github.com/pyinstaller/pyinstaller.git\n\n\n3) run: \npython3 setup.py pyinstaller\n\n\nThe output file and executables will be located in \n$GOLEM/dist\n.\n\n\nKnown seeds:\n\n\n\n\n188.165.227.180:40102\n\n\n188.165.227.180:40104\n\n\n94.23.196.166:40102\n\n\n94.23.196.166:40104\n\n\n\n\nAdvanced topics\n\n\nThe topics listed below may require a deeper understanding of the operating system, Golem or the underlying components or extra tweaking. They don't usually work out of the box and you are responsible for properly configuring and maintaining topics described. No warranty here!\n\n\nsystemd integration\n\n\nSee: https://github.com/golemfactory/golem/wiki/systemd-service-template",
            "title": "Installers"
        },
        {
            "location": "/1.-Installation/Installation/#installers",
            "text": "macOS  For more detailed information, including macOS troubleshooting, please visit the official golem  Homebrew formula repository .  Ubuntu  Windows",
            "title": "Installers"
        },
        {
            "location": "/1.-Installation/Installation/#post-setup",
            "text": "If you dont have a public ip, you need to forward ports 40102,40103 and 3282 to your machine from your router for golem to accept tasks.\nRefer \nhttps://bitcoin.org/en/full-node#enabling-connections for port forwarding instructions but use above ports instead.\nYou may also need to open the ports through your firewall.",
            "title": "Post Setup"
        },
        {
            "location": "/1.-Installation/Installation/#interface",
            "text": "",
            "title": "Interface"
        },
        {
            "location": "/1.-Installation/Installation/#graphical-interface",
            "text": "Windows  You can launch golem golem from shortcut on your desktop or search it in the  Start  menu  [[https://golem.network/img/screens/Untitled.png|alt=gui]]    Linux  Launch  golem  command    macOS  Type  golem  into Spotlight or select  golem  from  Applications .    For more info see [[this instruction|https://docs.golem.network]]",
            "title": "Graphical interface"
        },
        {
            "location": "/1.-Installation/Installation/#command-line-interface",
            "text": "On Windows  Open the windows command prompt and type:   golemapp --nogui  And wait for Golem to start. Then type (in another console window):  golemcli -i  to use the command line interface in interactive mode.    On Linux/macOS  In terminal write:  golemapp --nogui  And wait for Golem to start. Then type (in another terminal):  golemcli -i  to use the command line interface in interactive mode.",
            "title": "Command line interface"
        },
        {
            "location": "/1.-Installation/Installation/#running-from-the-source",
            "text": "",
            "title": "Running from the source"
        },
        {
            "location": "/1.-Installation/Installation/#installation-from-source",
            "text": "Installation on Mac  Installation on Ubuntu  Installation on Windows 10  Arch Linux-unofficial",
            "title": "Installation from source"
        },
        {
            "location": "/1.-Installation/Installation/#running",
            "text": "Setup:   On  Windows , run the command line as Administrator and type:  python3 setup.py develop  On  Linux , type in terminal:  sudo python3 setup.py develop  In case of  macOS , run:  python3 setup.py develop   Executing Golem does not require elevated privileges and can be simply done by typing:   golemapp  or:  python3 golemapp.py  On  Windows , run the foregoing commands in  Docker Quickstart Terminal .   Unit tests require additional packages:   pip3 install -r requirements-test.txt  To run the tests:  python3 setup.py test  To run more complicated test with imunes follow instruction from  here",
            "title": "Running"
        },
        {
            "location": "/1.-Installation/Installation/#packaging",
            "text": "",
            "title": "Packaging"
        },
        {
            "location": "/1.-Installation/Installation/#building",
            "text": "If you want to create a stand-alone executable package, you may do so for (64-bit) Linux, Windows and macOS.   For windows, install the requirements using  pip3 install -r requirements-winpackager.txt . For other systems, make sure you have installed the  pyinstaller  python module.  To build the package:  1) install requirements, as explained in 'Running from the source' section.  2) install pyinstaller  pip3 install git+https://github.com/pyinstaller/pyinstaller.git  3) run:  python3 setup.py pyinstaller  The output file and executables will be located in  $GOLEM/dist .",
            "title": "Building"
        },
        {
            "location": "/1.-Installation/Installation/#known-seeds",
            "text": "188.165.227.180:40102  188.165.227.180:40104  94.23.196.166:40102  94.23.196.166:40104",
            "title": "Known seeds:"
        },
        {
            "location": "/1.-Installation/Installation/#advanced-topics",
            "text": "The topics listed below may require a deeper understanding of the operating system, Golem or the underlying components or extra tweaking. They don't usually work out of the box and you are responsible for properly configuring and maintaining topics described. No warranty here!",
            "title": "Advanced topics"
        },
        {
            "location": "/1.-Installation/Installation/#systemd-integration",
            "text": "See: https://github.com/golemfactory/golem/wiki/systemd-service-template",
            "title": "systemd integration"
        },
        {
            "location": "/1.-Installation/MacOS/Installation-from-source-on-macOS/",
            "text": "Get the code\n\n\nClone the repo\n\n\n  git clone https://github.com/golemfactory/golem.git\n\n\n\n\n\nCommand line developer tools are required and may be proposed by macOS.\nWhen required, just follow the instructions.\n\n\nSetup your system\n\n\nMac OS X 10.10 (Yosemite) or later\n\n\nInstall dependencies\n\n\n\n\nInstall Homebrew \nhttps://brew.sh\n, if required:\n\n\n\n\n  /usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\n\n\n\n\n\n\nInstall the latest Python 3 with \nbrew\n:\n\n\n\n\n  brew install python3\n\n\n\n\n\n\n\nUpdate pip, setuptools, and wheel:\n\n\n\n\n  pip3 install --upgrade pip setuptools wheel\n\n\n\n\n\n\n\nInstall software, drivers and libraries with \nbrew\n:  \n\n\n\n\n  brew install docker\n  brew cask install docker\n  brew install docker-machine\n  brew install openexr\n  brew install freeimage\n  brew install gmp\n  brew install golemfactory/hyperg/hyperg\n  brew install ethereum/ethereum/ethereum\n  brew install xhyve\n  brew install docker-machine-driver-xhyve\n\n\n\n\n\n\n\ndocker-machine-driver-xhyve\n driver requires superuser privileges to access the hypervisor. To\nenable, execute:\n\n\n\n\n  sudo chown root:wheel /usr/local/opt/docker-machine-driver-xhyve/bin/docker-machine-driver-xhyve\n  sudo chmod u+s /usr/local/opt/docker-machine-driver-xhyve/bin/docker-machine-driver-xhyve\n\n\n\n\n\n\n\npull docker images\n\n\n\n\nsource: https://stackoverflow.com/a/44719239/3805131\n\n\nLaunch the \nDocker\n app. Click next. It will ask for privileged access. Confirm. A whale icon should appear in the top bar. Click it and wait for \"Docker is running\" to appear and after that:\n\n\ndocker image pull golemfactory/base:1.2\ndocker image pull golemfactory/blender:1.3\n\n\n\n\n\nPrepare stuff for development\n\n\nPrepare virtual environment\n\n\n\n\nInstall virtualenv\n\n\n\n\n  pip3 install virtualenv\n\n\n\n\n\n\n\nCreate a virtual environment\n\n\n\n\n  virtualenv venv\n\n\n\n\n\n\n\nSwitch to the virtual environment and test whether Python 3 has been activated\n\n\n\n\n  source venv/bin/activate\n  which python\n  python --version\n\n\n\n\n\nInstall requirements\n\n\n\n\nInstall requirements for development\n\n\n\n\n  pip install -r requirements.txt\n\n\n\n\n\n\n\nInstall requirements for testing\n\n\n\n\n  pip install -r requirements-test.txt\n\n\n\n\n\nCreate and run docker machine\n\n\n\n\nCreate docker machine using xhyve driver\n\n\n\n\n  docker-machine create  --driver xhyve --xhyve-virtio-9p --xhyve-cpu-count 1 --xhyve-memory-size 2596 golem\n  docker-machine start golem  \n  eval $(docker-machine env golem)\n\n\n\n\n\n\n\nStart docker machine, if required (when your macOS was restarted)\n\n\n\n\n  docker-machine start golem\n\n\n\n\n\n\n\nCheck whether machine is active (\n*\n active, \n-\n inactive)\n\n\n\n\n  docker-machine ls\n\n\n\n\n\n\n\nMake machine active\n\n\n\n\n  eval $(docker-machine env golem)\n\n\n\n\n\n\n\nConsidering there is a problem, restart docker machine\n\n\n\n\n  docker-machine restart golem\n\n\n\n\n\nRun\n\n\n\n\nFirst, \nsetup.py\n\n\n\n\n  python setup.py develop\n\n\n\n\n\n\n\nSecond, \ngolemapp.py\n\n\n\n\n  python golemapp.py\n\n\n\n\n\nThat's it!",
            "title": "Installation from source on macOS"
        },
        {
            "location": "/1.-Installation/MacOS/Installation-from-source-on-macOS/#get-the-code",
            "text": "Clone the repo    git clone https://github.com/golemfactory/golem.git  Command line developer tools are required and may be proposed by macOS.\nWhen required, just follow the instructions.",
            "title": "Get the code"
        },
        {
            "location": "/1.-Installation/MacOS/Installation-from-source-on-macOS/#setup-your-system",
            "text": "",
            "title": "Setup your system"
        },
        {
            "location": "/1.-Installation/MacOS/Installation-from-source-on-macOS/#mac-os-x-1010-yosemite-or-later",
            "text": "Install dependencies   Install Homebrew  https://brew.sh , if required:     /usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"   Install the latest Python 3 with  brew :     brew install python3   Update pip, setuptools, and wheel:     pip3 install --upgrade pip setuptools wheel   Install software, drivers and libraries with  brew :       brew install docker\n  brew cask install docker\n  brew install docker-machine\n  brew install openexr\n  brew install freeimage\n  brew install gmp\n  brew install golemfactory/hyperg/hyperg\n  brew install ethereum/ethereum/ethereum\n  brew install xhyve\n  brew install docker-machine-driver-xhyve   docker-machine-driver-xhyve  driver requires superuser privileges to access the hypervisor. To\nenable, execute:     sudo chown root:wheel /usr/local/opt/docker-machine-driver-xhyve/bin/docker-machine-driver-xhyve\n  sudo chmod u+s /usr/local/opt/docker-machine-driver-xhyve/bin/docker-machine-driver-xhyve   pull docker images   source: https://stackoverflow.com/a/44719239/3805131  Launch the  Docker  app. Click next. It will ask for privileged access. Confirm. A whale icon should appear in the top bar. Click it and wait for \"Docker is running\" to appear and after that:  docker image pull golemfactory/base:1.2\ndocker image pull golemfactory/blender:1.3",
            "title": "Mac OS X 10.10 (Yosemite) or later"
        },
        {
            "location": "/1.-Installation/MacOS/Installation-from-source-on-macOS/#prepare-stuff-for-development",
            "text": "Prepare virtual environment   Install virtualenv     pip3 install virtualenv   Create a virtual environment     virtualenv venv   Switch to the virtual environment and test whether Python 3 has been activated     source venv/bin/activate\n  which python\n  python --version  Install requirements   Install requirements for development     pip install -r requirements.txt   Install requirements for testing     pip install -r requirements-test.txt  Create and run docker machine   Create docker machine using xhyve driver     docker-machine create  --driver xhyve --xhyve-virtio-9p --xhyve-cpu-count 1 --xhyve-memory-size 2596 golem\n  docker-machine start golem  \n  eval $(docker-machine env golem)   Start docker machine, if required (when your macOS was restarted)     docker-machine start golem   Check whether machine is active ( *  active,  -  inactive)     docker-machine ls   Make machine active     eval $(docker-machine env golem)   Considering there is a problem, restart docker machine     docker-machine restart golem",
            "title": "Prepare stuff for development"
        },
        {
            "location": "/1.-Installation/MacOS/Installation-from-source-on-macOS/#run",
            "text": "First,  setup.py     python setup.py develop   Second,  golemapp.py     python golemapp.py  That's it!",
            "title": "Run"
        },
        {
            "location": "/1.-Installation/MacOS/Installation-on-Mac/",
            "text": "Type in terminal:\n\n\n\n\n/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\n\nbrew tap caskroom/cask\n\n\nbrew tap golemfactory/golem\n\n\nbrew cask install golem\n\n\nsudo chown root:wheel $(brew --prefix)/opt/docker-machine-driver-xhyve/bin/docker-machine-driver-xhyve\n\n\nsudo chmod u+s $(brew --prefix)/opt/docker-machine-driver-xhyve/bin/docker-machine-driver-xhyve",
            "title": "Installation on Mac"
        },
        {
            "location": "/1.-Installation/Others/Installing-Golem-on-Arch-Linux-unofficial/",
            "text": "Proceed on your own risk.\n\n\nThis is an unofficial guide done some of the Golems. It may be completely, extremely, unbelievably out-of-date.\nArch Linux is not officially supported. Anyway, if you encounter troubles, feel free to raise an issue and mention @marmistrz.\n\n\nYou have been warned. \n\n\nInstalling through virtualenv\n\n\nPrerequisites\n\n\nI had all of this installed because of my previous Golem (Python 2) installation.\n\n\npacman -S openexr openssl-1.0 freeimage python-pyqt5 geth\n\n\n\n\n\nNew prerequisite was (from AUR):\n\n\npacaur -S libsecp256k1-git\n\n\n\n\n\nBesides, setup Docker: https://wiki.archlinux.org/index.php/Docker\nInstall HyperG (I put it into my virtualenv): https://github.com/mfranciszkiewicz/golem-hyperdrive/releases\n\n\nSetup the environment\n\n\nCreate a virtualenv.\n\n\nvirtualenv golem\nsource golem/bin/activate\n\n\n\n\n\nand download the sources\n\n\ngit clone ...\n\n\n\n\n\nInstall the dependencies\n\n\nWe have OpenSSL in Arch Linux but the version of \npython-cryptography\n (and some other libs) golem uses requires OpenSSL 1.0 (they are not compatible). Thus, we'll need\nto compile it separately. Do\n\n\npip download -r requirements.txt\n\n\n\n\n\nto see which version of \ncryptography\n is needed. In my case it was \n1.8.1\n, so\nI did:\n\n\npip install --global-option=build_ext --global-option=\"-I/usr/include/openssl-1.0\" --global-option=\"-L/usr/lib/openssl-1.0\" cryptography==1.8.1\n\n\n\n\n\nThen do\n\n\npip install -r requirements.txt\n\n\n\n\n\nCompile golem\n\n\npython setup.py develop\n\n\n\n\n\nFinal patches\n\n\nWe'll need to patch pyelliptic to use OpenSSL 1.0\n\n\nsed \"s%ctypes.util.find_library('crypto')%'/usr/lib/openssl-1.0/libcrypto.so'%\" -i \"$VIRTUAL_ENV/golem/lib/python3.6/site-packages/pyelliptic/openssl.py\"\n\n\n\n\n\nNow you can run golem by \ngolemapp\n\n\nInstalling through PKGBUILD\n\n\nCurrently not done. Feel free to tweak this abandoned PKGBUILD: https://gist.github.com/marmistrz/6eb261cf2c4ebd31ee369eac05e3d48f",
            "title": "Proceed on your own risk."
        },
        {
            "location": "/1.-Installation/Others/Installing-Golem-on-Arch-Linux-unofficial/#proceed-on-your-own-risk",
            "text": "This is an unofficial guide done some of the Golems. It may be completely, extremely, unbelievably out-of-date.\nArch Linux is not officially supported. Anyway, if you encounter troubles, feel free to raise an issue and mention @marmistrz.  You have been warned.",
            "title": "Proceed on your own risk."
        },
        {
            "location": "/1.-Installation/Others/Installing-Golem-on-Arch-Linux-unofficial/#installing-through-virtualenv",
            "text": "",
            "title": "Installing through virtualenv"
        },
        {
            "location": "/1.-Installation/Others/Installing-Golem-on-Arch-Linux-unofficial/#prerequisites",
            "text": "I had all of this installed because of my previous Golem (Python 2) installation.  pacman -S openexr openssl-1.0 freeimage python-pyqt5 geth  New prerequisite was (from AUR):  pacaur -S libsecp256k1-git  Besides, setup Docker: https://wiki.archlinux.org/index.php/Docker\nInstall HyperG (I put it into my virtualenv): https://github.com/mfranciszkiewicz/golem-hyperdrive/releases",
            "title": "Prerequisites"
        },
        {
            "location": "/1.-Installation/Others/Installing-Golem-on-Arch-Linux-unofficial/#setup-the-environment",
            "text": "Create a virtualenv.  virtualenv golem\nsource golem/bin/activate  and download the sources  git clone ...",
            "title": "Setup the environment"
        },
        {
            "location": "/1.-Installation/Others/Installing-Golem-on-Arch-Linux-unofficial/#install-the-dependencies",
            "text": "We have OpenSSL in Arch Linux but the version of  python-cryptography  (and some other libs) golem uses requires OpenSSL 1.0 (they are not compatible). Thus, we'll need\nto compile it separately. Do  pip download -r requirements.txt  to see which version of  cryptography  is needed. In my case it was  1.8.1 , so\nI did:  pip install --global-option=build_ext --global-option=\"-I/usr/include/openssl-1.0\" --global-option=\"-L/usr/lib/openssl-1.0\" cryptography==1.8.1  Then do  pip install -r requirements.txt",
            "title": "Install the dependencies"
        },
        {
            "location": "/1.-Installation/Others/Installing-Golem-on-Arch-Linux-unofficial/#compile-golem",
            "text": "python setup.py develop",
            "title": "Compile golem"
        },
        {
            "location": "/1.-Installation/Others/Installing-Golem-on-Arch-Linux-unofficial/#final-patches",
            "text": "We'll need to patch pyelliptic to use OpenSSL 1.0  sed \"s%ctypes.util.find_library('crypto')%'/usr/lib/openssl-1.0/libcrypto.so'%\" -i \"$VIRTUAL_ENV/golem/lib/python3.6/site-packages/pyelliptic/openssl.py\"  Now you can run golem by  golemapp",
            "title": "Final patches"
        },
        {
            "location": "/1.-Installation/Others/Installing-Golem-on-Arch-Linux-unofficial/#installing-through-pkgbuild",
            "text": "Currently not done. Feel free to tweak this abandoned PKGBUILD: https://gist.github.com/marmistrz/6eb261cf2c4ebd31ee369eac05e3d48f",
            "title": "Installing through PKGBUILD"
        },
        {
            "location": "/1.-Installation/Ubuntu/Installation-from-source-on-Ubuntu/",
            "text": "Getting the code\n\n\nClone the repo\n\n\ngit clone https://github.com/golemfactory/golem.git\n\n\n\n\n\nSystem setup\n\n\nUbuntu\n\n\nDependencies\n\n\n1a. Install additional libraries:  \n\n\nsudo apt install openssl python3-dev libffi-dev pkg-config libjpeg-dev \\\n    libopenexr-dev libssl-dev autoconf libgmp-dev \\\n    libfreeimage-dev libtool python3-netifaces python3-psutil build-essential \\\n    python3-pip docker.io\n\n\n\n\n\nTo enable docker usage add yourself to \ndocker\n group\n\n\nsudo usermod -a -G docker $USER\n\n\n\n\n\nand restart the system for changes to take effect.\n\n\n1b. Install additional python libraries:  \n\n\npip3 install -r requirements.txt\n\n\n\n\n\nor for local installation only\n\n\npip3 install --user -r requirements.txt\n\n\n\n\n\nIn case the installation fails with a \n403 Client Error: SSL is required\n error, you need to re-install pip with \npip3 install --upgrade pip\n.\n\n\n1c. Run setup via\n\n\npython3 setup.py develop --prefix=$HOME/.local\n\n\n\n\n\n\n\nTo run tests install additional libraries:\n\n\n\n\nsudo apt-get install libyaml-dev mock\npip3 install pytest pycodestyle freezegun\n\n\n\n\n\nIf you run into import problems, e.g. \nImportError: cannot import name keccak\n, run:\n  - \nsudo apt-get remove python-crypto\n\n  - \nsudo pip install --upgrade pycryptodome\n\n\nBuild taskcollector\n\n\n\n\nInstall FreeImage (version 3.17.0 or newer):\n\n\nfrom source:\n\n\ndownload source code from [[this site|http://golem.network/FreeImage.zip]]\n\n\nunzip <free_image_archive>\n\n\ncd FreeImage\n\n\nmake\n\n\nsudo make install\n\n\nmake clean\n\n\n\n\n\n\nBuild taskcollector:\n\n\ncd apps/rendering/resources/taskcollector\n\n\nmake\n\n\n\n\nUbuntu: Alternative method using virtualenv\n\n\nThe alternative method replaces original step - 1b.\n\n\nDetails regarding virtualenv and virtualenvwrapper are  covered in [[here|http://docs.python-guide.org/en/latest/dev/virtualenvs/]]\n\n\n\n\nInstall \nvirtualenv\n and \nvirtualenvwrapper\n:\n\n\n\n\n$ pip3 install virtualenv virtualenvwrapper\n   $ source /usr/local/bin/virtualenvwrapper.sh\n\n   The script \nvirtualenvwrapper.sh\n provides additional commands that we'll use below.\n\n\n\n\nCreate a virtual env:\n\n\n\n\n$ mkvirtualenv --python=$(which python3) golem-env\n\n   This creates \n~/.virtualenvs/golem-env\n.\n   At this point \n(golem-env)\n should appear at the beginning of your prompt. Cool!\n   If you need to enable the virtual env, just type:\n   \n$ workon golem-env\n\n\n\n\nInstall dependencies in the virtual env using \npip\n\n\n\n\n(golem-env)$ pip install -r requirements.txt\n\n   The following versions got installed on my system (ubuntu 16.04):\n   \nSuccessfully installed OpenEXR-1.2.0 Pillow-3.0.0 PyOpenSSL-16.1.0 PyYAML-3.12 Twisted-16.4.0 appdirs-1.4.0 autobahn-0.16.0 base58-0.2.3 bitcoin-1.1.42 cbor2-3.0.1 certifi-2016.8.31 cffi-1.8.2 click-6.6 coverage-4.2 cryptography-1.5 devp2p-0.8.0 dill-0.2.5 docker-py-1.7.2 enum34-1.1.6 ethereum-1.5.2 ethereum-client-utils-0.3.2 ethereum-rpc-client-0.4.4 gevent-1.1.2 greenlet-0.4.10 idna-2.1 ipaddress-1.0.16 jsonpickle-0.9.3 multihash-0.1.1 ndg-httpsclient-0.4.2 netifaces-0.10.4 ovh-0.4.5 pbkdf2-1.3 peewee-2.8.3 pluggy-0.3.1 psutil-4.3.1 py-1.4.31 pyasn1-0.1.9 pycparser-2.14 pycryptodome-3.4 pyelliptic-1.5.7 pyethash-0.1.27 pysha3-0.3 pystun-0.1.0 pyvbox-1.0.0 qt4reactor-1.6 repoze.lru-0.6 requests-2.8.1 rlp-0.4.6 scrypt-0.7.1 secp256k1-0.12.1 six-1.10.0 tinyrpc-0.5 tox-2.3.1 txaio-2.5.1 virtualenv-15.0.3 weakreflist-0.3.1 websocket-client-0.37.0 zope.interface-4.3.2\n\n\n\n\nRun \nsetup.py\n\n   \n(golem-env)$ python setup.py develop\n\n\n\n\ninstall HyperG: https://github.com/mfranciszkiewicz/golem-hyperdrive/releases\n\n\n\n\n\n\nRun \ngolemapp\n\n   \n(golem-env)$ golemapp\n\n\n\n\n\n\nThat's it!\n\n\nUseful links: \n\n http://docs.python-guide.org/en/latest/dev/virtualenvs/\n\n http://virtualenvwrapper.readthedocs.org/en/latest/command_ref.html",
            "title": "Installation from source on Ubuntu"
        },
        {
            "location": "/1.-Installation/Ubuntu/Installation-from-source-on-Ubuntu/#getting-the-code",
            "text": "Clone the repo  git clone https://github.com/golemfactory/golem.git",
            "title": "Getting the code"
        },
        {
            "location": "/1.-Installation/Ubuntu/Installation-from-source-on-Ubuntu/#system-setup",
            "text": "",
            "title": "System setup"
        },
        {
            "location": "/1.-Installation/Ubuntu/Installation-from-source-on-Ubuntu/#ubuntu",
            "text": "Dependencies  1a. Install additional libraries:    sudo apt install openssl python3-dev libffi-dev pkg-config libjpeg-dev \\\n    libopenexr-dev libssl-dev autoconf libgmp-dev \\\n    libfreeimage-dev libtool python3-netifaces python3-psutil build-essential \\\n    python3-pip docker.io  To enable docker usage add yourself to  docker  group  sudo usermod -a -G docker $USER  and restart the system for changes to take effect.  1b. Install additional python libraries:    pip3 install -r requirements.txt  or for local installation only  pip3 install --user -r requirements.txt  In case the installation fails with a  403 Client Error: SSL is required  error, you need to re-install pip with  pip3 install --upgrade pip .  1c. Run setup via  python3 setup.py develop --prefix=$HOME/.local   To run tests install additional libraries:   sudo apt-get install libyaml-dev mock\npip3 install pytest pycodestyle freezegun  If you run into import problems, e.g.  ImportError: cannot import name keccak , run:\n  -  sudo apt-get remove python-crypto \n  -  sudo pip install --upgrade pycryptodome  Build taskcollector   Install FreeImage (version 3.17.0 or newer):  from source:  download source code from [[this site|http://golem.network/FreeImage.zip]]  unzip <free_image_archive>  cd FreeImage  make  sudo make install  make clean    Build taskcollector:  cd apps/rendering/resources/taskcollector  make",
            "title": "Ubuntu"
        },
        {
            "location": "/1.-Installation/Ubuntu/Installation-from-source-on-Ubuntu/#ubuntu-alternative-method-using-virtualenv",
            "text": "The alternative method replaces original step - 1b.  Details regarding virtualenv and virtualenvwrapper are  covered in [[here|http://docs.python-guide.org/en/latest/dev/virtualenvs/]]   Install  virtualenv  and  virtualenvwrapper :   $ pip3 install virtualenv virtualenvwrapper\n   $ source /usr/local/bin/virtualenvwrapper.sh \n   The script  virtualenvwrapper.sh  provides additional commands that we'll use below.   Create a virtual env:   $ mkvirtualenv --python=$(which python3) golem-env \n   This creates  ~/.virtualenvs/golem-env .\n   At this point  (golem-env)  should appear at the beginning of your prompt. Cool!\n   If you need to enable the virtual env, just type:\n    $ workon golem-env   Install dependencies in the virtual env using  pip   (golem-env)$ pip install -r requirements.txt \n   The following versions got installed on my system (ubuntu 16.04):\n    Successfully installed OpenEXR-1.2.0 Pillow-3.0.0 PyOpenSSL-16.1.0 PyYAML-3.12 Twisted-16.4.0 appdirs-1.4.0 autobahn-0.16.0 base58-0.2.3 bitcoin-1.1.42 cbor2-3.0.1 certifi-2016.8.31 cffi-1.8.2 click-6.6 coverage-4.2 cryptography-1.5 devp2p-0.8.0 dill-0.2.5 docker-py-1.7.2 enum34-1.1.6 ethereum-1.5.2 ethereum-client-utils-0.3.2 ethereum-rpc-client-0.4.4 gevent-1.1.2 greenlet-0.4.10 idna-2.1 ipaddress-1.0.16 jsonpickle-0.9.3 multihash-0.1.1 ndg-httpsclient-0.4.2 netifaces-0.10.4 ovh-0.4.5 pbkdf2-1.3 peewee-2.8.3 pluggy-0.3.1 psutil-4.3.1 py-1.4.31 pyasn1-0.1.9 pycparser-2.14 pycryptodome-3.4 pyelliptic-1.5.7 pyethash-0.1.27 pysha3-0.3 pystun-0.1.0 pyvbox-1.0.0 qt4reactor-1.6 repoze.lru-0.6 requests-2.8.1 rlp-0.4.6 scrypt-0.7.1 secp256k1-0.12.1 six-1.10.0 tinyrpc-0.5 tox-2.3.1 txaio-2.5.1 virtualenv-15.0.3 weakreflist-0.3.1 websocket-client-0.37.0 zope.interface-4.3.2   Run  setup.py \n    (golem-env)$ python setup.py develop   install HyperG: https://github.com/mfranciszkiewicz/golem-hyperdrive/releases    Run  golemapp \n    (golem-env)$ golemapp    That's it!  Useful links:   http://docs.python-guide.org/en/latest/dev/virtualenvs/  http://virtualenvwrapper.readthedocs.org/en/latest/command_ref.html",
            "title": "Ubuntu: Alternative method using virtualenv"
        },
        {
            "location": "/1.-Installation/Ubuntu/Installation-on-Ubuntu/",
            "text": "The officially supported release is 16.04 at the moment.\n\n\n\n\nDownload and run installation script:\n\nwget https://raw.githubusercontent.com/golemfactory/golem/develop/Installer/Installer_Linux/install.sh\n\n\nMake sure that script can be executed\n\nchmod +x install.sh\n\n\nLaunch script\n\n./install.sh\n\n\nYou might be asked for root password\n\n\nIf any dependencies needs to be installed, you will be asked if you want to install them. We strongly recommend to agree.\n\n\nWhen the script terminates, the program, along with dependencies, will be installed. All you need to do is to restart your PC.",
            "title": "Installation on Ubuntu"
        },
        {
            "location": "/1.-Installation/Windows/Installation-Packaging-Win/",
            "text": "Packaging\n\n\nPreparation\n\n\nIt helps to put extracted contents of this dir to shared folder of your virtual machine/MS Windows OS.\nhttps://drive.google.com/open?id=0B0YJ4lLHU6wWLW9uN3p6NzQzRGs\nIt contains all installers and populated deps directory.\n\n\nIn VM settings/BIOS enable VT-X/AMD-v. It's required by docker. In \nvmplayer\n \nEdit virtual machine settings > Processors > Virtualize VT-x/EPT or AMD-V/RVI\n\n\nPackaging steps\n\n\n\n\nInstall \npython2.7\n \n32bit\n (remember to check \"Add python.exe to Path\")\n\n\nInstall \nVirtualBox\n \nwith\n python bindings\n\n\nInstall \ninnosetup\n\n\nInstall \nVCforPython27\n\n\nInstall \nDockerToolbox\n\n\nInstall \nvc_redist86.exe\n (\nv2013\n :bangbang:)\n\n\n~~Restart OS~~\n\n\nRun \ncd %VBOX_MSI_INSTALL_PATH%\\sdk\\install\n and \npython vboxapisetup.py install\n in administrator CMD (Start > \"CMD\" Ctr-Shift-Enter)\n\n\nVerify that everything worked well by running (in CMD or PowerShell) \npython -c \"import vboxapi\"\n\n\nClone golem to \nC:\\golem\n\n\ncd C:\\golem\n\n    \npip install -r requirements-winpackager.txt\n\n\n~~Add \nC:\\Python27\\Lib\\site-packages\\PyQt5\n to system PATH~~\n\n\n~~Restart OS~~\n\n\nPopulate \ngolem\\Installer\\Installer_Win\\deps\n from \ndeps\n archive mentioned in the beginning\n\n\nAs a temporary fix for conflicting rlp versions run \npip install web3==3.8.0\n\n\n~~Start \nDocker\n. Running \ndocker-machine env\n might help. It should suggest how to setup your env~~\n\n\nRun \ngolem\\Installer\\Installer_Win\\install_script.iss\n in innosetup\n\n\nBuild > Compile\n. If you get \nNo files found matching \"C:\\golem\\dist\\\"\n try running \npython setup.py pyinstaller\n in golem dir.\n\n\nYour \nsetup.exe\n should be ready in \ngolem\\Installer\\Installer_Win\\",
            "title": "Packaging"
        },
        {
            "location": "/1.-Installation/Windows/Installation-Packaging-Win/#packaging",
            "text": "",
            "title": "Packaging"
        },
        {
            "location": "/1.-Installation/Windows/Installation-Packaging-Win/#preparation",
            "text": "It helps to put extracted contents of this dir to shared folder of your virtual machine/MS Windows OS.\nhttps://drive.google.com/open?id=0B0YJ4lLHU6wWLW9uN3p6NzQzRGs\nIt contains all installers and populated deps directory.  In VM settings/BIOS enable VT-X/AMD-v. It's required by docker. In  vmplayer   Edit virtual machine settings > Processors > Virtualize VT-x/EPT or AMD-V/RVI",
            "title": "Preparation"
        },
        {
            "location": "/1.-Installation/Windows/Installation-Packaging-Win/#packaging-steps",
            "text": "Install  python2.7   32bit  (remember to check \"Add python.exe to Path\")  Install  VirtualBox   with  python bindings  Install  innosetup  Install  VCforPython27  Install  DockerToolbox  Install  vc_redist86.exe  ( v2013  :bangbang:)  ~~Restart OS~~  Run  cd %VBOX_MSI_INSTALL_PATH%\\sdk\\install  and  python vboxapisetup.py install  in administrator CMD (Start > \"CMD\" Ctr-Shift-Enter)  Verify that everything worked well by running (in CMD or PowerShell)  python -c \"import vboxapi\"  Clone golem to  C:\\golem  cd C:\\golem \n     pip install -r requirements-winpackager.txt  ~~Add  C:\\Python27\\Lib\\site-packages\\PyQt5  to system PATH~~  ~~Restart OS~~  Populate  golem\\Installer\\Installer_Win\\deps  from  deps  archive mentioned in the beginning  As a temporary fix for conflicting rlp versions run  pip install web3==3.8.0  ~~Start  Docker . Running  docker-machine env  might help. It should suggest how to setup your env~~  Run  golem\\Installer\\Installer_Win\\install_script.iss  in innosetup  Build > Compile . If you get  No files found matching \"C:\\golem\\dist\\\"  try running  python setup.py pyinstaller  in golem dir.  Your  setup.exe  should be ready in  golem\\Installer\\Installer_Win\\",
            "title": "Packaging steps"
        },
        {
            "location": "/1.-Installation/Windows/Installation-from-source-on-Windows/",
            "text": "Please note that these instructions are for the \n64-bit\n version of \nPython 3.6\n.\n\n\n\n\n\n\nOpenSSL libraries (64-bit)\n\n\n\n\n\n\nDownload and extract \nOpenSSL libraries\n to a known location, e.g. \nC:\\OpenSSL\n.\n\n\n\n\n\n\nPrepend\n \nC:\\OpenSSL\n to your \nPATH\n environment variable. You will have to restart your running command line windows for this change to take effect.\n\n\n\n\n\n\nPython packages\n\n\n\n\n\n\nDownload and execute the installer for \npywin32\n.\n\n\n\n\nUsing command line, go to Golem's project directory and type:\n\n\n\n\npip install -r requirements.txt\npip install -r requirements-win.txt\n\n\nBuild taskcollector\n\n\n\n\nOpen project in VisualStudio:\n\n\nIf you don't have installed VS download it for free from [[this site|https://www.visualstudio.com/vs/visual-studio-express/]]\n\n\nOpen \ntaskcollector.sln\n\n\nSet build type as \nRelease\n\n\nIn case of error \nError MSB8020 The build tools for v120 (Platform Toolset = 'v120') cannot be found. To build using the v120 build tools, please install v120 build tools.\n right click on solution and in \nGeneral\n change \nPlatform Toolset\n to \nVisual Studio 2015 (v140)\n\n\nIn case of error \nError LNK1181 cannot open input file '\\FreeImage.lib\n download package from [[this site|https://sourceforge.net/projects/freeimage/files/Binary%20Distribution/3.17.0/FreeImage3170Win32Win64.zip/download?use_mirror=vorboss]] and extract \nFreeImage.lib\n to \n<golem dir>\\apps\\rendering\\resources\\taskcollector\\FreeImage\\Release\n and \nFreeImage.dll\n to the \n<golem dir>\\apps\\rendering\\resources\\taskcollector\\Release\n folder.\n\nNOTE\n use 64bit libraries\n\n\nBuild the project",
            "title": "Installation from source on Windows"
        },
        {
            "location": "/1.-Installation/Windows/Installation-on-Windows/",
            "text": "Download latest installer from [[this site|https://github.com/golemfactory/golem/releases]]\n\n\nLaunch installer\n\n\nAccept License Agreement\n\n\n\n\n[[https://golem.network/img/screens/1.png|alt=1.png]]\n\n\n\n\nSelect location\n\n\n\n\n[[https://golem.network/img/screens/2.png|alt=2.png]]\n\n\n\n\nYou can create a desktop shortcut\n\n\n\n\n[[https://golem.network/img/screens/3.png|alt=3.png]]\n\n\n\n\nClick \nInstall\n\n\nAccept License Agreement for Microsoft Visual C++2013 and click \nInstall\n\n\n\n\n[[https://golem.network/img/screens/4.png|alt=4.png]]\n\n\n\n\nNext Docker Toolbox will be installed. You need to allow to install additional device software\n\n\n\n\n[[https://golem.network/img/screens/5.png|alt=5.png]]\n\n\n\n\nAccept Geth's License Agreement\n\n\n\n\n[[https://golem.network/img/screens/6.png|alt=6.png]]\n\n\n\n\nClick Next (you can also install Development tools, but it isn\u2019t required)\n\n\n\n\n[[https://golem.network/img/screens/7.png|alt=7.png]]\n\n\n\n\nSelect Destination Folder for Geth, click Install and, when finished, click Close\n\n\n\n\n[[https://golem.network/img/screens/8.png|alt=8.png]]\n\n\n\n\nGolem with all dependencies has been installed, click finish",
            "title": "Installation on Windows"
        },
        {
            "location": "/2.-For-Developers/Command-Line/",
            "text": "Using the command line interface\n\n\ngolemcli\n requires a running Golem instance to work. To start Golem in headless mode, type:\n- for the packaged version:\n\n\ngolemapp\n\n- when running from source:\n\n\npython golemapp.py\n\n\nYou can now execute the command line interface client in interactive mode:\n- for the packaged version:\n\n\ngolemcli -i\n\n- when running from source:\n\n\npython golemcli.py -i\n\n\nCommand Line Arguments\n\n\n    golemcli.py  \n    positional arguments:\n\n        exit                Exit the interactive shell\n        help                Display this help message\n        account             Display account & financial info\n        envs                Manage environments\n        network             Manage network\n        incomes             Display incomes\n        payments            Display payments\n        res                 Manage resources\n        settings            Manage settings\n        tasks               Manage tasks\n        subtasks            Manage subtasks\n\n    optional arguments:\n        -a ADDRESS, --address ADDRESS \n                              Golem node's address\n        -p PORT, --port PORT  Golem node's port\n        -i, --interactive     Enter interactive mode\n        -h, --help            Display command's help message\n        --json                Return results in JSON format\n\n\n\n\n\nEnvironments\n\n\nenvs show [--sort {name|supported|active|performance|description}]\n - Show environments\n\n\nenvs enable <name>\n - Enable environment\n\n\nenvs disable <name>\n - Disable environment\n\n\nrecount <name>\n - Recount performance for an environment\n\n\nNetwork\n\n\nnetwork status\n - Show client status\n\n\nnetwork connect <ip> <port>\n - Connect to a node \n\n\nnetwork show [--sort {ip|port|id|name|version}]\n - Show connected nodes.\n\n\nnetwork dht [--sort {ip|port|id|name|version}]\n - Show known nodes.\n\n\nIncomes\n\n\nincomes [--sort {subtask|payee|status|value|fee}]\n - Show incomes\n\n\nPayments\n\n\npayments [--sort {subtask|payee|status|value|fee}]\n - Show payments\n\n\nResources\n\n\nres show\n - Show information on used resources\n\n\nres clear {--provider|--requestor}\n - Clear provider or requestor resources\n\n\nSettings\n\n\nCurrently only subset of showed settings can be modified, check which with \nsettings set\n without arguments \n\n\nsettings set <key> <value>\n - Change setting\n\n\nsettings show {--basic|--requestor|--provider}\n - Show current settings\n\n\nTasks\n\n\ntasks create <file_name>\n - Create a task from file, this is a json file, example file:\n\n\n{\n\n    \n\"duration\"\n:\n \n36000\n,\n\n    \n\"id\"\n:\n \n\"awesome-id\"\n,\n\n    \n\"name\"\n:\n \n\"Golem Task\"\n,\n\n    \n\"type\"\n:\n \n\"Blender\"\n,\n\n    \n\"subtasks\"\n:\n \n1\n,\n\n    \n\"progress\"\n:\n \n0.0\n,\n\n    \n\"options\"\n:\n \n{\n\n        \n\"frame_count\"\n:\n \n1\n,\n\n        \n\"output_path\"\n:\n \n\"/home/any/Documents\"\n,\n\n        \n\"format\"\n:\n \n\"PNG\"\n,\n\n        \n\"resolution\"\n:\n \n[\n\n            \n1000\n,\n\n            \n600\n\n        \n],\n\n        \n\"frames\"\n:\n \n\"1\"\n,\n\n        \n\"compositing\"\n:\n \nfalse\n\n    \n},\n\n    \n\"time_started\"\n:\n \n1504695406.465682\n,\n\n    \n\"time_remaining\"\n:\n \n0\n,\n\n    \n\"status\"\n:\n \n\"Waiting\"\n,\n\n    \n\"timeout\"\n:\n \n\"10:00:00\"\n,\n\n    \n\"subtask_timeout\"\n:\n \n\"10:00:00\"\n,\n\n    \n\"bid\"\n:\n \n10.0\n,\n\n    \n\"resources\"\n:\n \n[\n\n        \n\"/home/any/blender/benchmark/test_task/cube.blend\"\n\n    \n],\n\n    \n\"legacy\"\n:\n \nfalse\n\n\n}\n\n\n\n\n\n\ntasks stats\n - Show statistics for tasks\n\n\ntasks show [--sort {id|remaining|subtasks|statsus|completion}]\n - Show task details\n\n\ntasks abort <task_id>\n - Abort a task\n\n\ntasks subtasks <task_id> [--sort {node|id|remaining|status|completion}]\n - Show subtasks\n\n\ntasks restart <task_id>\n - Restart a task\n\n\ntasks delete <task_id>\n - Delete a task\n\n\nSubtasks\n\n\nsubtasks restart <subtask_id>\n  - Restart a subtask\n\n\nsubtasks show <subtask_id>\n - Show subtask details",
            "title": "Using the command line interface"
        },
        {
            "location": "/2.-For-Developers/Command-Line/#using-the-command-line-interface",
            "text": "golemcli  requires a running Golem instance to work. To start Golem in headless mode, type:\n- for the packaged version:  golemapp \n- when running from source:  python golemapp.py  You can now execute the command line interface client in interactive mode:\n- for the packaged version:  golemcli -i \n- when running from source:  python golemcli.py -i",
            "title": "Using the command line interface"
        },
        {
            "location": "/2.-For-Developers/Command-Line/#command-line-arguments",
            "text": "golemcli.py  \n    positional arguments:\n\n        exit                Exit the interactive shell\n        help                Display this help message\n        account             Display account & financial info\n        envs                Manage environments\n        network             Manage network\n        incomes             Display incomes\n        payments            Display payments\n        res                 Manage resources\n        settings            Manage settings\n        tasks               Manage tasks\n        subtasks            Manage subtasks\n\n    optional arguments:\n        -a ADDRESS, --address ADDRESS \n                              Golem node's address\n        -p PORT, --port PORT  Golem node's port\n        -i, --interactive     Enter interactive mode\n        -h, --help            Display command's help message\n        --json                Return results in JSON format",
            "title": "Command Line Arguments"
        },
        {
            "location": "/2.-For-Developers/Command-Line/#environments",
            "text": "envs show [--sort {name|supported|active|performance|description}]  - Show environments  envs enable <name>  - Enable environment  envs disable <name>  - Disable environment  recount <name>  - Recount performance for an environment",
            "title": "Environments"
        },
        {
            "location": "/2.-For-Developers/Command-Line/#network",
            "text": "network status  - Show client status  network connect <ip> <port>  - Connect to a node   network show [--sort {ip|port|id|name|version}]  - Show connected nodes.  network dht [--sort {ip|port|id|name|version}]  - Show known nodes.",
            "title": "Network"
        },
        {
            "location": "/2.-For-Developers/Command-Line/#incomes",
            "text": "incomes [--sort {subtask|payee|status|value|fee}]  - Show incomes",
            "title": "Incomes"
        },
        {
            "location": "/2.-For-Developers/Command-Line/#payments",
            "text": "payments [--sort {subtask|payee|status|value|fee}]  - Show payments",
            "title": "Payments"
        },
        {
            "location": "/2.-For-Developers/Command-Line/#resources",
            "text": "res show  - Show information on used resources  res clear {--provider|--requestor}  - Clear provider or requestor resources",
            "title": "Resources"
        },
        {
            "location": "/2.-For-Developers/Command-Line/#settings",
            "text": "Currently only subset of showed settings can be modified, check which with  settings set  without arguments   settings set <key> <value>  - Change setting  settings show {--basic|--requestor|--provider}  - Show current settings",
            "title": "Settings"
        },
        {
            "location": "/2.-For-Developers/Command-Line/#tasks",
            "text": "tasks create <file_name>  - Create a task from file, this is a json file, example file:  { \n     \"duration\" :   36000 , \n     \"id\" :   \"awesome-id\" , \n     \"name\" :   \"Golem Task\" , \n     \"type\" :   \"Blender\" , \n     \"subtasks\" :   1 , \n     \"progress\" :   0.0 , \n     \"options\" :   { \n         \"frame_count\" :   1 , \n         \"output_path\" :   \"/home/any/Documents\" , \n         \"format\" :   \"PNG\" , \n         \"resolution\" :   [ \n             1000 , \n             600 \n         ], \n         \"frames\" :   \"1\" , \n         \"compositing\" :   false \n     }, \n     \"time_started\" :   1504695406.465682 , \n     \"time_remaining\" :   0 , \n     \"status\" :   \"Waiting\" , \n     \"timeout\" :   \"10:00:00\" , \n     \"subtask_timeout\" :   \"10:00:00\" , \n     \"bid\" :   10.0 , \n     \"resources\" :   [ \n         \"/home/any/blender/benchmark/test_task/cube.blend\" \n     ], \n     \"legacy\" :   false  }   tasks stats  - Show statistics for tasks  tasks show [--sort {id|remaining|subtasks|statsus|completion}]  - Show task details  tasks abort <task_id>  - Abort a task  tasks subtasks <task_id> [--sort {node|id|remaining|status|completion}]  - Show subtasks  tasks restart <task_id>  - Restart a task  tasks delete <task_id>  - Delete a task",
            "title": "Tasks"
        },
        {
            "location": "/2.-For-Developers/Command-Line/#subtasks",
            "text": "subtasks restart <subtask_id>   - Restart a subtask  subtasks show <subtask_id>  - Show subtask details",
            "title": "Subtasks"
        },
        {
            "location": "/2.-For-Developers/Computing-Tasks-in-Docker/",
            "text": "Computing Tasks in Docker\n\n\nVarious bits of information on the implementation of Docker-based tasks in Golem (a \nDocker-based task\n is a task that is computed in a Docker container).\n\n\nThis is work in progress\n\n\nOverview of the implementation\n\n\nMost of the new code resides in the package \ngolem.docker\n. The most interesting class there is \ngolem.docker.job.DockerJob\n which wraps Python Docker API calls for convenient use in Golem. Example use:\n\n\nwith\n \nDockerJob\n(\nDockerImage\n(\n\"golem/blender\"\n),\n \ntask_script_src\n,\n \ntask_params\n,\n\n               \nresources_dir\n,\n \nwork_dir\n,\n \noutput_dir\n)\n \nas\n \njob\n:\n\n    \njob\n.\nstart\n()\n\n    \nexit_code\n \n=\n \njob\n.\nwait\n()\n\n    \njob\n.\ndump_logs\n(\nstdout_file\n=\n\"stdout.log\"\n)\n\n\n\n\n\n\nThe above code will \n\n\n\n\ncreate a new Docker container based on the image \ngolem/blender:latest\n;\n\n\nmount the host directories \nresources_dir\n, \nwork_dir\n, \noutput_dir\n as \n/golem/resources\n, \n/golem/work\n and \n/golem/output\n, respectively, in the container;\n\n\nsave the string \ntask_script_src\n as \n/golem/work/job.py\n;\n\n\nexecute the command \n/usr/bin/python /golem/work/job.py\n in the container (with \n/golem/work\n as the working dir);\n\n\nwait for the container to exit;\n\n\nsave the output of the command to file \nstdout.log\n on the host;\n\n\nremove the container.\n\n\n\n\nGNR specific Docker support is implemented by patching existing class hierarchy with a few Docker-specific fields and methods.\n\n\n\n\ngolem.task.taskbase.TaskHeader\n\nThere is a new field \ndocker_images\n which holds a list of \nDockerImages\n. The idea is that any of these images has to be present in order to compute the task. Usually the list will be singleton, for example will contain just \ngolem/blender\n.\n\n\n\n\nTo be continued...\n\n\nHow to build required Docker images\n\n\nSo far there are three images:\n\n\n\n\nDockerfile.base\n for building the base image \ngolem/base\n based on \ndebian/jessie\n\n\nDockerfile.blender\n for building the Blender image \ngolem/blender\n based on \ngolem/base\n\n\nDockerfile.luxrender\n for building the LuxRendef image \ngolem/luxrender\n based on \ngolem/base\n\n\n\n\nTo build, go to the golem root dir and execute, for \n<image>\n in \n{\"base\", \"blender\", \"luxrender\"}\n:\n\n\n$ docker build -t golem/<image> -f scripts/Dockerfile.<image> .\n\n\n\n\n\nNote that \nDockerfile.luxrender\n downloads the luxrender binary distribution from imapp's repo \n\nhttps://github.com/imapp-pl/golem-binary-dependencies\n.\n\n\nHow to prepare a Docker-based task\n\n\nRight now the GUI does not support Docker-based tasks. The workflow for producing a Docker-based Blender task definition file is as follows:\n\n\n\n\nCreate and save a Blender task definition file in GUI. Suppose the file is \nblendertask.gt\n.\n\n\nRun \nscripts/pickle2json.py blendertask.gt blendertask.json\n to convert the \n.gt\n file to JSON format.\n\n\n\n\nRun \nscripts/blender2docker.py blendertask.json docker-blendertask.json\n to add Docker-specific data to the task definition file. This step does the following:\n\n\n\n\n\n\nAdds the default Docker image \ngolem/blender\n to the list of images required to compute the task.\n\n\n\n\nReplaces the environment object with an instance of \nBlenderDockerEnvironment\n.\n\n\nChanges the value of \nmain_program_file\n from \n<path-to-script-folder>/blendertask.py\n \n<path-to-script-folder>/docker_blendertask.py\n.\n\n\n\n\nThe resulting file \ndocker-blendertask.json\n may now be submitted for computation in Golem:\n\n\n$ python gnr/node.py --task docker-blendertask.py\n\n\n\n\n\nHow to monitor Docker computations\n\n\nStandard output and error streams of the process running in the container may be redirected to Golem logs.\nFor this, set the logging level for the logger \ngolem.task.docker.job.container\n to \nDEBUG\n:\n\n\n[loggers]\n\n\nkeys\n=\ncontainer,...\n\n\n\n[logger_container]\n\n\nlevel\n=\nDEBUG\n\n\nqualname\n=\ngolem.task.docker.job.container\n\n\npropagate\n=\n0\n\n\n\n\n\n\nI suspect that for performance reasons this should probably be turned on only during development.",
            "title": "Computing Tasks in Docker"
        },
        {
            "location": "/2.-For-Developers/Computing-Tasks-in-Docker/#computing-tasks-in-docker",
            "text": "Various bits of information on the implementation of Docker-based tasks in Golem (a  Docker-based task  is a task that is computed in a Docker container).  This is work in progress",
            "title": "Computing Tasks in Docker"
        },
        {
            "location": "/2.-For-Developers/Computing-Tasks-in-Docker/#overview-of-the-implementation",
            "text": "Most of the new code resides in the package  golem.docker . The most interesting class there is  golem.docker.job.DockerJob  which wraps Python Docker API calls for convenient use in Golem. Example use:  with   DockerJob ( DockerImage ( \"golem/blender\" ),   task_script_src ,   task_params , \n                resources_dir ,   work_dir ,   output_dir )   as   job : \n     job . start () \n     exit_code   =   job . wait () \n     job . dump_logs ( stdout_file = \"stdout.log\" )   The above code will    create a new Docker container based on the image  golem/blender:latest ;  mount the host directories  resources_dir ,  work_dir ,  output_dir  as  /golem/resources ,  /golem/work  and  /golem/output , respectively, in the container;  save the string  task_script_src  as  /golem/work/job.py ;  execute the command  /usr/bin/python /golem/work/job.py  in the container (with  /golem/work  as the working dir);  wait for the container to exit;  save the output of the command to file  stdout.log  on the host;  remove the container.   GNR specific Docker support is implemented by patching existing class hierarchy with a few Docker-specific fields and methods.   golem.task.taskbase.TaskHeader \nThere is a new field  docker_images  which holds a list of  DockerImages . The idea is that any of these images has to be present in order to compute the task. Usually the list will be singleton, for example will contain just  golem/blender .   To be continued...",
            "title": "Overview of the implementation"
        },
        {
            "location": "/2.-For-Developers/Computing-Tasks-in-Docker/#how-to-build-required-docker-images",
            "text": "So far there are three images:   Dockerfile.base  for building the base image  golem/base  based on  debian/jessie  Dockerfile.blender  for building the Blender image  golem/blender  based on  golem/base  Dockerfile.luxrender  for building the LuxRendef image  golem/luxrender  based on  golem/base   To build, go to the golem root dir and execute, for  <image>  in  {\"base\", \"blender\", \"luxrender\"} :  $ docker build -t golem/<image> -f scripts/Dockerfile.<image> .  Note that  Dockerfile.luxrender  downloads the luxrender binary distribution from imapp's repo  https://github.com/imapp-pl/golem-binary-dependencies .",
            "title": "How to build required Docker images"
        },
        {
            "location": "/2.-For-Developers/Computing-Tasks-in-Docker/#how-to-prepare-a-docker-based-task",
            "text": "Right now the GUI does not support Docker-based tasks. The workflow for producing a Docker-based Blender task definition file is as follows:   Create and save a Blender task definition file in GUI. Suppose the file is  blendertask.gt .  Run  scripts/pickle2json.py blendertask.gt blendertask.json  to convert the  .gt  file to JSON format.   Run  scripts/blender2docker.py blendertask.json docker-blendertask.json  to add Docker-specific data to the task definition file. This step does the following:    Adds the default Docker image  golem/blender  to the list of images required to compute the task.   Replaces the environment object with an instance of  BlenderDockerEnvironment .  Changes the value of  main_program_file  from  <path-to-script-folder>/blendertask.py   <path-to-script-folder>/docker_blendertask.py .   The resulting file  docker-blendertask.json  may now be submitted for computation in Golem:  $ python gnr/node.py --task docker-blendertask.py",
            "title": "How to prepare a Docker-based task"
        },
        {
            "location": "/2.-For-Developers/Computing-Tasks-in-Docker/#how-to-monitor-docker-computations",
            "text": "Standard output and error streams of the process running in the container may be redirected to Golem logs.\nFor this, set the logging level for the logger  golem.task.docker.job.container  to  DEBUG :  [loggers]  keys = container,...  [logger_container]  level = DEBUG  qualname = golem.task.docker.job.container  propagate = 0   I suspect that for performance reasons this should probably be turned on only during development.",
            "title": "How to monitor Docker computations"
        },
        {
            "location": "/2.-For-Developers/Creating-a-subnet-of-nodes/",
            "text": "Creating a subnet of nodes\n\n\nFor compability, Golems' nodes can connect if they have the same the 'protocol_id'.\n\n\nDuring tests, it is useful to apply a 'mask' which will create a subnet of nodes.\nTo do so, the node_A and node_B need to be run im a following manner:\n\n\nWay No1\n\n\n1) Since the 'protocol_id' is restricted, nodes cannot connect to default (hardcoded) seed.\nEdit the config files \n\n\napp_cfg.ini of node_A \n\n\n...\nstart port = 40102\n...\n\n\n\n\n\napp_cfg.ini of node_B\n\n\n...\nseed port = 40102\nseed host = <ip of node_A>\n...\n\n\n\n\n\n2) run the golem's node_A with command line argumend \n--protocol_id=12345\n\n3) run the golem's node_B with command line argumend \n--protocol_id=12345\n\n\nNote: \nWhen launching 2 instances of golem on the same local machine replace the \n with 127.0.0.1\n\n\nThen, you shall observe in logs on node_A:\n\n\nINFO     [twisted                            ] ProtocolFactory starting on 40102 \nINFO     [twisted                            ] Starting factory <golem.network.transport.network.ProtocolFactory object at 0x7fbf5594efd0> \nINFO     [twisted                            ] ProtocolFactory starting on 40103 \n\n\n\n\n\nWhen launching node_B, the ports 40102, 40103 are already used by node_A, thus node_B will take next ones:\n\n\nINFO     [twisted                            ] ProtocolFactory starting on 40104 \nINFO     [twisted                            ] Starting factory <golem.network.transport.network.ProtocolFactory object at 0x7fb19a8b34a8> \nINFO     [twisted                            ] ProtocolFactory starting on 40105 \n\n\n\n\n\nThus, it is important to launch nodes in order: node_A then node_B - according to the config file.\n\n\nAlternative, Way No2\n\n\n1) run the golem's node_A with command line argumend:\n\n\n--protocol_id=12345\n\n\n2) run the golem's node_B with command line argumend:\n\n\n--protocol_id=12345 --peer=127.0.0.1:40102 --rpc-address=127.0.0.1:61011",
            "title": "Creating a subnet of nodes"
        },
        {
            "location": "/2.-For-Developers/Creating-a-subnet-of-nodes/#creating-a-subnet-of-nodes",
            "text": "For compability, Golems' nodes can connect if they have the same the 'protocol_id'.  During tests, it is useful to apply a 'mask' which will create a subnet of nodes.\nTo do so, the node_A and node_B need to be run im a following manner:",
            "title": "Creating a subnet of nodes"
        },
        {
            "location": "/2.-For-Developers/Creating-a-subnet-of-nodes/#way-no1",
            "text": "1) Since the 'protocol_id' is restricted, nodes cannot connect to default (hardcoded) seed.\nEdit the config files   app_cfg.ini of node_A   ...\nstart port = 40102\n...  app_cfg.ini of node_B  ...\nseed port = 40102\nseed host = <ip of node_A>\n...  2) run the golem's node_A with command line argumend  --protocol_id=12345 \n3) run the golem's node_B with command line argumend  --protocol_id=12345  Note: \nWhen launching 2 instances of golem on the same local machine replace the   with 127.0.0.1  Then, you shall observe in logs on node_A:  INFO     [twisted                            ] ProtocolFactory starting on 40102 \nINFO     [twisted                            ] Starting factory <golem.network.transport.network.ProtocolFactory object at 0x7fbf5594efd0> \nINFO     [twisted                            ] ProtocolFactory starting on 40103   When launching node_B, the ports 40102, 40103 are already used by node_A, thus node_B will take next ones:  INFO     [twisted                            ] ProtocolFactory starting on 40104 \nINFO     [twisted                            ] Starting factory <golem.network.transport.network.ProtocolFactory object at 0x7fb19a8b34a8> \nINFO     [twisted                            ] ProtocolFactory starting on 40105   Thus, it is important to launch nodes in order: node_A then node_B - according to the config file.",
            "title": "Way No1"
        },
        {
            "location": "/2.-For-Developers/Creating-a-subnet-of-nodes/#alternative-way-no2",
            "text": "1) run the golem's node_A with command line argumend:  --protocol_id=12345  2) run the golem's node_B with command line argumend:  --protocol_id=12345 --peer=127.0.0.1:40102 --rpc-address=127.0.0.1:61011",
            "title": "Alternative, Way No2"
        },
        {
            "location": "/2.-For-Developers/Development/",
            "text": "FAQ for developers\n\n\nHow do I run the linters locally?\n\n\nGet \nlint.sh\n from here: https://github.com/marmistrz/lintdiff (the version from golemfactory/golem may be older and missing bugfixes)\n\n\nThen do\n\n\n./lint.sh <reference-branch>\n\n\n\n\n\nIf you want to disable some linters, just comment out the relevant entries in the \ncommands\n and \nnames\n arrays.\n\n\nReport all bugs here: https://github.com/marmistrz/lintdiff\n\n\nHow do I add an RPC call?\n\n\n\n\nchoose a target function in \ngolem.client.Client\n, say: \nfoo\n\n\ngive a name for it in \ngolem.rpc.mapping.aliases\n. This can be anything\n\n\ncreate a property in \ngolem.rpc.mapping.core.CORE_METHOD_MAP\n, which matches the name of the functions, so here: \nfoo\n.\n\n\n\n\nHow do I load a task from CLI?\n\n\nIf you have a task preset in \npreset.json\n, just execute \ngolemcli tasks create preset.json\n. \n\n\nHow do I create a JSON task preset?\n\n\nThere are two ways of doing that. \n\n\nFirstly, \ngolemcli tasks template\n will dump a minimal template for you. \nIf you add another argument, \ngolemcli tasks template foo.json\n will dump it to a file named \nfoo.json\n.\nIt's really minimal!\n\n\nAnother way is to click out your way through the GUI and then \ngolemcli tasks dump\n or \ngolemcli tasks dump foo.json\n. The semantics of the last argument are the same as in case of \ntemplate\n.\nThis will probably have too much information that is needed, on the other hand.\n\n\nHow do I handle an error as an RPC caller?\n\n\nYou should catch an \nautobahn.wamp.ApplicationError\n in \nsync_wait\n:\n\n\ntry\n:\n\n    \nsync_wait\n(\ndeferred\n)\n\n\nexcept\n \nApplicationError\n \nas\n \nerr\n:\n\n    \nprint\n(\n\"Error: {}\"\n.\nformat\n(\nerr\n))\n\n\n\n\n\n\nHow do I create a database migration script?\n\n\nAfter you update your models and bump the schema version, simply run \n\n\npython setup.py migration [--force/-f]\n\n\n\n\n\nThat command will generate a new script in \ngolem.database.schemas\n. Please review the file before committing. \n\n\nNOTE:\n\n\nIf you rename a property / model, \npeewee_migrate\n will generate a series of \nremove_fields\n + \nadd_fields\n / \nremove_model\n + \ncreate_model\n calls. \nPlease replace those with \nrename_table\n and \nrename_field\n accordingly.\n\n\nOtherwise, your migration script will cause unnecessary data loss.",
            "title": "FAQ for developers"
        },
        {
            "location": "/2.-For-Developers/Development/#faq-for-developers",
            "text": "",
            "title": "FAQ for developers"
        },
        {
            "location": "/2.-For-Developers/Development/#how-do-i-run-the-linters-locally",
            "text": "Get  lint.sh  from here: https://github.com/marmistrz/lintdiff (the version from golemfactory/golem may be older and missing bugfixes)  Then do  ./lint.sh <reference-branch>  If you want to disable some linters, just comment out the relevant entries in the  commands  and  names  arrays.  Report all bugs here: https://github.com/marmistrz/lintdiff",
            "title": "How do I run the linters locally?"
        },
        {
            "location": "/2.-For-Developers/Development/#how-do-i-add-an-rpc-call",
            "text": "choose a target function in  golem.client.Client , say:  foo  give a name for it in  golem.rpc.mapping.aliases . This can be anything  create a property in  golem.rpc.mapping.core.CORE_METHOD_MAP , which matches the name of the functions, so here:  foo .",
            "title": "How do I add an RPC call?"
        },
        {
            "location": "/2.-For-Developers/Development/#how-do-i-load-a-task-from-cli",
            "text": "If you have a task preset in  preset.json , just execute  golemcli tasks create preset.json .",
            "title": "How do I load a task from CLI?"
        },
        {
            "location": "/2.-For-Developers/Development/#how-do-i-create-a-json-task-preset",
            "text": "There are two ways of doing that.   Firstly,  golemcli tasks template  will dump a minimal template for you. \nIf you add another argument,  golemcli tasks template foo.json  will dump it to a file named  foo.json .\nIt's really minimal!  Another way is to click out your way through the GUI and then  golemcli tasks dump  or  golemcli tasks dump foo.json . The semantics of the last argument are the same as in case of  template .\nThis will probably have too much information that is needed, on the other hand.",
            "title": "How do I create a JSON task preset?"
        },
        {
            "location": "/2.-For-Developers/Development/#how-do-i-handle-an-error-as-an-rpc-caller",
            "text": "You should catch an  autobahn.wamp.ApplicationError  in  sync_wait :  try : \n     sync_wait ( deferred )  except   ApplicationError   as   err : \n     print ( \"Error: {}\" . format ( err ))",
            "title": "How do I handle an error as an RPC caller?"
        },
        {
            "location": "/2.-For-Developers/Development/#how-do-i-create-a-database-migration-script",
            "text": "After you update your models and bump the schema version, simply run   python setup.py migration [--force/-f]  That command will generate a new script in  golem.database.schemas . Please review the file before committing.   NOTE:  If you rename a property / model,  peewee_migrate  will generate a series of  remove_fields  +  add_fields  /  remove_model  +  create_model  calls. \nPlease replace those with  rename_table  and  rename_field  accordingly.  Otherwise, your migration script will cause unnecessary data loss.",
            "title": "How do I create a database migration script?"
        },
        {
            "location": "/2.-For-Developers/Logging/",
            "text": "Log configuration is in file \nlogging.ini\n in \ngnr\n. \n\n\nDefault settings\n\n\nDefault log name is \ngolem.log\n and it is saved in the same directory as \nmain.py\n. \nDefault log level: \n\n DEBUG for \ngolem.pay\n\n\n INFO for \ngolem\n (so also for all \ngolem.*\n logs)\n* WARNING for everything else (especially for everything from \ngnr\n.\n\n\nTime rotation\n\n\nThis file is timed rotating, ie. once a day it is replaced with a new \ngolem.log\n and the old file is saved in \ngolem.log.<date>\n file. Only five last copies are saved. \nIf you want to change this settings edit \nargs\n in \nhandler_fileHandlerWithTimeRot\n section. \n\n\nMore than one Golem instance on the same machine\n\n\nLogs from other golem instances are saved in their \ndatadir\n directories.\n\n\nHow to set higher logging level for your part of the code (for developers)\n\n\nLet's imagine that you want to set DEBUG level for all network logs. \nYou should:\n\n\n\n\n\n\nOpen \ngnr.logger.ini\n\n\n\n\n\n\nAdd new key in \n[loggers]\n section\n\n\nkeys: root,golem,pay,net\n\n\n\n\n\n\nCreate new section for the new logger: \n\n\n\n\n\n\n     [logger_net]\n     level: DEBUG\n     qualname: golem.network\n     handlers: fileHandlerWithTimeRot\n\n\n\n\n\nFeel free to also change \ngetLogger(__name__)\n in \ngolem\n code to something more general, ie. \ngetLogger(golem.net)\n.",
            "title": "Logging"
        },
        {
            "location": "/2.-For-Developers/Logging/#default-settings",
            "text": "Default log name is  golem.log  and it is saved in the same directory as  main.py . \nDefault log level:   DEBUG for  golem.pay   INFO for  golem  (so also for all  golem.*  logs)\n* WARNING for everything else (especially for everything from  gnr .",
            "title": "Default settings"
        },
        {
            "location": "/2.-For-Developers/Logging/#time-rotation",
            "text": "This file is timed rotating, ie. once a day it is replaced with a new  golem.log  and the old file is saved in  golem.log.<date>  file. Only five last copies are saved. \nIf you want to change this settings edit  args  in  handler_fileHandlerWithTimeRot  section.",
            "title": "Time rotation"
        },
        {
            "location": "/2.-For-Developers/Logging/#more-than-one-golem-instance-on-the-same-machine",
            "text": "Logs from other golem instances are saved in their  datadir  directories.",
            "title": "More than one Golem instance on the same machine"
        },
        {
            "location": "/2.-For-Developers/Logging/#how-to-set-higher-logging-level-for-your-part-of-the-code-for-developers",
            "text": "Let's imagine that you want to set DEBUG level for all network logs. \nYou should:    Open  gnr.logger.ini    Add new key in  [loggers]  section  keys: root,golem,pay,net    Create new section for the new logger:          [logger_net]\n     level: DEBUG\n     qualname: golem.network\n     handlers: fileHandlerWithTimeRot  Feel free to also change  getLogger(__name__)  in  golem  code to something more general, ie.  getLogger(golem.net) .",
            "title": "How to set higher logging level for your part of the code (for developers)"
        },
        {
            "location": "/2.-For-Developers/devp2p-installation/",
            "text": "Install tulipcore: https://github.com/decentfox/tulipcore and set up the env variables.\n\n\n\n\nIf you forget to set the env variable, you'll get:\n\n\nAttributeError: 'gevent.libev.corecext.loop' object has no attribute 'aio'",
            "title": "Devp2p installation"
        },
        {
            "location": "/2.-For-Developers/systemd-service-template/",
            "text": "A template for advanced users, who'd like to have Golem as a systemd service. You'll probably want to tweak it to your needs.\n\n\n[Unit]\n\n\nDescription\n=\nGolem\n\n\nAfter\n=\nnetwork.target\n\n\n\n[Service]\n\n\nExecStart\n=\n/usr/local/bin/golemapp --nogui \n\n\nRestart\n=\non-failure\n\n\nUser\n=\nubuntu\n\n\nGroup\n=\nubuntu\n\n\nWorkingDirectory\n=\n/home/ubuntu\n\n\n\n[Install]\n\n\nWantedBy\n=\nmulti-user.target",
            "title": "Systemd service template"
        },
        {
            "location": "/2.-For-Developers/Testing/Testing-old-GUI/",
            "text": "Old GUI\n\n\n Old GUI is obsolete \n\n\nFirst steps\n\n\nAfter you successfully installed the Golem App, you will be prompted to enter your node name. You can change it later so don't worry much about it, but you have to set it to a non-empty string. We encourage to choose your Slack login, so we will be able to easily identify your node.\n\n\nNow you should see something similar to \n.\n\n\nThe icons on the left are the main app menu. Currently you are in a \nTask\n submenu. White area in the center is where your tasks will appear when you add some, on the right there is a bunch of information about a specific task when you select it.\n\n\nCommand line interface\n\n\nType \nhelp\n to list available commands and their descriptions. For example, to gain some knowledge on available Golem's settings, enter:\n\n\nsettings -h\n\n\nNote that most commands also have sub-commands and optional flags, just like \n\nsettings show --provider\n. To clear that up, type:\n\n\nsettings show -h\n\n\nSet a new node name with a command:\n\n\nsettings set node_name <new_name>\n\n\nSettings\n\n\nClick \nPreferences\n on the left. The three tabs on the top of the window are different settings groups. Let's start with the \nGeneral\n tab:\n   1. \nSeed address\n and \nSeed port\n are data you need to provide if you want to connect to a specific machine, i.e. your second PC. By default Golem on start connects to one of our computers to enter the network, so you usually don't need to change anything here.\n   2. \nNode name\n is the name you were asked to type on the first start, here is where you can change it.\n\n\nClick the \nShow more\n button on the bottom to display more (mostly highly advanced) options. The default values are reasonable and should be OK, so if you don't want to change them there is no need to do so, however we encourage you to experiment with them. Like most of the UI elements, the properties' names have tooltips - they should give you an idea on what are the meanings of them.\n\n\nNow click the \nProvider\n tab. In general, these are options controlling the proccess of choosing and computing other Golems' tasks. You can set here your financial expectations, maximal resources size, maximal RAM usage, number of CPU cores to use and minimal trust level of a requestor to accept their tasks. Again, the default values of technical parameters should be fine.\nThe estimated performances are measurement of your PC's effectiveness and are dependent on the above settings like RAM and number of cores. You can recount them at any moment if you want to. \nThe \nDon't accept any tasks\n checkbox seems quite clear: just check it if you don't want to compute other persons' tasks.\n\n\nThe \nRequestor\n tab is simple and consists of only two fields analogical to the ones present in the \nProvider\n.\n\n\nImportant!\n Note that settings are saved after clicking the \nChange\n button. If you forget to accept your changes, they won't take place.\n\n\nCommand line interface\n\n\nYou can manage node's settings with these 2 commands:\n- \nsettings show\n - displays node's settings\n- \nsettings set <name> <new_value>\n - updates a setting \n<name>\n with a \n<new_value>\n\n\nStatus\n\n\nHere you can view the current state of the network and information about tasks you computed or tried to compute. Also, by clicking the \nShow disk usage\n button, you can manage data stored on your PC. A good idea is to go there from time to time and erase the data since it won't be deleted automatically (but do not do this while computing some tasks/accepting your tasks).\n\n\nCommand line interface\n\n\nUseful network commands:\n- \nnetwork show\n - shows connected peers\n- \nnetwork status\n - displays node's network and computing status\n- \nnetwork connect <ip_address> <tcp_port>\n - connects to a specified node in the network\n\n\nDisk resource management:\n- \nres show\n - shows the amount of disk space used by resources\n- \nres clear --provider\n - clears computing resources\n\n\nAccount\n\n\nIn this submenu you can check your financial history and account balance. Also Ethereum address, node name and Golem ID (a long HEX number used to identify you in the network) are displayed along with your reputation (how trustworthy other nodes find you).\n\n\nCommand line interface\n\n\n\n\naccount\n - displays account information\n\n\npayments\n - shows a list of payments made\n\n\nincomes\n - shows a list of recently received payments\n\n\n\n\nNew task\n\n\nThe main functionality of the Golem app is computing tasks (both as a requestor and a provider). You are automatically accepting others' tasks (if you didn't check the \nDon't accept any tasks\n option in settings) - being a provider is that simple. \n\n\nTo become a requestor, try to render something - add a random Blender or Luxrender task (if you are not a 3D artist you can find example scene files on the Internet - search for \n.lxs for LuxRender files and \n.blend for Blender) with reasonable parameters and see if it's working. To add a new task: \n   1. Click \nNew Task\n on the left.\n   2. Choose appropriate renderer (Blender or LuxRender).\n   3. Set path to a .blend or .lxs file in the \nMain scene file\n. You can click \n...\n to choose a file from your machine. \n   4. If your scene needs some additional data, for instance textures, select the right files or directories after clicking \nAdd\n.\n   5. Set \nOutput format\n and \nOutput file\n. You can click \n...\n to define path to a new file on your machine. \n   6. Experiment with other options. Keep in mind that if you set a too short timeout value, the task won't be finished in time. Generally is better to set too long timeout than too short. Also, if you set \nmax price\n to low people may not want to render it. Pessimistic cost is calculated as a number of subtasks * subtask timeout (in hours) * price.\n   7. Be careful with enabling compositing (or: don't enable it if you are not sure what you are doing). When you split a frame into several subtasks, some of Blender postprocessing functions can give different results than when applied to a whole image.\n   8. When you're ready click \nTest task\n and wait until the test is finished. Be patient: it can take a while dependending on the scene's complexity. After testing the number of resources can increase by one - it's OK (means the scene file was added to resources list)\n   9. If the test was successful you can click \nCreate task\n. \n   10. Click \nTasks\n on the left side of the app, mark the new task and click \nStart task\n there. \n   11. Wait for the results.\n\n\nOptionally you can save a task on your disk and load it later.\n\n\nCommand line interface\n\n\nTo load a task from a file, enter:\n\n\ntasks load \"<full_path_to_file>\"\n\n\nwhich will test and automatically start that particular task. If your task has been previously tested in GUI, you can skip the testing phase with the \n--skip-test\n flag. \n\n\nFor more information on task management, type \ntasks -h\n.",
            "title": "Old GUI"
        },
        {
            "location": "/2.-For-Developers/Testing/Testing-old-GUI/#old-gui",
            "text": "Old GUI is obsolete",
            "title": "Old GUI"
        },
        {
            "location": "/2.-For-Developers/Testing/Testing-old-GUI/#first-steps",
            "text": "After you successfully installed the Golem App, you will be prompted to enter your node name. You can change it later so don't worry much about it, but you have to set it to a non-empty string. We encourage to choose your Slack login, so we will be able to easily identify your node.  Now you should see something similar to  .  The icons on the left are the main app menu. Currently you are in a  Task  submenu. White area in the center is where your tasks will appear when you add some, on the right there is a bunch of information about a specific task when you select it.",
            "title": "First steps"
        },
        {
            "location": "/2.-For-Developers/Testing/Testing-old-GUI/#command-line-interface",
            "text": "Type  help  to list available commands and their descriptions. For example, to gain some knowledge on available Golem's settings, enter:  settings -h  Note that most commands also have sub-commands and optional flags, just like  settings show --provider . To clear that up, type:  settings show -h  Set a new node name with a command:  settings set node_name <new_name>",
            "title": "Command line interface"
        },
        {
            "location": "/2.-For-Developers/Testing/Testing-old-GUI/#settings",
            "text": "Click  Preferences  on the left. The three tabs on the top of the window are different settings groups. Let's start with the  General  tab:\n   1.  Seed address  and  Seed port  are data you need to provide if you want to connect to a specific machine, i.e. your second PC. By default Golem on start connects to one of our computers to enter the network, so you usually don't need to change anything here.\n   2.  Node name  is the name you were asked to type on the first start, here is where you can change it.  Click the  Show more  button on the bottom to display more (mostly highly advanced) options. The default values are reasonable and should be OK, so if you don't want to change them there is no need to do so, however we encourage you to experiment with them. Like most of the UI elements, the properties' names have tooltips - they should give you an idea on what are the meanings of them.  Now click the  Provider  tab. In general, these are options controlling the proccess of choosing and computing other Golems' tasks. You can set here your financial expectations, maximal resources size, maximal RAM usage, number of CPU cores to use and minimal trust level of a requestor to accept their tasks. Again, the default values of technical parameters should be fine.\nThe estimated performances are measurement of your PC's effectiveness and are dependent on the above settings like RAM and number of cores. You can recount them at any moment if you want to. \nThe  Don't accept any tasks  checkbox seems quite clear: just check it if you don't want to compute other persons' tasks.  The  Requestor  tab is simple and consists of only two fields analogical to the ones present in the  Provider .  Important!  Note that settings are saved after clicking the  Change  button. If you forget to accept your changes, they won't take place.",
            "title": "Settings"
        },
        {
            "location": "/2.-For-Developers/Testing/Testing-old-GUI/#command-line-interface_1",
            "text": "You can manage node's settings with these 2 commands:\n-  settings show  - displays node's settings\n-  settings set <name> <new_value>  - updates a setting  <name>  with a  <new_value>",
            "title": "Command line interface"
        },
        {
            "location": "/2.-For-Developers/Testing/Testing-old-GUI/#status",
            "text": "Here you can view the current state of the network and information about tasks you computed or tried to compute. Also, by clicking the  Show disk usage  button, you can manage data stored on your PC. A good idea is to go there from time to time and erase the data since it won't be deleted automatically (but do not do this while computing some tasks/accepting your tasks).",
            "title": "Status"
        },
        {
            "location": "/2.-For-Developers/Testing/Testing-old-GUI/#command-line-interface_2",
            "text": "Useful network commands:\n-  network show  - shows connected peers\n-  network status  - displays node's network and computing status\n-  network connect <ip_address> <tcp_port>  - connects to a specified node in the network  Disk resource management:\n-  res show  - shows the amount of disk space used by resources\n-  res clear --provider  - clears computing resources",
            "title": "Command line interface"
        },
        {
            "location": "/2.-For-Developers/Testing/Testing-old-GUI/#account",
            "text": "In this submenu you can check your financial history and account balance. Also Ethereum address, node name and Golem ID (a long HEX number used to identify you in the network) are displayed along with your reputation (how trustworthy other nodes find you).",
            "title": "Account"
        },
        {
            "location": "/2.-For-Developers/Testing/Testing-old-GUI/#command-line-interface_3",
            "text": "account  - displays account information  payments  - shows a list of payments made  incomes  - shows a list of recently received payments",
            "title": "Command line interface"
        },
        {
            "location": "/2.-For-Developers/Testing/Testing-old-GUI/#new-task",
            "text": "The main functionality of the Golem app is computing tasks (both as a requestor and a provider). You are automatically accepting others' tasks (if you didn't check the  Don't accept any tasks  option in settings) - being a provider is that simple.   To become a requestor, try to render something - add a random Blender or Luxrender task (if you are not a 3D artist you can find example scene files on the Internet - search for  .lxs for LuxRender files and  .blend for Blender) with reasonable parameters and see if it's working. To add a new task: \n   1. Click  New Task  on the left.\n   2. Choose appropriate renderer (Blender or LuxRender).\n   3. Set path to a .blend or .lxs file in the  Main scene file . You can click  ...  to choose a file from your machine. \n   4. If your scene needs some additional data, for instance textures, select the right files or directories after clicking  Add .\n   5. Set  Output format  and  Output file . You can click  ...  to define path to a new file on your machine. \n   6. Experiment with other options. Keep in mind that if you set a too short timeout value, the task won't be finished in time. Generally is better to set too long timeout than too short. Also, if you set  max price  to low people may not want to render it. Pessimistic cost is calculated as a number of subtasks * subtask timeout (in hours) * price.\n   7. Be careful with enabling compositing (or: don't enable it if you are not sure what you are doing). When you split a frame into several subtasks, some of Blender postprocessing functions can give different results than when applied to a whole image.\n   8. When you're ready click  Test task  and wait until the test is finished. Be patient: it can take a while dependending on the scene's complexity. After testing the number of resources can increase by one - it's OK (means the scene file was added to resources list)\n   9. If the test was successful you can click  Create task . \n   10. Click  Tasks  on the left side of the app, mark the new task and click  Start task  there. \n   11. Wait for the results.  Optionally you can save a task on your disk and load it later.",
            "title": "New task"
        },
        {
            "location": "/2.-For-Developers/Testing/Testing-old-GUI/#command-line-interface_4",
            "text": "To load a task from a file, enter:  tasks load \"<full_path_to_file>\"  which will test and automatically start that particular task. If your task has been previously tested in GUI, you can skip the testing phase with the  --skip-test  flag.   For more information on task management, type  tasks -h .",
            "title": "Command line interface"
        },
        {
            "location": "/2.-For-Developers/Testing/Testing-with-IMUNES/",
            "text": "Testing with IMUNES\n\n\nPrerequisites\n\n\nDocker\n\n\nNodes simulated by IMUNES are run as docker containers, so you need to install docker. \nThese instructions were tested with version 1.9.1 of docker. Docker installation instructions (for Ubuntu) are [[here|https://docs.docker.com/engine/installation/ubuntulinux/]]\n\n\nDocker images\n\n\nThe next step is to build the docker image that will run at the simulated nodes. There's a script that performs that step, using Dockerfiles in \ntests/imunes\n:\n\n\n$ \ncd\n \n$GOLEM\n\n$ tests/imunes/build-images.sh\n\n\n\n\n\nNote\n This script should be run on \"clean\" repository, this mean there should be no files added by user, especially files without read privileges.\n\n\nNote that this script has to be run from the main \n$GOLEM\n dir.\nThe script uses two docker files from \n$GOLEM/tests/imunes\n:\n\n \nDockerfile.blender\n is used to build the image \nimapp/blender\n; this is essentially the docker file for \nikester/blender\n, but based on (\nFROM\n) \nimunes/vroot\n instead of \nubuntu:trusty\n. \n\n \nDockerfile.gnr\n is used to build the final image \nimapp/gnr\n, based on \nimapp/blender\n. \n\n\nIf everything up to this point went well, the command \ndocker images\n should list \nimunes/vroot\n, \nimapp/blender\n and \nimapp/gnr\n.\n\n\nIMUNES (imapp version)\n\n\nYou'll need the imapp version of IMUNES which differs slightly from the original:\n\n\n$ git clone git@github.com:imapp-pl/imunes.git\n\n\n\n\n\nTo install IMUNES (by default to \n/usr/local/bin\n and \n/usr/local/lib/imunes\n, this can probably be changed by setting the \nPREFIX\n var in \nimunnes/GNUmakefile\n but I haven't tested that) invoke:\n\n\n$ \ncd\n imunes\n;\n sudo make install all\n\n\n\n\n\nIMUNES projects can be displayed and edited in IMUNES GUI as follows:\n\n\n$ imunes \n$GOLEM\n/tests/imunes/local.imn\n\n\n\n\n\nStarting, topping and attaching to running simulations requires root privileges. The following command starts the simulation in the background:\n\n\n$ sudo imunes -b \n$GOLEM\n/tests/imunes/local.imn\nCreating nodes...\n\n100\n.0%                                          \nCreating links...\n\n100\n.0%                                          \nConfiguring nodes...\n\n100\n.0%                                          \nStarting services...\nNetwork topology instantiated in \n2\n.374 seconds \n(\n4\n nodes and \n3\n links\n)\n.\nExperiment \nID\n \n=\n i590c\n\n\n\n\n\nYou may now attach to the running simulation by starting IMUNES GUI (\nsudo imunes\n) and choosing \nExperiment->Attach to experiment\n from the menu. Once attached, GUI can terminate the experiment (\nExperiment->Terminate\n). All running experiments can also be quickly terminated by \n\n\n$ sudo cleanupAll\n\n\n\n\n\nRunning tests with the \nimunes.py\n script\n\n\nThe default test scenario (and the only one supported so far) is to start an IMUNES simulation using a specified IMUNES project file (\n.imn\n), and run GNR (ie \npython gnr/node.py\n) at each simulated machine. One GNR instance starts with a single task. The script then waits until the task is computed in the simulated network. \n\n\nThis scenario is run by executing the script:\n\n\n$ sudo python \n$GOLEM\n/tests/imunes/imunes.py network.imn task.json --requester pc1 --supernode host1 --seed host1\n\n\n\n\n\nThe meaning of the arguments is as follows:\n\n \nnetwork.imn\n is the IMUNES network topology file; this is the only mandatory argument.\n\n \ntask.json\n is the file with the task description; if this argument is not specified then Golem nodes will start but no task will be computed.\n\n \n--requester pc1\n indicates that the node called \npc1\n in the IMUNES project will request task computation; this argument is mandatory iff the task is specified.\n\n \n--supernode host1\n means that the node called \nhost1\n will act as a Golem supernode; multiple supernodes may be speficied (or none).\n* \n--seed host1\n means that it will also be used as a seed, i.e. other nodes will connect to it at their startup; multiple seeds may be specified (or none).\n\n\nThis should open few terminal windows, one for each simulated machine, displaying logs of GNR nodes computing the specified task. After the task is completed the terminal windows are closed and the simulation is terminated.\n\n\nNote that the script has to be run as \nroot\n. This is required to start IMUNES.\n\n\nThe test task\n\n\nThe task to run in the simulated network is read from a JSON file. The file is copied to \n/opt/golem/test-task/task.json\n at the the target machine before GNR nodes are started. Absolute paths in the task definition file, which are assumed to refer to files at the host machine, are adjusted so that they point to the files copied to the target machine. For example, the task file may specify \n/home/finn/golem/task/scripts/blendertask.py\n as the main program file. The script copies the program file to \n/opt/golem/test-task/blendertask.py\n and updates the path in the task file. Similarly, the scene file \n/home/finn/blender/scene.blende\n referenced to by the task file will be copied to \n/opt/golem/test-task/scene.blend\n and the path in the target task file will point to it.\n\n\nPickled task definitions may be converted to JSON files using the script at \nscripts/pickle2json.py\n.\n\n\nLog files\n\n\nSimulated GNR nodes write their log files to \n/tmp/imunes/<node-name>/golem.log\n, where \n<node-name>\n is the name of the simulated machine, for example \npc1\n or \nhost2\n. These names can be set in the IMUNES GUI. The logs are available even after the simulation ends but are overwritten when the test is restarted.",
            "title": "Testing with IMUNES"
        },
        {
            "location": "/2.-For-Developers/Testing/Testing-with-IMUNES/#testing-with-imunes",
            "text": "",
            "title": "Testing with IMUNES"
        },
        {
            "location": "/2.-For-Developers/Testing/Testing-with-IMUNES/#prerequisites",
            "text": "",
            "title": "Prerequisites"
        },
        {
            "location": "/2.-For-Developers/Testing/Testing-with-IMUNES/#docker",
            "text": "Nodes simulated by IMUNES are run as docker containers, so you need to install docker. \nThese instructions were tested with version 1.9.1 of docker. Docker installation instructions (for Ubuntu) are [[here|https://docs.docker.com/engine/installation/ubuntulinux/]]",
            "title": "Docker"
        },
        {
            "location": "/2.-For-Developers/Testing/Testing-with-IMUNES/#docker-images",
            "text": "The next step is to build the docker image that will run at the simulated nodes. There's a script that performs that step, using Dockerfiles in  tests/imunes :  $  cd   $GOLEM \n$ tests/imunes/build-images.sh  Note  This script should be run on \"clean\" repository, this mean there should be no files added by user, especially files without read privileges.  Note that this script has to be run from the main  $GOLEM  dir.\nThe script uses two docker files from  $GOLEM/tests/imunes :   Dockerfile.blender  is used to build the image  imapp/blender ; this is essentially the docker file for  ikester/blender , but based on ( FROM )  imunes/vroot  instead of  ubuntu:trusty .    Dockerfile.gnr  is used to build the final image  imapp/gnr , based on  imapp/blender .   If everything up to this point went well, the command  docker images  should list  imunes/vroot ,  imapp/blender  and  imapp/gnr .",
            "title": "Docker images"
        },
        {
            "location": "/2.-For-Developers/Testing/Testing-with-IMUNES/#imunes-imapp-version",
            "text": "You'll need the imapp version of IMUNES which differs slightly from the original:  $ git clone git@github.com:imapp-pl/imunes.git  To install IMUNES (by default to  /usr/local/bin  and  /usr/local/lib/imunes , this can probably be changed by setting the  PREFIX  var in  imunnes/GNUmakefile  but I haven't tested that) invoke:  $  cd  imunes ;  sudo make install all  IMUNES projects can be displayed and edited in IMUNES GUI as follows:  $ imunes  $GOLEM /tests/imunes/local.imn  Starting, topping and attaching to running simulations requires root privileges. The following command starts the simulation in the background:  $ sudo imunes -b  $GOLEM /tests/imunes/local.imn\nCreating nodes... 100 .0%                                          \nCreating links... 100 .0%                                          \nConfiguring nodes... 100 .0%                                          \nStarting services...\nNetwork topology instantiated in  2 .374 seconds  ( 4  nodes and  3  links ) .\nExperiment  ID   =  i590c  You may now attach to the running simulation by starting IMUNES GUI ( sudo imunes ) and choosing  Experiment->Attach to experiment  from the menu. Once attached, GUI can terminate the experiment ( Experiment->Terminate ). All running experiments can also be quickly terminated by   $ sudo cleanupAll",
            "title": "IMUNES (imapp version)"
        },
        {
            "location": "/2.-For-Developers/Testing/Testing-with-IMUNES/#running-tests-with-the-imunespy-script",
            "text": "The default test scenario (and the only one supported so far) is to start an IMUNES simulation using a specified IMUNES project file ( .imn ), and run GNR (ie  python gnr/node.py ) at each simulated machine. One GNR instance starts with a single task. The script then waits until the task is computed in the simulated network.   This scenario is run by executing the script:  $ sudo python  $GOLEM /tests/imunes/imunes.py network.imn task.json --requester pc1 --supernode host1 --seed host1  The meaning of the arguments is as follows:   network.imn  is the IMUNES network topology file; this is the only mandatory argument.   task.json  is the file with the task description; if this argument is not specified then Golem nodes will start but no task will be computed.   --requester pc1  indicates that the node called  pc1  in the IMUNES project will request task computation; this argument is mandatory iff the task is specified.   --supernode host1  means that the node called  host1  will act as a Golem supernode; multiple supernodes may be speficied (or none).\n*  --seed host1  means that it will also be used as a seed, i.e. other nodes will connect to it at their startup; multiple seeds may be specified (or none).  This should open few terminal windows, one for each simulated machine, displaying logs of GNR nodes computing the specified task. After the task is completed the terminal windows are closed and the simulation is terminated.  Note that the script has to be run as  root . This is required to start IMUNES.",
            "title": "Running tests with the imunes.py script"
        },
        {
            "location": "/2.-For-Developers/Testing/Testing-with-IMUNES/#the-test-task",
            "text": "The task to run in the simulated network is read from a JSON file. The file is copied to  /opt/golem/test-task/task.json  at the the target machine before GNR nodes are started. Absolute paths in the task definition file, which are assumed to refer to files at the host machine, are adjusted so that they point to the files copied to the target machine. For example, the task file may specify  /home/finn/golem/task/scripts/blendertask.py  as the main program file. The script copies the program file to  /opt/golem/test-task/blendertask.py  and updates the path in the task file. Similarly, the scene file  /home/finn/blender/scene.blende  referenced to by the task file will be copied to  /opt/golem/test-task/scene.blend  and the path in the target task file will point to it.  Pickled task definitions may be converted to JSON files using the script at  scripts/pickle2json.py .",
            "title": "The test task"
        },
        {
            "location": "/2.-For-Developers/Testing/Testing-with-IMUNES/#log-files",
            "text": "Simulated GNR nodes write their log files to  /tmp/imunes/<node-name>/golem.log , where  <node-name>  is the name of the simulated machine, for example  pc1  or  host2 . These names can be set in the IMUNES GUI. The logs are available even after the simulation ends but are overwritten when the test is restarted.",
            "title": "Log files"
        },
        {
            "location": "/2.-For-Developers/Testing/Testing/",
            "text": "How to start testing\n\n\nInstall Golem using \nInstallers\n, see \ninstallation manual\n.\n\n\nCheck instruction for the new Electron-based Gui \nhere\n\n\nFor Alpha tests we really need users with open ports and public IP or forwarded ports. Golem instance uses by default three ports 3282, 40102 and 40103.\nIf you don't have public IP then please follow the instruction from \nBitcoin enabling connections section\n, but for those three ports instead of 8333, 18333.\n\n\nWhat kind of comments do we expect?\n\n\n\n\n\"[ERR]\" Information about errors and bugs\n\n\nDid you encounter any problems? \n\n\nDid any errors occur?\n\n\nDid the application crash or stop working? \n\n\n\"[UX]\" Opinions about user experience\n\n\nAre some elements of the interface unintuitive or inconvenient? \n\n\nIs the application behaving as you expected? \n\n\n\"[FUNC]\" Suggestions about functionalities\n\n\nWhich core functionalities is the app lacking? \n\n\nWhat would you add? \n\n\n\n\nMiscellaneous\n\n\nTesting tweaks\n\n\nCreating a subnet of nodes \nhere\n.\n\n\nHow can you send us your comments?\n\n\nAdd a new issue to the repository or write a comment on \nRocket Chat\n. Add an annotation \"[ERR]\", \"[UX]\" or \"[FUNC]\" (see description above). If you add information about an error, please append as much information as possible, try to add screenshots and attach your logs to the issue. You can send your detailed comments to \ncontact@golem.network\n with all the above information and attachments.\n\n\nWhere are the logs?\n\n\nFrom version 0.10.0 and up\n\n\nThe logs are located in the \nlogs\n folder inside the Golem data directory. The default values can be found below, you can set your own using the \n-d\n argument when starting \ngolemapp\n.\n\n\nBy default, the log files are located at:\n- windows in \n%LOCALAPPDATA%\\golem\\golem\\default\\logs\n\n- mac in \n~/Library/Application\\ Support/golem/default/logs\n\n- linux in \n~/.local/share/golem/default/logs",
            "title": "How to start testing"
        },
        {
            "location": "/2.-For-Developers/Testing/Testing/#how-to-start-testing",
            "text": "Install Golem using  Installers , see  installation manual .  Check instruction for the new Electron-based Gui  here  For Alpha tests we really need users with open ports and public IP or forwarded ports. Golem instance uses by default three ports 3282, 40102 and 40103.\nIf you don't have public IP then please follow the instruction from  Bitcoin enabling connections section , but for those three ports instead of 8333, 18333.",
            "title": "How to start testing"
        },
        {
            "location": "/2.-For-Developers/Testing/Testing/#what-kind-of-comments-do-we-expect",
            "text": "\"[ERR]\" Information about errors and bugs  Did you encounter any problems?   Did any errors occur?  Did the application crash or stop working?   \"[UX]\" Opinions about user experience  Are some elements of the interface unintuitive or inconvenient?   Is the application behaving as you expected?   \"[FUNC]\" Suggestions about functionalities  Which core functionalities is the app lacking?   What would you add?",
            "title": "What kind of comments do we expect?"
        },
        {
            "location": "/2.-For-Developers/Testing/Testing/#miscellaneous",
            "text": "Testing tweaks  Creating a subnet of nodes  here .",
            "title": "Miscellaneous"
        },
        {
            "location": "/2.-For-Developers/Testing/Testing/#how-can-you-send-us-your-comments",
            "text": "Add a new issue to the repository or write a comment on  Rocket Chat . Add an annotation \"[ERR]\", \"[UX]\" or \"[FUNC]\" (see description above). If you add information about an error, please append as much information as possible, try to add screenshots and attach your logs to the issue. You can send your detailed comments to  contact@golem.network  with all the above information and attachments.",
            "title": "How can you send us your comments?"
        },
        {
            "location": "/2.-For-Developers/Testing/Testing/#where-are-the-logs",
            "text": "From version 0.10.0 and up  The logs are located in the  logs  folder inside the Golem data directory. The default values can be found below, you can set your own using the  -d  argument when starting  golemapp .  By default, the log files are located at:\n- windows in  %LOCALAPPDATA%\\golem\\golem\\default\\logs \n- mac in  ~/Library/Application\\ Support/golem/default/logs \n- linux in  ~/.local/share/golem/default/logs",
            "title": "Where are the logs?"
        },
        {
            "location": "/3.-FAQ/Common-problems/",
            "text": "Jump to a Section:\n\n\n\n\n\n\nJump to a Section:\n\n\nInstalling\n\n\nCommon\n\n\nWindows\n\n\nMac\n\n\nLinux\n\n\n\n\n\n\nRunning\n\n\nCommon\n\n\nFinal image has magenta elements\n\n\nSymptoms:\n\n\nDescription:\n\n\nResolution:\n\n\nFound\n\n\nRelates to:\n\n\nAffected version:\n\n\n\n\n\n\n\n\n\n\nWindows\n\n\n\"Error Starting Docker\" first run of golem after installation\n\n\nSymptoms\n\n\nDescription\n\n\nResolution\n\n\nFound\n\n\nRelates to:\n\n\nAffected version:\n\n\n\n\n\n\n\"Error Starting Docker\" after upgrade of golem\n\n\nSymptoms:\n\n\nDescription:\n\n\nResolution\n\n\nFound\n\n\nRelates to\n\n\nAffected version\n\n\n\n\n\n\n\n\n\n\nMac\n\n\nLinux\n\n\n\n\n\n\nBuilds and tests\n\n\nCommon\n\n\nEnum has Int field\n\n\nSymptoms:\n\n\nDescription:\n\n\nResolution:\n\n\nFound\n\n\nRelates to:\n\n\nAffected version:\n\n\n\n\n\n\n\n\n\n\nWindows\n\n\nImport error: Twisted requires zope.interface\n\n\nSymptoms:\n\n\nDescription:\n\n\nResolution:\n\n\nFound\n\n\nRelates to:\n\n\nAffected version:\n\n\n\n\n\n\nImportError: No system module 'pywintypes'\n\n\nSymptoms:\n\n\nDescription:\n\n\nResolution:\n\n\nFound\n\n\nRelates to:\n\n\nAffected version:\n\n\n\n\n\n\nEnvironmentError: Library \"libgcc_s_dw2-1.dll\" not found\n\n\nSymptoms:\n\n\nDescription:\n\n\nResolution:\n\n\nFound\n\n\nRelates to:\n\n\nAffected version:\n\n\n\n\n\n\nImportError: No module named win32api\n\n\nSymptoms:\n\n\nDescription:\n\n\nResolution:\n\n\nFound\n\n\nRelates to:\n\n\nAffected version:\n\n\n\n\n\n\nBad magic number in ...\n\n\nSymptoms:\n\n\nDescription:\n\n\nResolution:\n\n\nFound\n\n\nRelates to:\n\n\nAffected version:\n\n\n\n\n\n\nUnicodeDecodeError: 'utf-8' codec can't decode\n\n\nSymptoms:\n\n\nDescription:\n\n\nResolution:\n\n\nFound\n\n\nRelates to:\n\n\nAffected version:\n\n\n\n\n\n\n\n\n\n\nMac\n\n\nLinux\n\n\nModuleNotFoundError: No module named 'setuptools'\n\n\nSymptoms:\n\n\nDescription:\n\n\nResolution:\n\n\nFound\n\n\nRelates to:\n\n\nAffected version:\n\n\n\n\n\n\nBuilding TaskCollector failed make: g++-5: Command not found\n\n\nSymptoms:\n\n\nDescription:\n\n\nResolution:\n\n\nFound\n\n\nRelates to:\n\n\nAffected version:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRunning source\n\n\nCommon\n\n\nargument --log-format: conflicting option\n\n\nSymptoms:\n\n\nDescription:\n\n\nResolution:\n\n\nFound\n\n\nRelates to:\n\n\nAffected version:\n\n\n\n\n\n\n\n\n\n\nWindows\n\n\nMac\n\n\nLinux\n\n\nSyntaxError: invalid syntax\n\n\nSymptoms:\n\n\nDescription:\n\n\nResolution:\n\n\nFound\n\n\nRelates to:\n\n\nAffected version:\n\n\n\n\n\n\nEnvironmentError: Library \"OpenEXR.so\" not found\n\n\nSymptoms:\n\n\nDescription:\n\n\nResolution:\n\n\nFound\n\n\nRelates to:\n\n\nAffected version:\n\n\n\n\n\n\nEnvironmentError: Library \"_psutil_linux.so\" not found\n\n\nSymptoms:\n\n\nDescription:\n\n\nResolution:\n\n\nFound\n\n\nRelates to:\n\n\nAffected version:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInstalling\n\n\nThese are the common problems while installing the released versions\n\n\nCommon\n\n\nWindows\n\n\nMac\n\n\nLinux\n\n\nRunning\n\n\nThese are the common problems while running the released versions\n\n\nCommon\n\n\nFinal image has magenta elements\n\n\nTODO: reproduce and copy full errors\n\n\nSymptoms:\n\n\nOn completion of a blender task on the network the image shows magenta elements where it should not.\n\n\nDescription:\n\n\nWhen the textures for rendering are missing it replaces them with these magenta elements. Please include all required texture files in the golem-task.\n\n\nResolution:\n\n\nCheck that you're using relative paths in your scene and that you have added all the required resources during task definition.\n\n\nFound\n\n\nunknown date by unknown\n\n\nRelates to:\n\n\nNo issue reported\n\n\nAffected version:\n\n\nunknown\n\n\nWindows\n\n\n\"Error Starting Docker\" first run of golem after installation\n\n\nSymptoms\n\n\n\n\nWhen \ngolem\n starts it shows the error \"Error Starting Docker\"\n\n\n\n\nimage::https://user-images.githubusercontent.com/10008353/36040756-b3bc64ae-0dc6-11e8-84e4-08fa270300d9.png[Error starting docker]\n\n\nDescription\n\n\nDocker requires specific settings to be able to run, check the included docker quickstart terminal for the full error and solve that first\n\n\nResolution\n\n\n\n\nclose Golem\n\n\nhit windows key and type \"Docker Quickstart Terminal\"\n\n\nwait for it to start, this can take a while\n\n\nIf any error appears, follow the proposed resolution\n\n\n\n\nFound\n\n\n20 Dec 2017 by @ederenn\n\n\nRelates to:\n\n\nNone\n\n\nAffected version:\n\n\nNone\n\n\n\"Error Starting Docker\" after upgrade of golem\n\n\nSymptoms:\n\n\n\n\nWhen \ngolem\n starts it shows the error \"Error Starting Docker\" \n\n\n\n\nimage::https://user-images.githubusercontent.com/10008353/36040756-b3bc64ae-0dc6-11e8-84e4-08fa270300d9.png[Error starting docker]\n\n\n\n\nWhen starting \nDocker Quickstart Terminal\n it shows error \"Error creating machine\"\n\n\n\n\nimage::https://user-images.githubusercontent.com/10008353/36040768-bcba4b02-0dc6-11e8-829f-ff2bb13af2e9.png[Error creating machine]\n\n\n\n\nIn \ngolem.log\n it shows \nERROR    golem.docker.manager    DockerMachine: failed to start the VM: Command '['docker-machine', 'restart', 'golem']' returned non-zero exit status 1.\n\n\n\n\nDescription:\n\n\nDuring the upgrade of golem, VirtualBox also got updated, this caused the existing docker-machines to stop working. \n\n\nResolution\n\n\n\n\nclose Golem\n\n\nclose VirtualBox in Task Manager\n\n\nhit windows key and type \"Add or remove programs\"\n\n\nthen search for \"virtual box\" and select \"modify\"\n\n\nclick modify -> repair\n\n\nrestart\n\n\n\n\nFound\n\n\n20 Dec 2017 by @ederenn\n\n\nRelates to\n\n\nhttps://github.com/golemfactory/golem/issues/1786\n\n\nAffected version\n\n\ngolem 0.9.1 and before\n\n\nMac\n\n\nLinux\n\n\nBuilds and tests\n\n\nThese are the common problems while running tests and building packages.\n\n\nCommon\n\n\nEnum has Int field\n\n\nTODO: reproduce and copy full errors\n\n\nSymptoms:\n\n\npython setup.py develop\n shows \n\n\nEnum has Int field\n\n\n\n\n\nDescription:\n\n\nA dependency upgraded enum34 to a wrong version, please uninstall it.\n\n\nResolution:\n\n\nRun with virtualenv enabled:\n\n\npip uninstall enum34\n\n\n\n\n\nFound\n\n\nunknown date by unknown\n\n\nRelates to:\n\n\nNo issue reported\n\n\nAffected version:\n\n\nunknown\n\n\nWindows\n\n\nImport error: Twisted requires zope.interface\n\n\nTODO: reproduce and copy full errors\n\n\nSymptoms:\n\n\npip install -r requirements.txt\n shows \n\n\nImport error: Twisted requires zope.interface 3.6.0 or later: no module named zope.interface.\n\n\n\n\n\nDescription:\n\n\nzope.interface\n was installed incorrectly. please re-install it with easy_install as non-admin user\n\n\nResolution:\n\n\nRun in non-admin cmd with venv enabled:\n\n\neasy_install zope.interface\n\n\n\n\n\nFound\n\n\nunknown date by unknown\n\n\nRelates to:\n\n\nNo issue reported\n\n\nAffected version:\n\n\nunknown\n\n\nImportError: No system module 'pywintypes'\n\n\nTODO: reproduce and copy full errors\n\n\nSymptoms:\n\n\npip install -r requirements.txt\n shows \n\n\nImportError\n:\n \nNo\n \nsystem\n \nmodule\n \n'pywintypes'\n \n(\npywintypes27\n.\ndll\n)\n\n\n\n\n\n\nDescription:\n\n\npywin32\n was installed incorrectly, it is missing a dll. please install the dll by downloading the correct version and adding it to the package or somewhere in the PATH\n\n\nResolution:\n\n\nDownload pywin32 https://sourceforge.net/projects/pywin32/files/pywin32/Build%20220/[from this site] install and copy \n$PYTHON/Lib/site-packages/pywin32_system32/pywintypes36.dll\n into \n$PYTHON/Lib/site-packages/win32/\n\n\nor\n\n\nAdd \n$PYTHON/Lib/site-packages/pypiwin32_system32\n to the system PATH and restart your cmd\n\n\nFound\n\n\n\n\n23-nov-2017 by @maaktweluit during development of #1400\n\n\nBefore 0.7.1 by unknown\n\n\n\n\nRelates to:\n\n\nNo issue reported\n\n\nAffected version:\n\n\nexternal dependency\n\n\nEnvironmentError: Library \"libgcc_s_dw2-1.dll\" not found\n\n\nTODO: reproduce and copy full errors\n\n\nSymptoms:\n\n\nWhen building in the mingw32 terminal \npython setup.py develop\n shows \n\n\nEnvironmentError\n:\n \nLibrary\n \n\"libgcc_s_dw2-1.dll\"\n \nnot\n \nfound\n\n\n\n\n\n\nDescription:\n\n\nYour mingw32 installation is missing a required library, please download and add it manually.\n\n\nResolution:\n\n\nDownload the package gcc-core-4.4.0-mingw32-dll.tar.gz https://sourceforge.net/projects/mingw/files/MinGW/Base/gcc/Version4/Previous%20Release%20gcc-4.4.0/[from here]. Copy required dll from the bin folder into your mingw bin folder.\n\n\nFound\n\n\nunknown date by unknown\n\n\nRelates to:\n\n\nNo issue reported\n\n\nAffected version:\n\n\nunknown\n\n\nImportError: No module named win32api\n\n\nTODO: reproduce and copy full errors\n\n\nSymptoms:\n\n\nWhen running \npython setup.py develop\n it shows \n\n\nImportError\n:\n \nNo\n \nmodule\n \nnamed\n \nwin32api\n\n\n\n\n\n\nDescription:\n\n\npypiwin32 failed to install, try installing it without cache\n\n\nResolution:\n\n\nRun this while your venv is loaded.\n\n\npython -m pip install --no-cache pypiwin32\n\n\n\n\n\nFound\n\n\nunknown date by unknown\n\n\nRelates to:\n\n\nNo issue reported\n\n\nAffected version:\n\n\nunknown\n\n\nBad magic number in ...\n\n\nSymptoms:\n\n\nWhen running \npython setup.py develop\n it shows \n\n\nBad magic number in ...\n\n\n\n\n\nDescription:\n\n\nThere is an error with your pyc files, please delete the and run again.\n\n\nResolution:\n\n\nRun this in your golem source folder.\n\n\nfind . -name '*.pyc' -delete\n\n\n\n\n\nFound\n\n\nunknown date by unknown\n\n\nRelates to:\n\n\nNo issue reported\n\n\nAffected version:\n\n\nunknown\n\n\nUnicodeDecodeError: 'utf-8' codec can't decode\n\n\nSymptoms:\n\n\npip install -r requirements.txt\n shows \n\n\nException\n:\n\n\nTraceback\n \n(\nmost\n \nrecent\n \ncall\n \nlast\n):\n\n  \nFile\n \n\"c:\\users\\ederenn\\projects\\golem-env\\lib\\site-packages\\pip\\compat\\__init__.py\"\n,\n \nline\n \n73\n,\n \nin\n \nconsole_to_str\n\n    \nreturn\n \ns\n.\ndecode\n(\nsys\n.\n__stdout__\n.\nencoding\n)\n\n\nUnicodeDecodeError\n:\n \n'utf-8'\n \ncodec\n \ncan\n't decode byte 0xf1 in position 4: invalid continuation byte\n\n\n\nDuring handling of the above exception, another exception occurred:\n\n\n\nTraceback (most recent call last):\n\n\n  File \"c:\\users\\ederenn\\projects\\golem-env\\lib\\site-packages\\pip\\basecommand.py\", line 215, in main\n\n\n    status = self.run(options, args)\n\n\n  File \"c:\\users\\ederenn\\projects\\golem-env\\lib\\site-packages\\pip\\commands\\install.py\", line 342, in run\n\n\n    prefix=options.prefix_path,\n\n\n  File \"c:\\users\\ederenn\\projects\\golem-env\\lib\\site-packages\\pip\\req\\req_set.py\", line 784, in install\n\n\n    **kwargs\n\n\n  File \"c:\\users\\ederenn\\projects\\golem-env\\lib\\site-packages\\pip\\req\\req_install.py\", line 878, in install\n\n\n    spinner=spinner,\n\n\n  File \"c:\\users\\ederenn\\projects\\golem-env\\lib\\site-packages\\pip\\utils\\__init__.py\", line 676, in call_subprocess\n\n\n    line = console_to_str(proc.stdout.readline())\n\n\n  File \"c:\\users\\ederenn\\projects\\golem-env\\lib\\site-packages\\pip\\compat\\__init__.py\", line 75, in console_to_str\n\n\n    return s.decode('\nutf_8\n')\n\n\nUnicodeDecodeError: '\nutf\n-\n8\n' codec can'\nt\n \ndecode\n \nbyte\n \n0xf1\n \nin\n \nposition\n \n4\n:\n \ninvalid\n \ncontinuation\n \nbyte\n\n\n\n\n\n\nDescription:\n\n\nYou are missing the 'utf-8' codec on the python installation, you can edit your local pip as work-around\n\n\nResolution:\n\n\nin \npip\\compat\\__init__.py:70\n add this:\n\n\nif\n \nsys\n.\nversion_info\n \n>=\n \n(\n3\n,):\n\n    \ndef\n \nconsole_to_str\n(\ns\n):\n\n        \ntry\n:\n\n            \nreturn\n \ns\n.\ndecode\n(\nsys\n.\n__stdout__\n.\nencoding\n)\n\n        \nexcept\n \nUnicodeDecodeError\n:\n\n            \ntry\n:\n\n                \nreturn\n \ns\n.\ndecode\n(\n'utf_8'\n)\n\n            \nexcept\n \nUnicodeDecodeError\n:\n\n                \nfrom\n \nctypes\n \nimport\n \ncdll\n\n                \nos_encoding\n \n=\n \n'cp'\n \n+\n \nstr\n(\ncdll\n.\nkernel32\n.\nGetACP\n())\n\n                \nreturn\n \ns\n.\ndecode\n(\nos_encoding\n)\n\n\n\n\n\n\nor\n\n\nimport\n \nlocale\n\n\ndef\n \nconsole_to_str\n(\ns\n):\n\n    \nreturn\n \ns\n.\ndecode\n(\nlocale\n.\ngetpreferredencoding\n()\n \nor\n \n\"utf-8\"\n,\n \n'replace'\n)\n\n\n\n\n\n\nFound\n\n\n29 November 2017 by @ederenn\n\n\nRelates to:\n\n\nhttps://github.com/golemfactory/golem/issues/1707\n\n\nAffected version:\n\n\nunknown\n\n\nMac\n\n\nLinux\n\n\nModuleNotFoundError: No module named 'setuptools'\n\n\nSymptoms:\n\n\npython setup.py develop\n shows \n\n\nTraceback\n \n(\nmost\n \nrecent\n \ncall\n \nlast\n):\n\n  \nFile\n \n\"setup.py\"\n,\n \nline\n \n5\n,\n \nin\n \n<\nmodule\n>\n\n    \nfrom\n \nsetuptools\n \nimport\n \nsetup\n\n\nModuleNotFoundError\n:\n \nNo\n \nmodule\n \nnamed\n \n'setuptools'\n\n\nError\n \nin\n \nsys\n.\nexcepthook\n:\n\n\nTraceback\n \n(\nmost\n \nrecent\n \ncall\n \nlast\n):\n\n  \nFile\n \n\"/usr/lib/python3/dist-packages/apport_python_hook.py\"\n,\n \nline\n \n63\n,\n \nin\n \napport_excepthook\n\n    \nfrom\n \napport.fileutils\n \nimport\n \nlikely_packaged\n,\n \nget_recent_crashes\n\n  \nFile\n \n\"/usr/lib/python3/dist-packages/apport/__init__.py\"\n,\n \nline\n \n5\n,\n \nin\n \n<\nmodule\n>\n\n    \nfrom\n \napport.report\n \nimport\n \nReport\n\n  \nFile\n \n\"/usr/lib/python3/dist-packages/apport/report.py\"\n,\n \nline\n \n30\n,\n \nin\n \n<\nmodule\n>\n\n    \nimport\n \napport.fileutils\n\n  \nFile\n \n\"/usr/lib/python3/dist-packages/apport/fileutils.py\"\n,\n \nline\n \n23\n,\n \nin\n \n<\nmodule\n>\n\n    \nfrom\n \napport.packaging_impl\n \nimport\n \nimpl\n \nas\n \npackaging\n\n  \nFile\n \n\"/usr/lib/python3/dist-packages/apport/packaging_impl.py\"\n,\n \nline\n \n23\n,\n \nin\n \n<\nmodule\n>\n\n    \nimport\n \napt\n\n  \nFile\n \n\"/usr/lib/python3/dist-packages/apt/__init__.py\"\n,\n \nline\n \n23\n,\n \nin\n \n<\nmodule\n>\n\n    \nimport\n \napt_pkg\n\n\nModuleNotFoundError\n:\n \nNo\n \nmodule\n \nnamed\n \n'apt_pkg'\n\n\n\nOriginal\n \nexception\n \nwas\n:\n\n\nTraceback\n \n(\nmost\n \nrecent\n \ncall\n \nlast\n):\n\n  \nFile\n \n\"setup.py\"\n,\n \nline\n \n5\n,\n \nin\n \n<\nmodule\n>\n\n    \nfrom\n \nsetuptools\n \nimport\n \nsetup\n\n\nModuleNotFoundError\n:\n \nNo\n \nmodule\n \nnamed\n \n'setuptools'\n\n\n\n\n\n\nDescription:\n\n\nYou are missing the python-dev package, it is required to run golem from source\n\n\nResolution:\n\n\nInstall python3.6-dev\n\n\nsudo apt-get install python3.6-dev -y\n\n\n\n\n\nFound\n\n\n23 feb 2018 by @kascheri12\n\n\nRelates to:\n\n\nhttps://github.com/golemfactory/golem/issues/2184\n\n\nAffected version:\n\n\nAll golem versions, commands are applicable from \n0.12.0\n ( python version upgrade )\n\n\nBuilding TaskCollector failed make: g++-5: Command not found\n\n\nTODO: reproduce and copy full errors\n\n\nSymptoms:\n\n\nsetup.py develop\n shows \n\n\nBuilding TaskCollector failed b'make: g++-5: Command not found\\nmake: *** [Release/taskcollector] Error 127\\n'\n\n\n\n\n\nDescription:\n\n\nYou are missing the \ng\\++-5\n shortcut on your system library folder, you can link it to \ng++\n\n\nResolution:\n\n\nsudo ln -s /usr/bin/g\\+\\+ /usr/bin/g\\+\\+-5\n\n\n\n\n\nFound\n\n\nunknown date by unknown\n\n\nRelates to:\n\n\nNo issue reported\n\n\nAffected version:\n\n\nunknown\n\n\nRunning source\n\n\nThese are the common problems when setting up and running from source\n\n\nCommon\n\n\nargument --log-format: conflicting option\n\n\nTODO: reproduce and copy full errors\n\n\nSymptoms:\n\n\npytest\n shows \n\n\nargparse.ArgumentError: argument --log-format: conflicting option string(s): --log-format\n\n\n\n\n\nDescription:\n\n\nPytest and plugins are installed as an incorrect version, please re-install them from requirements-tst.txt\n\n\nResolution:\n\n\nClear your virtualenv and re install requirements.\n\n\npython3 -m venv .venv --clear\npip install -r requirements.txt -r requirements-test.txt\n\n\n\n\n\nFound\n\n\nunknown date by unknown\n\n\nRelates to:\n\n\nNo issue reported\n\n\nAffected version:\n\n\nunknown\n\n\nWindows\n\n\nMac\n\n\nLinux\n\n\nSyntaxError: invalid syntax\n\n\nSymptoms:\n\n\npython golemapp.py\n shows \n\n\nTraceback\n \n(\nmost\n \nrecent\n \ncall\n \nlast\n):\n\n  \nFile\n \n\"/usr/local/bin/golemapp\"\n,\n \nline\n \n11\n,\n \nin\n \n<\nmodule\n>\n\n    \nload_entry_point\n(\n'golem'\n,\n \n'gui_scripts'\n,\n \n'golemapp'\n)()\n\n  \nFile\n \n\"/usr/local/lib/python3.5/dist-packages/pkg_resources/__init__.py\"\n,\n \nline\n \n572\n,\n \nin\n \nload_entry_point\n\n    \nreturn\n \nget_distribution\n(\ndist\n)\n.\nload_entry_point\n(\ngroup\n,\n \nname\n)\n\n  \nFile\n \n\"/usr/local/lib/python3.5/dist-packages/pkg_resources/__init__.py\"\n,\n \nline\n \n2755\n,\n \nin\n \nload_entry_point\n\n    \nreturn\n \nep\n.\nload\n()\n\n  \nFile\n \n\"/usr/local/lib/python3.5/dist-packages/pkg_resources/__init__.py\"\n,\n \nline\n \n2408\n,\n \nin\n \nload\n\n    \nreturn\n \nself\n.\nresolve\n()\n\n  \nFile\n \n\"/usr/local/lib/python3.5/dist-packages/pkg_resources/__init__.py\"\n,\n \nline\n \n2414\n,\n \nin\n \nresolve\n\n    \nmodule\n \n=\n \n__import__\n(\nself\n.\nmodule_name\n,\n \nfromlist\n=\n[\n'__name__'\n],\n \nlevel\n=\n0\n)\n\n  \nFile\n \n\"/home/kentrendz/golem/golemapp.py\"\n,\n \nline\n \n15\n,\n \nin\n \n<\nmodule\n>\n\n    \nfrom\n \ngolem.node\n \nimport\n \nNode\n\n  \nFile\n \n\"/home/kentrendz/golem/golem/node.py\"\n,\n \nline\n \n4\n,\n \nin\n \n<\nmodule\n>\n\n    \nfrom\n \ngolem.client\n \nimport\n \nClient\n\n  \nFile\n \n\"/home/kentrendz/golem/golem/client.py\"\n,\n \nline\n \n60\n,\n \nin\n \n<\nmodule\n>\n\n    \nfrom\n \ngolem.task.taskserver\n \nimport\n \nTaskServer\n\n  \nFile\n \n\"/home/kentrendz/golem/golem/task/taskserver.py\"\n,\n \nline\n \n25\n,\n \nin\n \n<\nmodule\n>\n\n    \nfrom\n \n.server\n \nimport\n \nconcent\n\n  \nFile\n \n\"/home/kentrendz/golem/golem/task/server/concent.py\"\n,\n \nline\n \n4\n,\n \nin\n \n<\nmodule\n>\n\n    \nfrom\n \ngolem.network.concent.handlers_library\n \nimport\n \nlibrary\n\n  \nFile\n \n\"/home/kentrendz/golem/golem/network/concent/handlers_library.py\"\n,\n \nline\n \n29\n\n    \nself\n.\n_handlers\n:\n \ntyping\n.\nDict\n[\nmessage\n.\nbase\n.\nMessage\n,\n \nweakref\n.\nref\n]\n \n=\n \n{}\n\n                  \n^\n\n\nSyntaxError\n:\n \ninvalid\n \nsyntax\n\n\n\n\n\n\nDescription:\n\n\nThe project switched to python 3.6 as lowest supported version, this error indicates python3.5 can not run the code anymore\n\n\nResolution:\n\n\nInstall python3.6 next to your system python ( do not replace it! )\n\n\nsudo add-apt-repository ppa:jonathonf/python-3.6\nsudo apt-get update && sudo apt-get install python3.6 python3.6-dev python3.6-venv -y\n\n\n\n\n\nor\nBuild python 3.6 including dev and venv.\n\n\nFound\n\n\n22 feb 2018 by @kascheri12\n\n\nRelates to:\n\n\nhttps://github.com/golemfactory/golem/pull/2012\n\n\nAffected version:\n\n\nLast working version on 3.5 is 0.11.0, from 0.12.0 python3.6 is required\n\n\nEnvironmentError: Library \"OpenEXR.so\" not found\n\n\nTODO: reproduce and copy full errors\n\n\nSymptoms:\n\n\ngolem.log\n shows \n\n\nLibrary \"OpenEXR.so\" not found\n\n\n\n\n\nDescription:\n\n\nYou are missing the OpenEXR library in your system library folder, you can copy it from the installed python package to resolve this\n\n\nResolution:\n\n\nsudo cp $HOME/.virtualenvs/golem-env/lib/python2.7/site-packages/OpenEXR.so /usr/lib/\n\n\n\n\n\nor\nCopy the OpenEXR.so from the Golem package\n\n\nFound\n\n\nunknown date by unknown\n\n\nRelates to:\n\n\nNo issue reported\n\n\nAffected version:\n\n\nPre python3, latest version 0.7.1\n\n\nEnvironmentError: Library \"_psutil_linux.so\" not found\n\n\nTODO: reproduce and copy full errors\n\n\nSymptoms:\n\n\ngolem.log\n shows \n\n\nEnvironmentError\n:\n \nLibrary\n \n\"('_psutil_linux.x86_64-linux-gnu.so', '_psutil_linux.so', '/usr/local/lib/python2.7/dist-packages/psutil/_psutil_linux.so')\"\n \nnot\n \nfound\n\n\n\n\n\n\nDescription:\n\n\nYou are missing the Process and system library in your system library folder.\n\n\nResolution:\n\n\nSimplest way to fix this is to create a symlink:\n\n\nsudo ln -s /usr/lib/python2.7/dist-packages/psutil /usr/local/lib/python2.7/dist-packages/psutil\n\n\n\n\n\nand then\n\n\nsudo ln -s /usr/local/lib/python2.7/dist-packages/psutil/_psutil_linux.x86_64-linux-gnu.so /usr/local/lib/python2.7/dist-packages/psutil/_psutil_posix.so\n\n\n\n\n\nFound\n\n\nunknown date by unknown\n\n\nRelates to:\n\n\nNo issue reported\n\n\nAffected version:\n\n\nPre python3, latest version 0.7.1",
            "title": "Common problems"
        },
        {
            "location": "/3.-FAQ/Common-problems/#jump-to-a-section",
            "text": "Jump to a Section:  Installing  Common  Windows  Mac  Linux    Running  Common  Final image has magenta elements  Symptoms:  Description:  Resolution:  Found  Relates to:  Affected version:      Windows  \"Error Starting Docker\" first run of golem after installation  Symptoms  Description  Resolution  Found  Relates to:  Affected version:    \"Error Starting Docker\" after upgrade of golem  Symptoms:  Description:  Resolution  Found  Relates to  Affected version      Mac  Linux    Builds and tests  Common  Enum has Int field  Symptoms:  Description:  Resolution:  Found  Relates to:  Affected version:      Windows  Import error: Twisted requires zope.interface  Symptoms:  Description:  Resolution:  Found  Relates to:  Affected version:    ImportError: No system module 'pywintypes'  Symptoms:  Description:  Resolution:  Found  Relates to:  Affected version:    EnvironmentError: Library \"libgcc_s_dw2-1.dll\" not found  Symptoms:  Description:  Resolution:  Found  Relates to:  Affected version:    ImportError: No module named win32api  Symptoms:  Description:  Resolution:  Found  Relates to:  Affected version:    Bad magic number in ...  Symptoms:  Description:  Resolution:  Found  Relates to:  Affected version:    UnicodeDecodeError: 'utf-8' codec can't decode  Symptoms:  Description:  Resolution:  Found  Relates to:  Affected version:      Mac  Linux  ModuleNotFoundError: No module named 'setuptools'  Symptoms:  Description:  Resolution:  Found  Relates to:  Affected version:    Building TaskCollector failed make: g++-5: Command not found  Symptoms:  Description:  Resolution:  Found  Relates to:  Affected version:        Running source  Common  argument --log-format: conflicting option  Symptoms:  Description:  Resolution:  Found  Relates to:  Affected version:      Windows  Mac  Linux  SyntaxError: invalid syntax  Symptoms:  Description:  Resolution:  Found  Relates to:  Affected version:    EnvironmentError: Library \"OpenEXR.so\" not found  Symptoms:  Description:  Resolution:  Found  Relates to:  Affected version:    EnvironmentError: Library \"_psutil_linux.so\" not found  Symptoms:  Description:  Resolution:  Found  Relates to:  Affected version:",
            "title": "Jump to a Section:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#installing",
            "text": "These are the common problems while installing the released versions",
            "title": "Installing"
        },
        {
            "location": "/3.-FAQ/Common-problems/#common",
            "text": "",
            "title": "Common"
        },
        {
            "location": "/3.-FAQ/Common-problems/#windows",
            "text": "",
            "title": "Windows"
        },
        {
            "location": "/3.-FAQ/Common-problems/#mac",
            "text": "",
            "title": "Mac"
        },
        {
            "location": "/3.-FAQ/Common-problems/#linux",
            "text": "",
            "title": "Linux"
        },
        {
            "location": "/3.-FAQ/Common-problems/#running",
            "text": "These are the common problems while running the released versions",
            "title": "Running"
        },
        {
            "location": "/3.-FAQ/Common-problems/#common_1",
            "text": "",
            "title": "Common"
        },
        {
            "location": "/3.-FAQ/Common-problems/#final-image-has-magenta-elements",
            "text": "TODO: reproduce and copy full errors",
            "title": "Final image has magenta elements"
        },
        {
            "location": "/3.-FAQ/Common-problems/#symptoms",
            "text": "On completion of a blender task on the network the image shows magenta elements where it should not.",
            "title": "Symptoms:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#description",
            "text": "When the textures for rendering are missing it replaces them with these magenta elements. Please include all required texture files in the golem-task.",
            "title": "Description:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#resolution",
            "text": "Check that you're using relative paths in your scene and that you have added all the required resources during task definition.",
            "title": "Resolution:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#found",
            "text": "unknown date by unknown",
            "title": "Found"
        },
        {
            "location": "/3.-FAQ/Common-problems/#relates-to",
            "text": "No issue reported",
            "title": "Relates to:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#affected-version",
            "text": "unknown",
            "title": "Affected version:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#windows_1",
            "text": "",
            "title": "Windows"
        },
        {
            "location": "/3.-FAQ/Common-problems/#error-starting-docker-first-run-of-golem-after-installation",
            "text": "",
            "title": "\"Error Starting Docker\" first run of golem after installation"
        },
        {
            "location": "/3.-FAQ/Common-problems/#symptoms_1",
            "text": "When  golem  starts it shows the error \"Error Starting Docker\"   image::https://user-images.githubusercontent.com/10008353/36040756-b3bc64ae-0dc6-11e8-84e4-08fa270300d9.png[Error starting docker]",
            "title": "Symptoms"
        },
        {
            "location": "/3.-FAQ/Common-problems/#description_1",
            "text": "Docker requires specific settings to be able to run, check the included docker quickstart terminal for the full error and solve that first",
            "title": "Description"
        },
        {
            "location": "/3.-FAQ/Common-problems/#resolution_1",
            "text": "close Golem  hit windows key and type \"Docker Quickstart Terminal\"  wait for it to start, this can take a while  If any error appears, follow the proposed resolution",
            "title": "Resolution"
        },
        {
            "location": "/3.-FAQ/Common-problems/#found_1",
            "text": "20 Dec 2017 by @ederenn",
            "title": "Found"
        },
        {
            "location": "/3.-FAQ/Common-problems/#relates-to_1",
            "text": "None",
            "title": "Relates to:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#affected-version_1",
            "text": "None",
            "title": "Affected version:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#error-starting-docker-after-upgrade-of-golem",
            "text": "",
            "title": "\"Error Starting Docker\" after upgrade of golem"
        },
        {
            "location": "/3.-FAQ/Common-problems/#symptoms_2",
            "text": "When  golem  starts it shows the error \"Error Starting Docker\"    image::https://user-images.githubusercontent.com/10008353/36040756-b3bc64ae-0dc6-11e8-84e4-08fa270300d9.png[Error starting docker]   When starting  Docker Quickstart Terminal  it shows error \"Error creating machine\"   image::https://user-images.githubusercontent.com/10008353/36040768-bcba4b02-0dc6-11e8-829f-ff2bb13af2e9.png[Error creating machine]   In  golem.log  it shows  ERROR    golem.docker.manager    DockerMachine: failed to start the VM: Command '['docker-machine', 'restart', 'golem']' returned non-zero exit status 1.",
            "title": "Symptoms:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#description_2",
            "text": "During the upgrade of golem, VirtualBox also got updated, this caused the existing docker-machines to stop working.",
            "title": "Description:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#resolution_2",
            "text": "close Golem  close VirtualBox in Task Manager  hit windows key and type \"Add or remove programs\"  then search for \"virtual box\" and select \"modify\"  click modify -> repair  restart",
            "title": "Resolution"
        },
        {
            "location": "/3.-FAQ/Common-problems/#found_2",
            "text": "20 Dec 2017 by @ederenn",
            "title": "Found"
        },
        {
            "location": "/3.-FAQ/Common-problems/#relates-to_2",
            "text": "https://github.com/golemfactory/golem/issues/1786",
            "title": "Relates to"
        },
        {
            "location": "/3.-FAQ/Common-problems/#affected-version_2",
            "text": "golem 0.9.1 and before",
            "title": "Affected version"
        },
        {
            "location": "/3.-FAQ/Common-problems/#mac_1",
            "text": "",
            "title": "Mac"
        },
        {
            "location": "/3.-FAQ/Common-problems/#linux_1",
            "text": "",
            "title": "Linux"
        },
        {
            "location": "/3.-FAQ/Common-problems/#builds-and-tests",
            "text": "These are the common problems while running tests and building packages.",
            "title": "Builds and tests"
        },
        {
            "location": "/3.-FAQ/Common-problems/#common_2",
            "text": "",
            "title": "Common"
        },
        {
            "location": "/3.-FAQ/Common-problems/#enum-has-int-field",
            "text": "TODO: reproduce and copy full errors",
            "title": "Enum has Int field"
        },
        {
            "location": "/3.-FAQ/Common-problems/#symptoms_3",
            "text": "python setup.py develop  shows   Enum has Int field",
            "title": "Symptoms:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#description_3",
            "text": "A dependency upgraded enum34 to a wrong version, please uninstall it.",
            "title": "Description:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#resolution_3",
            "text": "Run with virtualenv enabled:  pip uninstall enum34",
            "title": "Resolution:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#found_3",
            "text": "unknown date by unknown",
            "title": "Found"
        },
        {
            "location": "/3.-FAQ/Common-problems/#relates-to_3",
            "text": "No issue reported",
            "title": "Relates to:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#affected-version_3",
            "text": "unknown",
            "title": "Affected version:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#windows_2",
            "text": "",
            "title": "Windows"
        },
        {
            "location": "/3.-FAQ/Common-problems/#import-error-twisted-requires-zopeinterface",
            "text": "TODO: reproduce and copy full errors",
            "title": "Import error: Twisted requires zope.interface"
        },
        {
            "location": "/3.-FAQ/Common-problems/#symptoms_4",
            "text": "pip install -r requirements.txt  shows   Import error: Twisted requires zope.interface 3.6.0 or later: no module named zope.interface.",
            "title": "Symptoms:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#description_4",
            "text": "zope.interface  was installed incorrectly. please re-install it with easy_install as non-admin user",
            "title": "Description:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#resolution_4",
            "text": "Run in non-admin cmd with venv enabled:  easy_install zope.interface",
            "title": "Resolution:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#found_4",
            "text": "unknown date by unknown",
            "title": "Found"
        },
        {
            "location": "/3.-FAQ/Common-problems/#relates-to_4",
            "text": "No issue reported",
            "title": "Relates to:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#affected-version_4",
            "text": "unknown",
            "title": "Affected version:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#importerror-no-system-module-pywintypes",
            "text": "TODO: reproduce and copy full errors",
            "title": "ImportError: No system module 'pywintypes'"
        },
        {
            "location": "/3.-FAQ/Common-problems/#symptoms_5",
            "text": "pip install -r requirements.txt  shows   ImportError :   No   system   module   'pywintypes'   ( pywintypes27 . dll )",
            "title": "Symptoms:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#description_5",
            "text": "pywin32  was installed incorrectly, it is missing a dll. please install the dll by downloading the correct version and adding it to the package or somewhere in the PATH",
            "title": "Description:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#resolution_5",
            "text": "Download pywin32 https://sourceforge.net/projects/pywin32/files/pywin32/Build%20220/[from this site] install and copy  $PYTHON/Lib/site-packages/pywin32_system32/pywintypes36.dll  into  $PYTHON/Lib/site-packages/win32/  or  Add  $PYTHON/Lib/site-packages/pypiwin32_system32  to the system PATH and restart your cmd",
            "title": "Resolution:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#found_5",
            "text": "23-nov-2017 by @maaktweluit during development of #1400  Before 0.7.1 by unknown",
            "title": "Found"
        },
        {
            "location": "/3.-FAQ/Common-problems/#relates-to_5",
            "text": "No issue reported",
            "title": "Relates to:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#affected-version_5",
            "text": "external dependency",
            "title": "Affected version:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#environmenterror-library-libgcc_s_dw2-1dll-not-found",
            "text": "TODO: reproduce and copy full errors",
            "title": "EnvironmentError: Library \"libgcc_s_dw2-1.dll\" not found"
        },
        {
            "location": "/3.-FAQ/Common-problems/#symptoms_6",
            "text": "When building in the mingw32 terminal  python setup.py develop  shows   EnvironmentError :   Library   \"libgcc_s_dw2-1.dll\"   not   found",
            "title": "Symptoms:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#description_6",
            "text": "Your mingw32 installation is missing a required library, please download and add it manually.",
            "title": "Description:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#resolution_6",
            "text": "Download the package gcc-core-4.4.0-mingw32-dll.tar.gz https://sourceforge.net/projects/mingw/files/MinGW/Base/gcc/Version4/Previous%20Release%20gcc-4.4.0/[from here]. Copy required dll from the bin folder into your mingw bin folder.",
            "title": "Resolution:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#found_6",
            "text": "unknown date by unknown",
            "title": "Found"
        },
        {
            "location": "/3.-FAQ/Common-problems/#relates-to_6",
            "text": "No issue reported",
            "title": "Relates to:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#affected-version_6",
            "text": "unknown",
            "title": "Affected version:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#importerror-no-module-named-win32api",
            "text": "TODO: reproduce and copy full errors",
            "title": "ImportError: No module named win32api"
        },
        {
            "location": "/3.-FAQ/Common-problems/#symptoms_7",
            "text": "When running  python setup.py develop  it shows   ImportError :   No   module   named   win32api",
            "title": "Symptoms:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#description_7",
            "text": "pypiwin32 failed to install, try installing it without cache",
            "title": "Description:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#resolution_7",
            "text": "Run this while your venv is loaded.  python -m pip install --no-cache pypiwin32",
            "title": "Resolution:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#found_7",
            "text": "unknown date by unknown",
            "title": "Found"
        },
        {
            "location": "/3.-FAQ/Common-problems/#relates-to_7",
            "text": "No issue reported",
            "title": "Relates to:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#affected-version_7",
            "text": "unknown",
            "title": "Affected version:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#bad-magic-number-in",
            "text": "",
            "title": "Bad magic number in ..."
        },
        {
            "location": "/3.-FAQ/Common-problems/#symptoms_8",
            "text": "When running  python setup.py develop  it shows   Bad magic number in ...",
            "title": "Symptoms:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#description_8",
            "text": "There is an error with your pyc files, please delete the and run again.",
            "title": "Description:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#resolution_8",
            "text": "Run this in your golem source folder.  find . -name '*.pyc' -delete",
            "title": "Resolution:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#found_8",
            "text": "unknown date by unknown",
            "title": "Found"
        },
        {
            "location": "/3.-FAQ/Common-problems/#relates-to_8",
            "text": "No issue reported",
            "title": "Relates to:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#affected-version_8",
            "text": "unknown",
            "title": "Affected version:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#unicodedecodeerror-utf-8-codec-cant-decode",
            "text": "",
            "title": "UnicodeDecodeError: 'utf-8' codec can't decode"
        },
        {
            "location": "/3.-FAQ/Common-problems/#symptoms_9",
            "text": "pip install -r requirements.txt  shows   Exception :  Traceback   ( most   recent   call   last ): \n   File   \"c:\\users\\ederenn\\projects\\golem-env\\lib\\site-packages\\pip\\compat\\__init__.py\" ,   line   73 ,   in   console_to_str \n     return   s . decode ( sys . __stdout__ . encoding )  UnicodeDecodeError :   'utf-8'   codec   can 't decode byte 0xf1 in position 4: invalid continuation byte  During handling of the above exception, another exception occurred:  Traceback (most recent call last):    File \"c:\\users\\ederenn\\projects\\golem-env\\lib\\site-packages\\pip\\basecommand.py\", line 215, in main      status = self.run(options, args)    File \"c:\\users\\ederenn\\projects\\golem-env\\lib\\site-packages\\pip\\commands\\install.py\", line 342, in run      prefix=options.prefix_path,    File \"c:\\users\\ederenn\\projects\\golem-env\\lib\\site-packages\\pip\\req\\req_set.py\", line 784, in install      **kwargs    File \"c:\\users\\ederenn\\projects\\golem-env\\lib\\site-packages\\pip\\req\\req_install.py\", line 878, in install      spinner=spinner,    File \"c:\\users\\ederenn\\projects\\golem-env\\lib\\site-packages\\pip\\utils\\__init__.py\", line 676, in call_subprocess      line = console_to_str(proc.stdout.readline())    File \"c:\\users\\ederenn\\projects\\golem-env\\lib\\site-packages\\pip\\compat\\__init__.py\", line 75, in console_to_str      return s.decode(' utf_8 ')  UnicodeDecodeError: ' utf - 8 ' codec can' t   decode   byte   0xf1   in   position   4 :   invalid   continuation   byte",
            "title": "Symptoms:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#description_9",
            "text": "You are missing the 'utf-8' codec on the python installation, you can edit your local pip as work-around",
            "title": "Description:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#resolution_9",
            "text": "in  pip\\compat\\__init__.py:70  add this:  if   sys . version_info   >=   ( 3 ,): \n     def   console_to_str ( s ): \n         try : \n             return   s . decode ( sys . __stdout__ . encoding ) \n         except   UnicodeDecodeError : \n             try : \n                 return   s . decode ( 'utf_8' ) \n             except   UnicodeDecodeError : \n                 from   ctypes   import   cdll \n                 os_encoding   =   'cp'   +   str ( cdll . kernel32 . GetACP ()) \n                 return   s . decode ( os_encoding )   or  import   locale  def   console_to_str ( s ): \n     return   s . decode ( locale . getpreferredencoding ()   or   \"utf-8\" ,   'replace' )",
            "title": "Resolution:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#found_9",
            "text": "29 November 2017 by @ederenn",
            "title": "Found"
        },
        {
            "location": "/3.-FAQ/Common-problems/#relates-to_9",
            "text": "https://github.com/golemfactory/golem/issues/1707",
            "title": "Relates to:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#affected-version_9",
            "text": "unknown",
            "title": "Affected version:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#mac_2",
            "text": "",
            "title": "Mac"
        },
        {
            "location": "/3.-FAQ/Common-problems/#linux_2",
            "text": "",
            "title": "Linux"
        },
        {
            "location": "/3.-FAQ/Common-problems/#modulenotfounderror-no-module-named-setuptools",
            "text": "",
            "title": "ModuleNotFoundError: No module named 'setuptools'"
        },
        {
            "location": "/3.-FAQ/Common-problems/#symptoms_10",
            "text": "python setup.py develop  shows   Traceback   ( most   recent   call   last ): \n   File   \"setup.py\" ,   line   5 ,   in   < module > \n     from   setuptools   import   setup  ModuleNotFoundError :   No   module   named   'setuptools'  Error   in   sys . excepthook :  Traceback   ( most   recent   call   last ): \n   File   \"/usr/lib/python3/dist-packages/apport_python_hook.py\" ,   line   63 ,   in   apport_excepthook \n     from   apport.fileutils   import   likely_packaged ,   get_recent_crashes \n   File   \"/usr/lib/python3/dist-packages/apport/__init__.py\" ,   line   5 ,   in   < module > \n     from   apport.report   import   Report \n   File   \"/usr/lib/python3/dist-packages/apport/report.py\" ,   line   30 ,   in   < module > \n     import   apport.fileutils \n   File   \"/usr/lib/python3/dist-packages/apport/fileutils.py\" ,   line   23 ,   in   < module > \n     from   apport.packaging_impl   import   impl   as   packaging \n   File   \"/usr/lib/python3/dist-packages/apport/packaging_impl.py\" ,   line   23 ,   in   < module > \n     import   apt \n   File   \"/usr/lib/python3/dist-packages/apt/__init__.py\" ,   line   23 ,   in   < module > \n     import   apt_pkg  ModuleNotFoundError :   No   module   named   'apt_pkg'  Original   exception   was :  Traceback   ( most   recent   call   last ): \n   File   \"setup.py\" ,   line   5 ,   in   < module > \n     from   setuptools   import   setup  ModuleNotFoundError :   No   module   named   'setuptools'",
            "title": "Symptoms:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#description_10",
            "text": "You are missing the python-dev package, it is required to run golem from source",
            "title": "Description:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#resolution_10",
            "text": "Install python3.6-dev  sudo apt-get install python3.6-dev -y",
            "title": "Resolution:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#found_10",
            "text": "23 feb 2018 by @kascheri12",
            "title": "Found"
        },
        {
            "location": "/3.-FAQ/Common-problems/#relates-to_10",
            "text": "https://github.com/golemfactory/golem/issues/2184",
            "title": "Relates to:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#affected-version_10",
            "text": "All golem versions, commands are applicable from  0.12.0  ( python version upgrade )",
            "title": "Affected version:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#building-taskcollector-failed-make-g-5-command-not-found",
            "text": "TODO: reproduce and copy full errors",
            "title": "Building TaskCollector failed make: g++-5: Command not found"
        },
        {
            "location": "/3.-FAQ/Common-problems/#symptoms_11",
            "text": "setup.py develop  shows   Building TaskCollector failed b'make: g++-5: Command not found\\nmake: *** [Release/taskcollector] Error 127\\n'",
            "title": "Symptoms:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#description_11",
            "text": "You are missing the  g\\++-5  shortcut on your system library folder, you can link it to  g++",
            "title": "Description:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#resolution_11",
            "text": "sudo ln -s /usr/bin/g\\+\\+ /usr/bin/g\\+\\+-5",
            "title": "Resolution:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#found_11",
            "text": "unknown date by unknown",
            "title": "Found"
        },
        {
            "location": "/3.-FAQ/Common-problems/#relates-to_11",
            "text": "No issue reported",
            "title": "Relates to:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#affected-version_11",
            "text": "unknown",
            "title": "Affected version:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#running-source",
            "text": "These are the common problems when setting up and running from source",
            "title": "Running source"
        },
        {
            "location": "/3.-FAQ/Common-problems/#common_3",
            "text": "",
            "title": "Common"
        },
        {
            "location": "/3.-FAQ/Common-problems/#argument-log-format-conflicting-option",
            "text": "TODO: reproduce and copy full errors",
            "title": "argument --log-format: conflicting option"
        },
        {
            "location": "/3.-FAQ/Common-problems/#symptoms_12",
            "text": "pytest  shows   argparse.ArgumentError: argument --log-format: conflicting option string(s): --log-format",
            "title": "Symptoms:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#description_12",
            "text": "Pytest and plugins are installed as an incorrect version, please re-install them from requirements-tst.txt",
            "title": "Description:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#resolution_12",
            "text": "Clear your virtualenv and re install requirements.  python3 -m venv .venv --clear\npip install -r requirements.txt -r requirements-test.txt",
            "title": "Resolution:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#found_12",
            "text": "unknown date by unknown",
            "title": "Found"
        },
        {
            "location": "/3.-FAQ/Common-problems/#relates-to_12",
            "text": "No issue reported",
            "title": "Relates to:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#affected-version_12",
            "text": "unknown",
            "title": "Affected version:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#windows_3",
            "text": "",
            "title": "Windows"
        },
        {
            "location": "/3.-FAQ/Common-problems/#mac_3",
            "text": "",
            "title": "Mac"
        },
        {
            "location": "/3.-FAQ/Common-problems/#linux_3",
            "text": "",
            "title": "Linux"
        },
        {
            "location": "/3.-FAQ/Common-problems/#syntaxerror-invalid-syntax",
            "text": "",
            "title": "SyntaxError: invalid syntax"
        },
        {
            "location": "/3.-FAQ/Common-problems/#symptoms_13",
            "text": "python golemapp.py  shows   Traceback   ( most   recent   call   last ): \n   File   \"/usr/local/bin/golemapp\" ,   line   11 ,   in   < module > \n     load_entry_point ( 'golem' ,   'gui_scripts' ,   'golemapp' )() \n   File   \"/usr/local/lib/python3.5/dist-packages/pkg_resources/__init__.py\" ,   line   572 ,   in   load_entry_point \n     return   get_distribution ( dist ) . load_entry_point ( group ,   name ) \n   File   \"/usr/local/lib/python3.5/dist-packages/pkg_resources/__init__.py\" ,   line   2755 ,   in   load_entry_point \n     return   ep . load () \n   File   \"/usr/local/lib/python3.5/dist-packages/pkg_resources/__init__.py\" ,   line   2408 ,   in   load \n     return   self . resolve () \n   File   \"/usr/local/lib/python3.5/dist-packages/pkg_resources/__init__.py\" ,   line   2414 ,   in   resolve \n     module   =   __import__ ( self . module_name ,   fromlist = [ '__name__' ],   level = 0 ) \n   File   \"/home/kentrendz/golem/golemapp.py\" ,   line   15 ,   in   < module > \n     from   golem.node   import   Node \n   File   \"/home/kentrendz/golem/golem/node.py\" ,   line   4 ,   in   < module > \n     from   golem.client   import   Client \n   File   \"/home/kentrendz/golem/golem/client.py\" ,   line   60 ,   in   < module > \n     from   golem.task.taskserver   import   TaskServer \n   File   \"/home/kentrendz/golem/golem/task/taskserver.py\" ,   line   25 ,   in   < module > \n     from   .server   import   concent \n   File   \"/home/kentrendz/golem/golem/task/server/concent.py\" ,   line   4 ,   in   < module > \n     from   golem.network.concent.handlers_library   import   library \n   File   \"/home/kentrendz/golem/golem/network/concent/handlers_library.py\" ,   line   29 \n     self . _handlers :   typing . Dict [ message . base . Message ,   weakref . ref ]   =   {} \n                   ^  SyntaxError :   invalid   syntax",
            "title": "Symptoms:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#description_13",
            "text": "The project switched to python 3.6 as lowest supported version, this error indicates python3.5 can not run the code anymore",
            "title": "Description:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#resolution_13",
            "text": "Install python3.6 next to your system python ( do not replace it! )  sudo add-apt-repository ppa:jonathonf/python-3.6\nsudo apt-get update && sudo apt-get install python3.6 python3.6-dev python3.6-venv -y  or\nBuild python 3.6 including dev and venv.",
            "title": "Resolution:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#found_13",
            "text": "22 feb 2018 by @kascheri12",
            "title": "Found"
        },
        {
            "location": "/3.-FAQ/Common-problems/#relates-to_13",
            "text": "https://github.com/golemfactory/golem/pull/2012",
            "title": "Relates to:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#affected-version_13",
            "text": "Last working version on 3.5 is 0.11.0, from 0.12.0 python3.6 is required",
            "title": "Affected version:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#environmenterror-library-openexrso-not-found",
            "text": "TODO: reproduce and copy full errors",
            "title": "EnvironmentError: Library \"OpenEXR.so\" not found"
        },
        {
            "location": "/3.-FAQ/Common-problems/#symptoms_14",
            "text": "golem.log  shows   Library \"OpenEXR.so\" not found",
            "title": "Symptoms:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#description_14",
            "text": "You are missing the OpenEXR library in your system library folder, you can copy it from the installed python package to resolve this",
            "title": "Description:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#resolution_14",
            "text": "sudo cp $HOME/.virtualenvs/golem-env/lib/python2.7/site-packages/OpenEXR.so /usr/lib/  or\nCopy the OpenEXR.so from the Golem package",
            "title": "Resolution:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#found_14",
            "text": "unknown date by unknown",
            "title": "Found"
        },
        {
            "location": "/3.-FAQ/Common-problems/#relates-to_14",
            "text": "No issue reported",
            "title": "Relates to:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#affected-version_14",
            "text": "Pre python3, latest version 0.7.1",
            "title": "Affected version:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#environmenterror-library-_psutil_linuxso-not-found",
            "text": "TODO: reproduce and copy full errors",
            "title": "EnvironmentError: Library \"_psutil_linux.so\" not found"
        },
        {
            "location": "/3.-FAQ/Common-problems/#symptoms_15",
            "text": "golem.log  shows   EnvironmentError :   Library   \"('_psutil_linux.x86_64-linux-gnu.so', '_psutil_linux.so', '/usr/local/lib/python2.7/dist-packages/psutil/_psutil_linux.so')\"   not   found",
            "title": "Symptoms:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#description_15",
            "text": "You are missing the Process and system library in your system library folder.",
            "title": "Description:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#resolution_15",
            "text": "Simplest way to fix this is to create a symlink:  sudo ln -s /usr/lib/python2.7/dist-packages/psutil /usr/local/lib/python2.7/dist-packages/psutil  and then  sudo ln -s /usr/local/lib/python2.7/dist-packages/psutil/_psutil_linux.x86_64-linux-gnu.so /usr/local/lib/python2.7/dist-packages/psutil/_psutil_posix.so",
            "title": "Resolution:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#found_15",
            "text": "unknown date by unknown",
            "title": "Found"
        },
        {
            "location": "/3.-FAQ/Common-problems/#relates-to_15",
            "text": "No issue reported",
            "title": "Relates to:"
        },
        {
            "location": "/3.-FAQ/Common-problems/#affected-version_15",
            "text": "Pre python3, latest version 0.7.1",
            "title": "Affected version:"
        },
        {
            "location": "/3.-FAQ/FAQ/",
            "text": "Jump to a Section:\n\n\n\n\n\n\nJump to a Section:\n\n\nHow and why Golem will change the world (or at least the Internet)\n\n\nWhat is Golem?\n\n\nWho can use Golem and why?\n\n\nWhat is the current state of the project and the way ahead?\n\n\nHow Golem will help to build a new Internet of tomorrow?\n\n\nWhen will the latest version be released?\n\n\n\n\n\n\nGolem technology\n\n\nHow Golem works?\n\n\nHow are your going to verify computations?\n\n\nWhy are you making it decentralized?\n\n\nWhy are you using Ethereum?\n\n\nAre you using some external solutions / libraries?\n\n\n\n\n\n\nGolem business model\n\n\nHow will payments work in Golem?\n\n\nWhat are use cases for Golem?\n\n\nWhy computing prices will be lower with the Golem Network?\n\n\nWhy Golem is unlikely to be successfully copied?\n\n\nHow do you ensure fairness of task assignment in the network?\n\n\nHow does Golem compare to current/real supercomputers?\n\n\nWhen will you support GPUs and How?\n\n\n\n\n\n\nSafety and Security\n\n\nCan you use private data for computation? Can providers see your data?\n\n\nWhat if someone would like to use Golem for DDoS, Botnet or other illegal activities?\n\n\nIs it safe?\n\n\n\n\n\n\nUsing Golem\n\n\nInstalling Golem\n\n\nApp Overview\n\n\nWhat are the optimal settings for my machine to run Golem?\n\n\nHow much money can I expect to make with Golem?\n\n\nFeature Requests\n\n\nWhat do I do if something goes wrong?\n\n\nMy task is stuck and not rendering\n\n\n\n\n\n\nComparing Golem to Other Services\n\n\nGolem vs iExec\n\n\nGolem vs SONM\n\n\nGolem vs BOINC\n\n\nDoes Golem Factory invest in other businesses? ICOs?\n\n\n\n\n\n\nGolem Token\n\n\nWhat is the purpose of Golem Network Token?\n\n\nCan I deposit and withdraw real GNT during the Alpha test?\n\n\nWhere to Purchase GNT\n\n\nWhat wallet should I use to store GNT?\n\n\n\"I sent my tokens to the wrong address and my GNT is gone\"\n\n\n\n\n\n\n\n\n\n\n\n\nRead our Whitepaper (ctrl + click to open in new tab)\n\n\n\n\nHow and why Golem will change the world (or at least the Internet)\n\n\nWhat is Golem?\n\n\nGolem connects computers in a peer-to-peer network, enabling both application owners and individual users (\"\nrequestors\n\") to rent resources of other users\u2019 (\"\nproviders\n\") machines. These resources can be used to complete tasks requiring any amount of computation time and capacity. Today, such resources are supplied by centralized cloud providers which, are constrained by closed networks, proprietary payment systems, and hard-coded provisioning operations. Also core to Golem\u2019s built-in feature set is a dedicated Ethereum-based transaction system, which enables direct payments between requestors, providers, and software developers.\n\n\nThe function of Golem as the backbone of a decentralized market for computing power can be considered both Infrastructure-as-a-Service (IaaS), as well as Platform-as-a-Service (PaaS). However, Golem reveals its true potential by adding dedicated software integrations to the equation. Any interested party is free to create and deploy software to the Golem network by publishing it to the Application Registry. Together with the Transaction Framework, developers can also extend and customize the payment mechanism resulting in unique mechanisms for monetizing software.\n\n\nWho can use Golem and why?\n\n\nThe short answer is that Golem can be used (and should be used) by everyone who owns a computer.  \n\n\nThe long answer is that how you use Golem depends on what you use your computer for.\n\n\nIf you are an average user, you are likely to be a provider. Golem gives your computer work to do when it is not being used then you earn money for tasks completed. The money comes from requestors, paying providers for using their machines.\n\n\nIf for any purpose you need more computing time than you have on your own machine - because you are a CGI professional, scientist, financial market tycoon, cryptocurrency miner or anyone else fitting in the wide range of Golem\u2019s use cases - then you can use Golem as a requestor. You submit your task to the network, it is completed by providers and you pay for their machines' time. Additionally, if the task you want to perform needs proprietary software - you can get it through the App Registry.\n\n\nIf you are an owner of an open source or proprietary software (like a rendering engine, analytical packages, trading robots, specialised scientific packages, or a Dapp), you may want to use Golem as a distribution channel and (if you opt to charge for use) as a marketplace. \n\n\nWhat is the current state of the project and the way ahead?\n\n\nThe alpha version was launched in August 2016, with the code available for review. The alpha version (codename Brass Golem) will be focused on CGI rendering in Blender (blender.org) and will be our MVP, although we expect it will be useful for blender users and once we move to release version will have a group of dedicated users.\n\n\nYou can follow our Brass Golem KanBan here: https://trello.com/b/YL1qZ2pZ/brass-kanban\n\n\n\n\nBrass Golem\n \n\n\n\n\n\n\n...these are created to fulfill one goal\n\n\n\n\nBrass Golem is where we are at the moment with our MVP, in alpha testing now. This current version of Golem is only focused on rendering in Blender and LuxRender, and although it will be useful to CGI artists, we consider CGI rendering to be one use case among many, and also a training ground. Brass Golem should be frozen within 6 months after the end of our crowdfunding period and a full battery of tests. Even though we do not expect that Blender CGI rendering will create enough turnover to justify all the work we have put into the project, this will be the first decentralized computation market.\n\n\n\n\nClay Golem\n \n\n\n\n\n\n\nThere is a chance (...) that a Clay Golem will be possessed by a chaotic evil spirit. \n\n\n\n\nClay Golem is a big leap from the Brass milestone. Clay introduces the Task API and the Application Registry, which together are going to make Golem a multi-purpose, generalized distributed computation solution. Developers now have the means to integrate with Golem. This advance, however, may come at the cost of compromised stability and security, so this version should be considered an experiment for early adopters and tech enthusiasts. Prototypes, new ideas and solutions will be built on Clay.\n\n\n\n\nStone Golem\n \n\n\n\n\n\n\nStone Golems do not revoke their creators control like (...) Clay Golems.\n\n\n\n\nStone Golem will add more security and stability, but also enhance the functionalities implemented in Clay. An advanced version of the Task API will be introduced. The Application Registry will be complemented by the Certification Mechanism that will create a community-driven trust network for applications. Also, the Transaction Framework will create an environment that will allow Golem to be used in a SaaS model.\n\n\n\n\nIron Golem\n\n\n\n\n\n\nIron Golems are made of iron and are among the strongest type of Golem. They never revoke the control of the wizard that created them.\n\n\n\n\nIron is a deeply tested Golem that gives more freedom to developers, allowing them to create applications that use an Internet connection or applications that run outside the sandbox. Of course, the decision to accept higher-risk applications will still belong to the providers renting their computing power. Iron Golem should be robust, highly resistant to attacks, stable and scalable. Iron will also introduce various tools for developers that will make application creation far easier. Finally, the Golem Standard Library will be implemented.\n\n\nHow Golem will help to build a new Internet of tomorrow?\n\n\nWe believe, that in the future, the Internet will be a truly decentralized network, enabling users to securely and directly exchange content, without middlemen. Accordingly, Golem will be used not only to compute specific tasks, but also to bulk-rent machines in order to perform operations within a self-organizing network. Of course, this will require the simultaneous development of other technologies, many of which have gained significant traction in recent years. \n\n\nBetter data-sharing technologies are necessary, but taking into account the ongoing development of IPFS/Filecoin and Swarm, the appropriate solutions seem to be within reach. Eventually, the Ethereum network will become more scalable, more efficient, and include a fully functional network of micropayment channels. Once these technologies become available, it is easy to imagine Golem primarily as a platform for microservices, allowing users to run both small (e.g. a note-taking app) and large (e.g. a streaming service) applications in a completely decentralized way. Although ambitious, this vision seems to be the ultimate argument for Golem\u2019s long-term potential.\n\n\nWhen will the latest version be released?\n\n\nRight now we cannot set a specific date for our next release. The best I can say is \"as soon as its ready\". While this answer in not particularly exciting, our technology certainly is.\n\n\nWe are working on brand-new, uniquely complex, and highly disruptive technology every day. This requires careful research, execution, and testing. We want to release the most secure and user friendly versions of the Golem App. This is not only important for Golem and our users, it is integral to the health of the blockchain ecosystem.\n\n\nIf you want to stay up to date on our progress, please follow our Rocket Chat. We post announcements and dev updates there. You can also connect with our team and fellow users to learn more about Golem. Our Github is also a good source if you want to take a look at our code.\n\n\nhttps://chat.golem.network\n\n\nhttps://github.com/golemfactory/golem\n\n\nFor specific updates on Brass progress, check our KanBan: \n\n\nhttps://trello.com/b/YL1qZ2pZ/brass-kanban\n\n\nThanks for your support and patience while we deliver our product!\n\n\nback to top\n\n\nGolem technology\n\n\nHow Golem works?\n\n\nGolem is a p2p network, ie. there is no central server and users are equally privileged. People who want to compute tasks and people who have computer power to rent broadcast their offers in the network. Golem's transaction system matches providers and requestors, taking into account prices, reputations and their machines' performance. Resources, ie. files needed for computation are sent to provider's machine. After computation is completed, the provider's app sends back results to the requestor's app. If the result passes our verification process, the provider is paid. If someone tries to cheat, for instance sends bad results or doesn't pay, he/she will hurt their reputation and won't be chosen again for computations.\n\n\nCheck our \nblog post\n to learn more.\n\n\nHow are your going to verify computations?\n\n\nThere will be different methods depending on the task type. In the future, a user who adds a new task can implement a new verification method that suits them. Possible solutions may involve: \n\n simple correctness: checking of the result, eg. proof-of-work,\n\n redundant computation: ie. a few providers compute same part of the task and their results are compared, \n\n computing small, random part of the task and comparing this part with the result sent by the provider, ie. comparing the color of few random pixels in rendered picture, \n\n analysis of output logs. \n\n\nSee our blog post for more info on our verification ideas: https://blog.golemproject.net/more-twain-less-cheating-129f7bc93a5c\n\n\nWhy are you making it decentralized?\n\n\nWe believe that decentralization will be the future of internet development. With decentralization, it will be possible to achieve full scalability without expanding and maintaining our own network and server infrastructure; the solution will also be free from single points of failure and resistant to attempts to disable and censor the network. \n\n\nWhy are you using Ethereum?\n\n\nWe are building the transaction framework on top of Ethereum. Ethereum gives us expressive power, which is much-needed when implementing advanced, trustless schemes. Check our \nblog post\n to learn more. \n\n\nAre you using some external solutions / libraries?\n\n\nWe're using IPFS (https://ipfs.io/) for resource distribution and Docker (https://www.docker.com/) containers as computational environments.\n\n\nback to top\n\n\nGolem business model\n\n\nHow will payments work in Golem?\n\n\nWhen creating something so new, it\u2019s hard if not impossible to predict all the opportunities that will suddenly be possible. Golem is a generalized global supercomputer, and as such, it will no doubt find its niche with vastly varied applications. They might need very diverse remuneration models. We are not able to design a one-size-fits-all payment system for Golem, nor will we attempt to force one upon application authors. \nWhen a developer integrates her application with Golem, she has the freedom to decide which transaction model she implements, as long as it is compliant with Golem's Transaction Framework. The Transaction Framework will take the form of a set of requirements to follow; basic requirements may include:\n\n Entry in the Application Registry;\n\n Use of open source and/or deterministic environment, such as EVM;\n\n Community approval or rating of transaction model;\n\n Use of GNT for remunerating software and resource providers\nWe are building the transaction framework on top of Ethereum. Ethereum gives us expressive power, which is much-needed when implementing advanced, trustless schemes.\nExample transaction framework components:\n\n Diverse payout schemes such as nanopayments, batching\n\n Off-chain payment channels\n\n Custom receipts\n\n Payment to software developer\n* Per-unit use of software (per-node, per-hour, etc.)\n\n\nIt is also possible to introduce more sophisticated components into the transaction model design, to meet specific goals not related to payments. For example:\nRequestor escrow for tasks where a higher level of commitment is required (high\nprice because of specialized hardware or long running subtasks); the requestor may\ncreate a two-party escrow account and require providers to take part in it.\n\n Provider deposit: the requestor may require to be in control of some amount of\ntimelocked GNT.\n\n Requestor deposit: the provider may accept tasks only from requestors who are in\ncontrol of some amount of timelocked GNT.\n* Registration of a task as an anchor for a TrueBit-style conflict resolution fallback\nmechanism.\n\n\nWhat are use cases for Golem?\n\n\nThe first and most illustrative use case of Golem is CGI rendering. Other technically similar to implement use cases are scientific, engineering, statistical and financial tasks which need extensive computing and are (technically) feasible to distribute. Check our \nblog post\n to learn more about potential uses.\n\nWe are not going to explore and develop all possible use cases, but we will rather focus on delivering a task API, Golem Standard Library to give developers the ability to integrate any software with the Golem Network.\nMany use cases will need proprietary software, either existing or designed specially for Golem. To facilitate the use of both open and proprietary software, we will introduce the Application Registery to enable any requestor to use Golem-ready software. If the software is proprietary, then the requestor will be able to use it in a software-as-a-service model. This way Golem will act not only as a market for computing power, but also as a distribution channel for software creators.  \n\n\nWhy computing prices will be lower with the Golem Network?\n\n\nThe prices are expected to be low because the market will be very close to textbook \"perfect competition\":\nthe product (computations) is homogenous,\nthe information for both requester and provider is almost complete, \nall requestors and providers have very small market share and have negligible impact on overall prices,\nbarriers to entry and exit are very low.\nIn a market with near \"perfect competition\" the prices are as low as they need to be to keep providers interested - which means that the Golem Network will create a situation that is quite different from today's internet infrastructure - with a few large providers exercising monopolistic control over the market.\n\n\nCheck our \nblog post\n to learn more. \n\n\nWhy Golem is unlikely to be successfully copied?\n\n\nGolem software is open-source and as such it can be forked by other parties. We are sure that over time many Golem forks will emerge either for specialised or general purposes. We believe that Golem's core business will remain unaffected by this.\n\n Golem business model strongly a favors larger network over a smaller network, so the first and largest network will always be preferable over the smaller networks.\n\n What Golem Network delivers is an infrastructure, open for any project, software, dapp, community etc. willing to use it. So any individual or organisation interested in building a decentralized solution (or a decentralized marketplace) will be able to use Golem as a platform, without a need of copying it. Therefore, developers will not be interested in copying Golem as long as we will be able to provide all the features they need. \n\n* Requestors choose where to buy computing power based on price and functionality. Our real competitors are Amazon Web Services, Google Cloud and other cloud providers. Our aim is to provide similar functionality at much lower prices.   \n\n\nHow do you ensure fairness of task assignment in the network?\n\n\nRight now it's mostly random. The most important is facilitating a direct connection and a quick network which will allow nodes to get tasks assigned to them as quickly as possible. It's a FIFO system. \n\n\nLater we'll add competition where the nodes with the best price / benchmark / reputation will be chosen. The Requestor should be able to choose which of this three options is the most important to them.\n\n\nAs the network grows we will be testing and implementing these methods to put the power in the user\u2019s hands and ensure a healthy network.\n\n\nHow does Golem compare to current/real supercomputers?\n\n\nSupercomputers use fast low latency links between processors to exchange information about states of computation really (really) fast. Golem is being created to function in a different environment - medium to high latency connections. Golem is solving different sets of tasks at a fraction of the price.\n\n\nWhen will you support GPUs and How?\n\n\nWhen we find or create suitable virtualization solution that supports virtual GPU on all our platforms. We\u2019ve done some tests for Nvidia Docker, so there is a chance that Nvidia users may have support for GPU activated earlier. Also, Linux users may expect GPU support sooner than users of another OS. We plan to focus on that after the Brass release and we hope to have it ready with Clay or a little bit earlier.\n\n\nIn the future, as the network evolves and more developers build on top of Golem, we may explore other avenues beyond virtualization for computation environments, like host-direct modes. This is not a priority focus at this time though.\n\n\nback to top\n\n\nSafety and Security\n\n\nCan you use private data for computation? Can providers see your data?\n\n\nUnfortunately, right now Golem cannot support private data. Provider nodes usually need direct access to the data being computed so it will need to be decrypted at some point. \nCurious and technically savvy providers can look at what is being computed for now. We will be working over time on solutions to increase the privacy of computations. We have begun work with QubesOS, discussing the implementation of Intel SGX technology to help verify computations in a more secure manner.\n\n\nWhat if someone would like to use Golem for DDoS, Botnet or other illegal activities?\n\n\nComputations take place in an isolated environment, so Golem can\u2019t be used for DDoS or Botnet this way. We'll consider preparing special tasks that may have access to external data, but they won't be executed on machines if the provider doesn't deliberately agree to this. \n\n\nIs it safe?\n\n\nEvery new technology is exposed to attacks, some new and unpredictable. All components of the Golem application will be designed to be robust against attacks. \n\n\nKey security elements will be:\n\n computations in isolated environments with minimal privileges and lack of external network connectivity.\n\n Well-known safety cryptography based on elliptic curves.\n\n Signed and encrypted messages inside the Golem network ensuring authenticity, which protects against man-in-the-middle attacks and passive data collection.\n\n Reputation system helping to detect malicious nodes and mitigate them. Evaluating these reputation metrics will assist in secure, efficient and correct task routing.\n\n Whitelist and blacklist mechanisms allowing providers to build trust networks and run only applications prepared by trusted developers.\n\n Together, the application registry and transaction framework mitigates Sybil and whitewashing attacks by providing an disincentive to participate, introducing an economic and computational cost to participation, and providing a metric for reputation in order to maintain optimal connectivity.\n\n The Ethereum integration and transaction framework makes custom payment-based security mechanisms possible, eg. escrows, deposits, insurance and audit proofs.\n\n Security audits will be conducted for every release, performed by external contractors.\n\n\nback to top\n\n\nUsing Golem\n\n\nInstalling Golem\n\n\n\n\n\n\nInstallation on Mac\n\n\n\n\n\n\nInstallation on Ubuntu\n\n\n\n\n\n\nInstallation on Windows 10\n\n\n\n\n\n\nMake sure you choose the latest install package when installing on Windows.\n\n\nIf you don't have a public ip, your router doesn't support uPNP, you need to forward ports 40102,40103 and 3282 to your machine from your router for Golem to accept tasks. Refer https://bitcoin.org/en/full-node#enabling-connections for port forwarding instructions but use above ports instead. You may also need to open the ports through your firewall. For router specific instructions on how to forward your ports go to https://portforward.com/\n\n\nTo check if your ports are forwarded correctly you can use www.canyouseeme.org\n\n\nApp Overview\n\n\nHere are some direct links designed to give you a top to bottom overview of the Golem App. Included in these docs are some troubleshooting tips for common issues. \n\n\n\n\n\n\nGetting Started\n\n\n\n\n\n\nRunning Golem\n\n\n\n\n\n\nAdding Tasks\n\n\n\n\n\n\nTask Settings\n\n\n\n\n\n\nTroubleshooting\n\n\n\n\n\n\nWhat are the optimal settings for my machine to run Golem?\n\n\nIn general we recommend a processor with multiple cores and lots of RAM. At minimum, you can run Golem with:\n\n\n\n\n2 GB RAM\n\n\n2 cores\n\n\n20 GB HDD\n\n\npublic IP or ability to forward ports\n\n\n\n\nFor more demanding renders like the Production Benchmark (https://www.blender.org/download/demo-files/) you will need at least:\n\n\n\n\n16 GB RAM\n\n\n6 cores\n\n\n\n\nIn the future we plan to support GPUs for use within Golem. Docker currently only supports virtualization for Nvidia GPUs, so those cards are likely to be supported by Golem before other models. GPU support is planned for the Clay release.\n\n\nAfter initial tests we do not have a standard for the \"optimal\" machine. As the network grows there could be a way to determine which configurations perform better than others. Right now, our main focus it building a strong network. Over time computing standards will become more refined. The best rule of thumb right now is \"the more power you are willing to spare, the more tasks you will receive\".\n\n\nHow much money can I expect to make with Golem?\n\n\nIt is too early to give estimates like this, but you can refer to our \nblog post\n to understand better how we fit in the market and what financial and technical advantages we offer.\n\n\nAs we grow, your earning potential will also grow.\n\n\nFeature Requests\n\n\nTo help get more visibility for your request feel free to send me more details to contact@golem.network. We are always looking to improve our app and your feedback is appreciated.\n\n\nBe sure to include:\n\n Screenshots\n\n Use Case\n* Pain points of existing system\n\n\nIf this issue is more severe and disrupting your workflow within the Golem App, you can report it here as well: https://github.com/golemfactory/golem/issues\n\n\nWhat do I do if something goes wrong?\n\n\nThe first things to do if you have any error while running Golem are:\n\n\n\n\n\n\nMake sure you have the \nlatest version\n installed\n\n\n\n\n\n\nMake sure your ports are forwarded properly or have a router that supports uPNP\n\n\n\n\n\n\nCheck your logs\n, copy any Error or Critical message you find and search for them on our Github. This will help you find any related issues, open bugs, or troubleshooting tips\n\n\n\n\n\n\nCheck our troubleshooting doc\n for related errors and fixes\n\n\n\n\n\n\nReach out to us on \nRocket Chat\n with a detailed description of the issue\n\n\n\n\n\n\nSend a detailed description of the issues along with attached log files to contact@golem.network\n\n\n\n\n\n\nIf you feel confident you discovered a bug in the system or a missing critical feature, you can \ncreate an issue on GitHub\n. Please provide relevant log entries, screenshots, and detailed descriptions of expected vs. actual app behavior. Fore more instruction on reporting issues \ncheck here\n\n\n\n\n\n\nMy task is stuck and not rendering\n\n\n\n\nCheck if you can see your node on https://stats.golem.network/show\n\n\nTest for open ports 3282, 40102 and 40103 with an external tool like canyouseeme.org ( app must be running )\n\n\nAdjust your Network Trust settings to accept more incoming nodes\n\n\nCheck your task settings to see if you set high enough task and subtask timeouts, if not, retest with higher timeout thresholds\n\n\nTest a smaller blender file to see if it renders: \nGolem Logo Demo\n\n\nCheck for errors in your logs \nfound here\n\n\nIf you still cannot render a task send the following to contact@golem.network:\n\n\nA screenshot or description of your task settings and network trust settings\n\n\nYour Golem.log and Hyperg.log files\n\n\nThe name and size of the blender file you were attempting to render\n\n\n\n\n\n\n\n\nback to top\n\n\nComparing Golem to Other Services\n\n\nGolem vs iExec\n\n\niEXEC\u2019s idea sounds very similar to Golem, but it is not exactly so, as iEXEC focuses on requestors, defined as dApps creators, that want to run off-chain computations. At least over the course of the next year we will be addressing non-overlapping use cases and users. At some point our technologies may come closer and we can learn from each other, which would likely be beneficial for both projects, as iEXEC the team seems to be competent & delivering.\n\n\nGolem vs SONM\n\n\nSONM\u2019s goal is similar to what we are trying to achieve. According to SONM\u2019s team, it is a \"secure and cost-effective fog supercomputer, designed for general-purpose computing, from mobile app hosting to video rendering to DNA analysis. Miners all over the world can leverage their idle computer power to become part of the SONM network.\" But, although we have tried really hard to comprehend their development process, it's really hard to tell where are they heading at the moment. We have yet to see how they have solved fundamental problems for such a design to work. \n\n\nFor now it is safe to say that the main difference between us is license (Golem: GPLv3, SONM: Apache Licence 2.0) - they announced that their main framework or a platform is called COCAINE (Configurable Omnipotent Custom Applications Integrated Network Engine) https://tech.yandex.com/cocaine/. In addition, we are not using any third party frameworks.\n\n\nGolem vs BOINC\n\n\n\n\nBOINC is not a marketplace\n\n\nIt is a centralized solution (you cannot just join as requestor)\n\n\nBOINC verification is based on excessive redundancy (everything is computed 3 times)\n\n\ntrust comes from centralization (because providers get tasks only from whitelisted requestors, requestors are trusted)\n\n\n\n\nAlso, because there is no market and BOINC is based on computing time donations, you have to jump through many hoops to be able to become a requestor. \n\n\nDoes Golem Factory invest in other businesses? ICOs?\n\n\nWe do not invest in ICOs. We should not speculate with ETH and nowadays ICOs have enough traction to fund themselves without our help. We want to support other projects where our technology overlaps or which would make good use cases for Golem. In such a case we might invest time and resources in cooperation with in another business for our mutual benefit.\n\n\nGolem would prefer to work together to achieve mutual goals than to speculate and invest capital.\n\n\nback to top\n\n\nGolem Token\n\n\nWhat is the purpose of Golem Network Token?\n\n\nGNT is used to pay for rented computing power on the network. For more information about how GNT fits into the network, see our blog post on the \nEconomics of the Golem Network Token\n\n\nCan I deposit and withdraw real GNT during the Alpha test?\n\n\nSince we are in the Alpha stage our first POC, all GNT on the app is test GNT (tGNT) and has no value outside of the app. We have purposely removed deposit and withdrawal options from the Alpha test because they are not necessary. Do not under any circumstances attempt to send real GNT to your node ID, you will lose your tokens permanently and we cannot get them back for you.\n\n\nWhen we launch the mainnet version of the app, we will have deposit and withdrawal options for real GNT.\n\n\nWhere to Purchase GNT\n\n\nWhile we do not endorse or work with any exchanges directly, you can find a list of exchanges that offer GNT here:\n\n\nhttps://coinmarketcap.com/currencies/golem-network-tokens/#markets\n\n\nWhat wallet should I use to store GNT?\n\n\nThe two most popular wallets used to store Golem are:\n\n\nhttps://www.myetherwallet.com\nhttps://github.com/ethereum/mist/releases\n\n\nBe sure to read and follow all of their safety instructions before sending your GNT to your new wallet. There are a lot of phishing scams out there, and if you are not careful, you can easily compromise your wallet security. If you follow their instructions carefully you should have no problem.\n\n\nFor more wallet suggestions from our users \ngo to our chat and pose your question in the #wallets room\n\n\n\"I sent my tokens to the wrong address and my GNT is gone\"\n\n\nAt Golem we do not work directly with any exchanges or facilitate transactions of GNT from Wallets to Exchanges or vice versa. For that reason we cannot help you get your tokens back or reverse the transaction. Transactions on the blockchain are irreversible.\n\n\nBut we can still offer some help.\n\n\nThe best thing you can do going forward is:\n\n\n\n\nSearch for the transaction on etherscan.io\n\n\nYou can use your public key\n\n\nGather information from etherscan and send to your exchanges support team\n\n\nIf the support team is unresponsive, sometimes posting on the exchanges subreddit can get exposure for your issue\n\n\n\n\nAt Golem we are only working on the App. The GNT token is an important part of our ecosystem but we are powerless to help with transactions between independent investors and 3rd party exchanges.\n\n\nback to top",
            "title": "FAQ"
        },
        {
            "location": "/3.-FAQ/FAQ/#jump-to-a-section",
            "text": "Jump to a Section:  How and why Golem will change the world (or at least the Internet)  What is Golem?  Who can use Golem and why?  What is the current state of the project and the way ahead?  How Golem will help to build a new Internet of tomorrow?  When will the latest version be released?    Golem technology  How Golem works?  How are your going to verify computations?  Why are you making it decentralized?  Why are you using Ethereum?  Are you using some external solutions / libraries?    Golem business model  How will payments work in Golem?  What are use cases for Golem?  Why computing prices will be lower with the Golem Network?  Why Golem is unlikely to be successfully copied?  How do you ensure fairness of task assignment in the network?  How does Golem compare to current/real supercomputers?  When will you support GPUs and How?    Safety and Security  Can you use private data for computation? Can providers see your data?  What if someone would like to use Golem for DDoS, Botnet or other illegal activities?  Is it safe?    Using Golem  Installing Golem  App Overview  What are the optimal settings for my machine to run Golem?  How much money can I expect to make with Golem?  Feature Requests  What do I do if something goes wrong?  My task is stuck and not rendering    Comparing Golem to Other Services  Golem vs iExec  Golem vs SONM  Golem vs BOINC  Does Golem Factory invest in other businesses? ICOs?    Golem Token  What is the purpose of Golem Network Token?  Can I deposit and withdraw real GNT during the Alpha test?  Where to Purchase GNT  What wallet should I use to store GNT?  \"I sent my tokens to the wrong address and my GNT is gone\"       Read our Whitepaper (ctrl + click to open in new tab)",
            "title": "Jump to a Section:"
        },
        {
            "location": "/3.-FAQ/FAQ/#how-and-why-golem-will-change-the-world-or-at-least-the-internet",
            "text": "",
            "title": "How and why Golem will change the world (or at least the Internet)"
        },
        {
            "location": "/3.-FAQ/FAQ/#what-is-golem",
            "text": "Golem connects computers in a peer-to-peer network, enabling both application owners and individual users (\" requestors \") to rent resources of other users\u2019 (\" providers \") machines. These resources can be used to complete tasks requiring any amount of computation time and capacity. Today, such resources are supplied by centralized cloud providers which, are constrained by closed networks, proprietary payment systems, and hard-coded provisioning operations. Also core to Golem\u2019s built-in feature set is a dedicated Ethereum-based transaction system, which enables direct payments between requestors, providers, and software developers.  The function of Golem as the backbone of a decentralized market for computing power can be considered both Infrastructure-as-a-Service (IaaS), as well as Platform-as-a-Service (PaaS). However, Golem reveals its true potential by adding dedicated software integrations to the equation. Any interested party is free to create and deploy software to the Golem network by publishing it to the Application Registry. Together with the Transaction Framework, developers can also extend and customize the payment mechanism resulting in unique mechanisms for monetizing software.",
            "title": "What is Golem?"
        },
        {
            "location": "/3.-FAQ/FAQ/#who-can-use-golem-and-why",
            "text": "The short answer is that Golem can be used (and should be used) by everyone who owns a computer.    The long answer is that how you use Golem depends on what you use your computer for.  If you are an average user, you are likely to be a provider. Golem gives your computer work to do when it is not being used then you earn money for tasks completed. The money comes from requestors, paying providers for using their machines.  If for any purpose you need more computing time than you have on your own machine - because you are a CGI professional, scientist, financial market tycoon, cryptocurrency miner or anyone else fitting in the wide range of Golem\u2019s use cases - then you can use Golem as a requestor. You submit your task to the network, it is completed by providers and you pay for their machines' time. Additionally, if the task you want to perform needs proprietary software - you can get it through the App Registry.  If you are an owner of an open source or proprietary software (like a rendering engine, analytical packages, trading robots, specialised scientific packages, or a Dapp), you may want to use Golem as a distribution channel and (if you opt to charge for use) as a marketplace.",
            "title": "Who can use Golem and why?"
        },
        {
            "location": "/3.-FAQ/FAQ/#what-is-the-current-state-of-the-project-and-the-way-ahead",
            "text": "The alpha version was launched in August 2016, with the code available for review. The alpha version (codename Brass Golem) will be focused on CGI rendering in Blender (blender.org) and will be our MVP, although we expect it will be useful for blender users and once we move to release version will have a group of dedicated users.  You can follow our Brass Golem KanBan here: https://trello.com/b/YL1qZ2pZ/brass-kanban   Brass Golem      ...these are created to fulfill one goal   Brass Golem is where we are at the moment with our MVP, in alpha testing now. This current version of Golem is only focused on rendering in Blender and LuxRender, and although it will be useful to CGI artists, we consider CGI rendering to be one use case among many, and also a training ground. Brass Golem should be frozen within 6 months after the end of our crowdfunding period and a full battery of tests. Even though we do not expect that Blender CGI rendering will create enough turnover to justify all the work we have put into the project, this will be the first decentralized computation market.   Clay Golem      There is a chance (...) that a Clay Golem will be possessed by a chaotic evil spirit.    Clay Golem is a big leap from the Brass milestone. Clay introduces the Task API and the Application Registry, which together are going to make Golem a multi-purpose, generalized distributed computation solution. Developers now have the means to integrate with Golem. This advance, however, may come at the cost of compromised stability and security, so this version should be considered an experiment for early adopters and tech enthusiasts. Prototypes, new ideas and solutions will be built on Clay.   Stone Golem      Stone Golems do not revoke their creators control like (...) Clay Golems.   Stone Golem will add more security and stability, but also enhance the functionalities implemented in Clay. An advanced version of the Task API will be introduced. The Application Registry will be complemented by the Certification Mechanism that will create a community-driven trust network for applications. Also, the Transaction Framework will create an environment that will allow Golem to be used in a SaaS model.   Iron Golem    Iron Golems are made of iron and are among the strongest type of Golem. They never revoke the control of the wizard that created them.   Iron is a deeply tested Golem that gives more freedom to developers, allowing them to create applications that use an Internet connection or applications that run outside the sandbox. Of course, the decision to accept higher-risk applications will still belong to the providers renting their computing power. Iron Golem should be robust, highly resistant to attacks, stable and scalable. Iron will also introduce various tools for developers that will make application creation far easier. Finally, the Golem Standard Library will be implemented.",
            "title": "What is the current state of the project and the way ahead?"
        },
        {
            "location": "/3.-FAQ/FAQ/#how-golem-will-help-to-build-a-new-internet-of-tomorrow",
            "text": "We believe, that in the future, the Internet will be a truly decentralized network, enabling users to securely and directly exchange content, without middlemen. Accordingly, Golem will be used not only to compute specific tasks, but also to bulk-rent machines in order to perform operations within a self-organizing network. Of course, this will require the simultaneous development of other technologies, many of which have gained significant traction in recent years.   Better data-sharing technologies are necessary, but taking into account the ongoing development of IPFS/Filecoin and Swarm, the appropriate solutions seem to be within reach. Eventually, the Ethereum network will become more scalable, more efficient, and include a fully functional network of micropayment channels. Once these technologies become available, it is easy to imagine Golem primarily as a platform for microservices, allowing users to run both small (e.g. a note-taking app) and large (e.g. a streaming service) applications in a completely decentralized way. Although ambitious, this vision seems to be the ultimate argument for Golem\u2019s long-term potential.",
            "title": "How Golem will help to build a new Internet of tomorrow?"
        },
        {
            "location": "/3.-FAQ/FAQ/#when-will-the-latest-version-be-released",
            "text": "Right now we cannot set a specific date for our next release. The best I can say is \"as soon as its ready\". While this answer in not particularly exciting, our technology certainly is.  We are working on brand-new, uniquely complex, and highly disruptive technology every day. This requires careful research, execution, and testing. We want to release the most secure and user friendly versions of the Golem App. This is not only important for Golem and our users, it is integral to the health of the blockchain ecosystem.  If you want to stay up to date on our progress, please follow our Rocket Chat. We post announcements and dev updates there. You can also connect with our team and fellow users to learn more about Golem. Our Github is also a good source if you want to take a look at our code.  https://chat.golem.network  https://github.com/golemfactory/golem  For specific updates on Brass progress, check our KanBan:   https://trello.com/b/YL1qZ2pZ/brass-kanban  Thanks for your support and patience while we deliver our product!  back to top",
            "title": "When will the latest version be released?"
        },
        {
            "location": "/3.-FAQ/FAQ/#golem-technology",
            "text": "",
            "title": "Golem technology"
        },
        {
            "location": "/3.-FAQ/FAQ/#how-golem-works",
            "text": "Golem is a p2p network, ie. there is no central server and users are equally privileged. People who want to compute tasks and people who have computer power to rent broadcast their offers in the network. Golem's transaction system matches providers and requestors, taking into account prices, reputations and their machines' performance. Resources, ie. files needed for computation are sent to provider's machine. After computation is completed, the provider's app sends back results to the requestor's app. If the result passes our verification process, the provider is paid. If someone tries to cheat, for instance sends bad results or doesn't pay, he/she will hurt their reputation and won't be chosen again for computations.  Check our  blog post  to learn more.",
            "title": "How Golem works?"
        },
        {
            "location": "/3.-FAQ/FAQ/#how-are-your-going-to-verify-computations",
            "text": "There will be different methods depending on the task type. In the future, a user who adds a new task can implement a new verification method that suits them. Possible solutions may involve:   simple correctness: checking of the result, eg. proof-of-work,  redundant computation: ie. a few providers compute same part of the task and their results are compared,   computing small, random part of the task and comparing this part with the result sent by the provider, ie. comparing the color of few random pixels in rendered picture,   analysis of output logs.   See our blog post for more info on our verification ideas: https://blog.golemproject.net/more-twain-less-cheating-129f7bc93a5c",
            "title": "How are your going to verify computations?"
        },
        {
            "location": "/3.-FAQ/FAQ/#why-are-you-making-it-decentralized",
            "text": "We believe that decentralization will be the future of internet development. With decentralization, it will be possible to achieve full scalability without expanding and maintaining our own network and server infrastructure; the solution will also be free from single points of failure and resistant to attempts to disable and censor the network.",
            "title": "Why are you making it decentralized?"
        },
        {
            "location": "/3.-FAQ/FAQ/#why-are-you-using-ethereum",
            "text": "We are building the transaction framework on top of Ethereum. Ethereum gives us expressive power, which is much-needed when implementing advanced, trustless schemes. Check our  blog post  to learn more.",
            "title": "Why are you using Ethereum?"
        },
        {
            "location": "/3.-FAQ/FAQ/#are-you-using-some-external-solutions-libraries",
            "text": "We're using IPFS (https://ipfs.io/) for resource distribution and Docker (https://www.docker.com/) containers as computational environments.  back to top",
            "title": "Are you using some external solutions / libraries?"
        },
        {
            "location": "/3.-FAQ/FAQ/#golem-business-model",
            "text": "",
            "title": "Golem business model"
        },
        {
            "location": "/3.-FAQ/FAQ/#how-will-payments-work-in-golem",
            "text": "When creating something so new, it\u2019s hard if not impossible to predict all the opportunities that will suddenly be possible. Golem is a generalized global supercomputer, and as such, it will no doubt find its niche with vastly varied applications. They might need very diverse remuneration models. We are not able to design a one-size-fits-all payment system for Golem, nor will we attempt to force one upon application authors. \nWhen a developer integrates her application with Golem, she has the freedom to decide which transaction model she implements, as long as it is compliant with Golem's Transaction Framework. The Transaction Framework will take the form of a set of requirements to follow; basic requirements may include:  Entry in the Application Registry;  Use of open source and/or deterministic environment, such as EVM;  Community approval or rating of transaction model;  Use of GNT for remunerating software and resource providers\nWe are building the transaction framework on top of Ethereum. Ethereum gives us expressive power, which is much-needed when implementing advanced, trustless schemes.\nExample transaction framework components:  Diverse payout schemes such as nanopayments, batching  Off-chain payment channels  Custom receipts  Payment to software developer\n* Per-unit use of software (per-node, per-hour, etc.)  It is also possible to introduce more sophisticated components into the transaction model design, to meet specific goals not related to payments. For example:\nRequestor escrow for tasks where a higher level of commitment is required (high\nprice because of specialized hardware or long running subtasks); the requestor may\ncreate a two-party escrow account and require providers to take part in it.  Provider deposit: the requestor may require to be in control of some amount of\ntimelocked GNT.  Requestor deposit: the provider may accept tasks only from requestors who are in\ncontrol of some amount of timelocked GNT.\n* Registration of a task as an anchor for a TrueBit-style conflict resolution fallback\nmechanism.",
            "title": "How will payments work in Golem?"
        },
        {
            "location": "/3.-FAQ/FAQ/#what-are-use-cases-for-golem",
            "text": "The first and most illustrative use case of Golem is CGI rendering. Other technically similar to implement use cases are scientific, engineering, statistical and financial tasks which need extensive computing and are (technically) feasible to distribute. Check our  blog post  to learn more about potential uses. \nWe are not going to explore and develop all possible use cases, but we will rather focus on delivering a task API, Golem Standard Library to give developers the ability to integrate any software with the Golem Network.\nMany use cases will need proprietary software, either existing or designed specially for Golem. To facilitate the use of both open and proprietary software, we will introduce the Application Registery to enable any requestor to use Golem-ready software. If the software is proprietary, then the requestor will be able to use it in a software-as-a-service model. This way Golem will act not only as a market for computing power, but also as a distribution channel for software creators.",
            "title": "What are use cases for Golem?"
        },
        {
            "location": "/3.-FAQ/FAQ/#why-computing-prices-will-be-lower-with-the-golem-network",
            "text": "The prices are expected to be low because the market will be very close to textbook \"perfect competition\":\nthe product (computations) is homogenous,\nthe information for both requester and provider is almost complete, \nall requestors and providers have very small market share and have negligible impact on overall prices,\nbarriers to entry and exit are very low.\nIn a market with near \"perfect competition\" the prices are as low as they need to be to keep providers interested - which means that the Golem Network will create a situation that is quite different from today's internet infrastructure - with a few large providers exercising monopolistic control over the market.  Check our  blog post  to learn more.",
            "title": "Why computing prices will be lower with the Golem Network?"
        },
        {
            "location": "/3.-FAQ/FAQ/#why-golem-is-unlikely-to-be-successfully-copied",
            "text": "Golem software is open-source and as such it can be forked by other parties. We are sure that over time many Golem forks will emerge either for specialised or general purposes. We believe that Golem's core business will remain unaffected by this.  Golem business model strongly a favors larger network over a smaller network, so the first and largest network will always be preferable over the smaller networks.  What Golem Network delivers is an infrastructure, open for any project, software, dapp, community etc. willing to use it. So any individual or organisation interested in building a decentralized solution (or a decentralized marketplace) will be able to use Golem as a platform, without a need of copying it. Therefore, developers will not be interested in copying Golem as long as we will be able to provide all the features they need.  \n* Requestors choose where to buy computing power based on price and functionality. Our real competitors are Amazon Web Services, Google Cloud and other cloud providers. Our aim is to provide similar functionality at much lower prices.",
            "title": "Why Golem is unlikely to be successfully copied?"
        },
        {
            "location": "/3.-FAQ/FAQ/#how-do-you-ensure-fairness-of-task-assignment-in-the-network",
            "text": "Right now it's mostly random. The most important is facilitating a direct connection and a quick network which will allow nodes to get tasks assigned to them as quickly as possible. It's a FIFO system.   Later we'll add competition where the nodes with the best price / benchmark / reputation will be chosen. The Requestor should be able to choose which of this three options is the most important to them.  As the network grows we will be testing and implementing these methods to put the power in the user\u2019s hands and ensure a healthy network.",
            "title": "How do you ensure fairness of task assignment in the network?"
        },
        {
            "location": "/3.-FAQ/FAQ/#how-does-golem-compare-to-currentreal-supercomputers",
            "text": "Supercomputers use fast low latency links between processors to exchange information about states of computation really (really) fast. Golem is being created to function in a different environment - medium to high latency connections. Golem is solving different sets of tasks at a fraction of the price.",
            "title": "How does Golem compare to current/real supercomputers?"
        },
        {
            "location": "/3.-FAQ/FAQ/#when-will-you-support-gpus-and-how",
            "text": "When we find or create suitable virtualization solution that supports virtual GPU on all our platforms. We\u2019ve done some tests for Nvidia Docker, so there is a chance that Nvidia users may have support for GPU activated earlier. Also, Linux users may expect GPU support sooner than users of another OS. We plan to focus on that after the Brass release and we hope to have it ready with Clay or a little bit earlier.  In the future, as the network evolves and more developers build on top of Golem, we may explore other avenues beyond virtualization for computation environments, like host-direct modes. This is not a priority focus at this time though.  back to top",
            "title": "When will you support GPUs and How?"
        },
        {
            "location": "/3.-FAQ/FAQ/#safety-and-security",
            "text": "",
            "title": "Safety and Security"
        },
        {
            "location": "/3.-FAQ/FAQ/#can-you-use-private-data-for-computation-can-providers-see-your-data",
            "text": "Unfortunately, right now Golem cannot support private data. Provider nodes usually need direct access to the data being computed so it will need to be decrypted at some point. \nCurious and technically savvy providers can look at what is being computed for now. We will be working over time on solutions to increase the privacy of computations. We have begun work with QubesOS, discussing the implementation of Intel SGX technology to help verify computations in a more secure manner.",
            "title": "Can you use private data for computation? Can providers see your data?"
        },
        {
            "location": "/3.-FAQ/FAQ/#what-if-someone-would-like-to-use-golem-for-ddos-botnet-or-other-illegal-activities",
            "text": "Computations take place in an isolated environment, so Golem can\u2019t be used for DDoS or Botnet this way. We'll consider preparing special tasks that may have access to external data, but they won't be executed on machines if the provider doesn't deliberately agree to this.",
            "title": "What if someone would like to use Golem for DDoS, Botnet or other illegal activities?"
        },
        {
            "location": "/3.-FAQ/FAQ/#is-it-safe",
            "text": "Every new technology is exposed to attacks, some new and unpredictable. All components of the Golem application will be designed to be robust against attacks.   Key security elements will be:  computations in isolated environments with minimal privileges and lack of external network connectivity.  Well-known safety cryptography based on elliptic curves.  Signed and encrypted messages inside the Golem network ensuring authenticity, which protects against man-in-the-middle attacks and passive data collection.  Reputation system helping to detect malicious nodes and mitigate them. Evaluating these reputation metrics will assist in secure, efficient and correct task routing.  Whitelist and blacklist mechanisms allowing providers to build trust networks and run only applications prepared by trusted developers.  Together, the application registry and transaction framework mitigates Sybil and whitewashing attacks by providing an disincentive to participate, introducing an economic and computational cost to participation, and providing a metric for reputation in order to maintain optimal connectivity.  The Ethereum integration and transaction framework makes custom payment-based security mechanisms possible, eg. escrows, deposits, insurance and audit proofs.  Security audits will be conducted for every release, performed by external contractors.  back to top",
            "title": "Is it safe?"
        },
        {
            "location": "/3.-FAQ/FAQ/#using-golem",
            "text": "",
            "title": "Using Golem"
        },
        {
            "location": "/3.-FAQ/FAQ/#installing-golem",
            "text": "Installation on Mac    Installation on Ubuntu    Installation on Windows 10    Make sure you choose the latest install package when installing on Windows.  If you don't have a public ip, your router doesn't support uPNP, you need to forward ports 40102,40103 and 3282 to your machine from your router for Golem to accept tasks. Refer https://bitcoin.org/en/full-node#enabling-connections for port forwarding instructions but use above ports instead. You may also need to open the ports through your firewall. For router specific instructions on how to forward your ports go to https://portforward.com/  To check if your ports are forwarded correctly you can use www.canyouseeme.org",
            "title": "Installing Golem"
        },
        {
            "location": "/3.-FAQ/FAQ/#app-overview",
            "text": "Here are some direct links designed to give you a top to bottom overview of the Golem App. Included in these docs are some troubleshooting tips for common issues.     Getting Started    Running Golem    Adding Tasks    Task Settings    Troubleshooting",
            "title": "App Overview"
        },
        {
            "location": "/3.-FAQ/FAQ/#what-are-the-optimal-settings-for-my-machine-to-run-golem",
            "text": "In general we recommend a processor with multiple cores and lots of RAM. At minimum, you can run Golem with:   2 GB RAM  2 cores  20 GB HDD  public IP or ability to forward ports   For more demanding renders like the Production Benchmark (https://www.blender.org/download/demo-files/) you will need at least:   16 GB RAM  6 cores   In the future we plan to support GPUs for use within Golem. Docker currently only supports virtualization for Nvidia GPUs, so those cards are likely to be supported by Golem before other models. GPU support is planned for the Clay release.  After initial tests we do not have a standard for the \"optimal\" machine. As the network grows there could be a way to determine which configurations perform better than others. Right now, our main focus it building a strong network. Over time computing standards will become more refined. The best rule of thumb right now is \"the more power you are willing to spare, the more tasks you will receive\".",
            "title": "What are the optimal settings for my machine to run Golem?"
        },
        {
            "location": "/3.-FAQ/FAQ/#how-much-money-can-i-expect-to-make-with-golem",
            "text": "It is too early to give estimates like this, but you can refer to our  blog post  to understand better how we fit in the market and what financial and technical advantages we offer.  As we grow, your earning potential will also grow.",
            "title": "How much money can I expect to make with Golem?"
        },
        {
            "location": "/3.-FAQ/FAQ/#feature-requests",
            "text": "To help get more visibility for your request feel free to send me more details to contact@golem.network. We are always looking to improve our app and your feedback is appreciated.  Be sure to include:  Screenshots  Use Case\n* Pain points of existing system  If this issue is more severe and disrupting your workflow within the Golem App, you can report it here as well: https://github.com/golemfactory/golem/issues",
            "title": "Feature Requests"
        },
        {
            "location": "/3.-FAQ/FAQ/#what-do-i-do-if-something-goes-wrong",
            "text": "The first things to do if you have any error while running Golem are:    Make sure you have the  latest version  installed    Make sure your ports are forwarded properly or have a router that supports uPNP    Check your logs , copy any Error or Critical message you find and search for them on our Github. This will help you find any related issues, open bugs, or troubleshooting tips    Check our troubleshooting doc  for related errors and fixes    Reach out to us on  Rocket Chat  with a detailed description of the issue    Send a detailed description of the issues along with attached log files to contact@golem.network    If you feel confident you discovered a bug in the system or a missing critical feature, you can  create an issue on GitHub . Please provide relevant log entries, screenshots, and detailed descriptions of expected vs. actual app behavior. Fore more instruction on reporting issues  check here",
            "title": "What do I do if something goes wrong?"
        },
        {
            "location": "/3.-FAQ/FAQ/#my-task-is-stuck-and-not-rendering",
            "text": "Check if you can see your node on https://stats.golem.network/show  Test for open ports 3282, 40102 and 40103 with an external tool like canyouseeme.org ( app must be running )  Adjust your Network Trust settings to accept more incoming nodes  Check your task settings to see if you set high enough task and subtask timeouts, if not, retest with higher timeout thresholds  Test a smaller blender file to see if it renders:  Golem Logo Demo  Check for errors in your logs  found here  If you still cannot render a task send the following to contact@golem.network:  A screenshot or description of your task settings and network trust settings  Your Golem.log and Hyperg.log files  The name and size of the blender file you were attempting to render     back to top",
            "title": "My task is stuck and not rendering"
        },
        {
            "location": "/3.-FAQ/FAQ/#comparing-golem-to-other-services",
            "text": "",
            "title": "Comparing Golem to Other Services"
        },
        {
            "location": "/3.-FAQ/FAQ/#golem-vs-iexec",
            "text": "iEXEC\u2019s idea sounds very similar to Golem, but it is not exactly so, as iEXEC focuses on requestors, defined as dApps creators, that want to run off-chain computations. At least over the course of the next year we will be addressing non-overlapping use cases and users. At some point our technologies may come closer and we can learn from each other, which would likely be beneficial for both projects, as iEXEC the team seems to be competent & delivering.",
            "title": "Golem vs iExec"
        },
        {
            "location": "/3.-FAQ/FAQ/#golem-vs-sonm",
            "text": "SONM\u2019s goal is similar to what we are trying to achieve. According to SONM\u2019s team, it is a \"secure and cost-effective fog supercomputer, designed for general-purpose computing, from mobile app hosting to video rendering to DNA analysis. Miners all over the world can leverage their idle computer power to become part of the SONM network.\" But, although we have tried really hard to comprehend their development process, it's really hard to tell where are they heading at the moment. We have yet to see how they have solved fundamental problems for such a design to work.   For now it is safe to say that the main difference between us is license (Golem: GPLv3, SONM: Apache Licence 2.0) - they announced that their main framework or a platform is called COCAINE (Configurable Omnipotent Custom Applications Integrated Network Engine) https://tech.yandex.com/cocaine/. In addition, we are not using any third party frameworks.",
            "title": "Golem vs SONM"
        },
        {
            "location": "/3.-FAQ/FAQ/#golem-vs-boinc",
            "text": "BOINC is not a marketplace  It is a centralized solution (you cannot just join as requestor)  BOINC verification is based on excessive redundancy (everything is computed 3 times)  trust comes from centralization (because providers get tasks only from whitelisted requestors, requestors are trusted)   Also, because there is no market and BOINC is based on computing time donations, you have to jump through many hoops to be able to become a requestor.",
            "title": "Golem vs BOINC"
        },
        {
            "location": "/3.-FAQ/FAQ/#does-golem-factory-invest-in-other-businesses-icos",
            "text": "We do not invest in ICOs. We should not speculate with ETH and nowadays ICOs have enough traction to fund themselves without our help. We want to support other projects where our technology overlaps or which would make good use cases for Golem. In such a case we might invest time and resources in cooperation with in another business for our mutual benefit.  Golem would prefer to work together to achieve mutual goals than to speculate and invest capital.  back to top",
            "title": "Does Golem Factory invest in other businesses? ICOs?"
        },
        {
            "location": "/3.-FAQ/FAQ/#golem-token",
            "text": "",
            "title": "Golem Token"
        },
        {
            "location": "/3.-FAQ/FAQ/#what-is-the-purpose-of-golem-network-token",
            "text": "GNT is used to pay for rented computing power on the network. For more information about how GNT fits into the network, see our blog post on the  Economics of the Golem Network Token",
            "title": "What is the purpose of Golem Network Token?"
        },
        {
            "location": "/3.-FAQ/FAQ/#can-i-deposit-and-withdraw-real-gnt-during-the-alpha-test",
            "text": "Since we are in the Alpha stage our first POC, all GNT on the app is test GNT (tGNT) and has no value outside of the app. We have purposely removed deposit and withdrawal options from the Alpha test because they are not necessary. Do not under any circumstances attempt to send real GNT to your node ID, you will lose your tokens permanently and we cannot get them back for you.  When we launch the mainnet version of the app, we will have deposit and withdrawal options for real GNT.",
            "title": "Can I deposit and withdraw real GNT during the Alpha test?"
        },
        {
            "location": "/3.-FAQ/FAQ/#where-to-purchase-gnt",
            "text": "While we do not endorse or work with any exchanges directly, you can find a list of exchanges that offer GNT here:  https://coinmarketcap.com/currencies/golem-network-tokens/#markets",
            "title": "Where to Purchase GNT"
        },
        {
            "location": "/3.-FAQ/FAQ/#what-wallet-should-i-use-to-store-gnt",
            "text": "The two most popular wallets used to store Golem are:  https://www.myetherwallet.com\nhttps://github.com/ethereum/mist/releases  Be sure to read and follow all of their safety instructions before sending your GNT to your new wallet. There are a lot of phishing scams out there, and if you are not careful, you can easily compromise your wallet security. If you follow their instructions carefully you should have no problem.  For more wallet suggestions from our users  go to our chat and pose your question in the #wallets room",
            "title": "What wallet should I use to store GNT?"
        },
        {
            "location": "/3.-FAQ/FAQ/#i-sent-my-tokens-to-the-wrong-address-and-my-gnt-is-gone",
            "text": "At Golem we do not work directly with any exchanges or facilitate transactions of GNT from Wallets to Exchanges or vice versa. For that reason we cannot help you get your tokens back or reverse the transaction. Transactions on the blockchain are irreversible.  But we can still offer some help.  The best thing you can do going forward is:   Search for the transaction on etherscan.io  You can use your public key  Gather information from etherscan and send to your exchanges support team  If the support team is unresponsive, sometimes posting on the exchanges subreddit can get exposure for your issue   At Golem we are only working on the App. The GNT token is an important part of our ecosystem but we are powerless to help with transactions between independent investors and 3rd party exchanges.  back to top",
            "title": "\"I sent my tokens to the wrong address and my GNT is gone\""
        },
        {
            "location": "/3.-FAQ/Roadmap/",
            "text": "Golem Milestones\n\n\nBrass Golem\n\n\n\n\n...these are created to fulfill one goal, set at the time of their creation, and wait with absolute patience until activated to perform this task.\n\n\n\n\nBrass Golem is where we are at the moment with our proof-of-concept, in alpha testing now. This current version of Golem is only focused on rendering in Blender and LuxRender, and although it will be useful to CGI artists, we consider CGI rendering to be a proof of concept primarily, and also a training ground. Brass Golem should be frozen within 6 months after crowdfunding and a full battery of tests will be administered. Even though we do not expect that Blender CGI rendering will create enough turnover to justify all the work we have put into the project, this will be the first decentralized compute market.\n\n\nList of proposed  functionalities:\n\n Basic Task Definition Scheme;\n\n Basic Application Registry - first version of Ethereum-based Application Registry which allows to save tasks defined with basic task definition scheme;\n\n IPFS integration for coordinating task data and content delivery, e.g. deliver files needed to compute a task, deliver the results back to the requester;\n\n Docker environment with Golem-provided images for sandboxing the computations;\n\n Local verification: a probabilistic verification system based on the calculation of a fraction of the task on the requestor\u2019s machine;\n\n Basic UI and CLI;\n\n Basic reputation system; \n\n Implementation of Blender and LuxRender tasks.\n\n\nNext version: [0.4] (https://github.com/golemfactory/golem/milestones/Brass%200.4) \n\n\nClay Golem\n\n\n\n\nThere is a chance (...) that a Clay Golem will be possessed by a chaotic evil spirit. If this happens control is lost and the Golem attacks the closest living creature.\n\n\n\n\nClay Golem is a big leap from the Brass milestone. Clay Golem will introduce the Task API and the Application Registry, which together are going to make Golem a multi-purpose, generalized distributed computation solution. Developers will have the means to integrate with Golem. This advance, however, may come at the cost of compromised stability and security, so this version should be considered an experiment for early adopters and tech enthusiast to prototype their new ideas and solutions on Clay.\n\n\n\n\nBasic Task API: an interface that allows a user to define simple tasks;\n\n\nInitial Transaction Framework Model with hard-coded payments schemes;; \n\n\nRedundant verification: a verification scheme based on the comparison of redundant computation results;\n\n\nBasic subtask delegation: a mechanism for more fine grained subtasks distribution (e.g. can be used to help with creation of an ad-hoc proxy delegating tasks in a more efficient manner);\n\n\nBasic tutorials for software developers;\n\n\n(+) Support for virtual machines as a sandbox for computation;\n\n\n(+) Set of extended tutorials for developers explaining how to implement their own tasks for Golem network;\n\n\n(+) Example computational chemistry use case implementation;\n\n\n(++) Example machine learning use case implementation.\n\n\n\n\nStone Golem\n\n\n\n\nStone Golems do not revoke their creators control like (...) Clay Golems.\n\n\n\n\nStone Golem will add more security and stability, but also enhance the functionalities implemented in Clay. An advanced version of the Task API will be introduced. The Application Registry will be complemented by the Certification Mechanism that will create a community-driven trust network for applications. Also, the Transaction Framework will create an environment that will allow Golem to be used in a SaaS model.\n\n\n\n\nFull Task API: an interface that allows users to define tasks;\n\n\nApplication Registry: where developers publish applications ready to run on Golem;\n\n\nTransaction Framework that allows a choice of remuneration models for task templates;\n\n\nBasic Certification support for Software: a mechanism that allows users to whitelist and blacklist applications, building a decentralized trust network;\n\n\nSupport for SaaS: the possibility to add support for proprietary software which can be used in tasks. Payments for task creators should also be implemented in the application;\n\n\nApplication Registry and Transaction Framework tutorials for developers;\n\n\n(+) SaaS tasks examples - example use cases that show developers how to create tasks available in a SaaS model;\n\n\n\n\nIron Golem\n\n\n\n\nIron Golems are made of iron and are among the strongest type of Golem. They never revoke the control of the wizard that created them.\n\n\n\n\nIron is a deeply tested Golem that gives more freedom to developers, allowing them to create applications that use an Internet connection or applications that run outside the sandbox. Of course, the decision to accept higher-risk applications will still belong to the providers renting their computing power. Iron Golem should be robust, highly resistant to attacks, stable and scalable. Iron will also introduce various tools for developers that will make application creation far easier. Finally, the Golem Standard Library will be implemented.\n\n\n\n\n(+) External data link: enables Golem to use resources and interface with software outside of the Golem network;\n\n\n(+) Host-direct mode: a trusted mode for explicitly whitelisted applications or invulnerable environments, where Golem runs computation outside the Docker/VM;\n\n\n(+) Certification support for Environments: \n\n\n(+) Network Status Dashboard: public website displaying basic stats about Golem network;\n\n\n(+) Additional security mechanism: tasks that uses public data link or host-direct mode are particularly challenging for security. Additional means may be necessary to make running those tasks safer for providers (eg. central audit oracles, agreements contracts or code-execution observers may be implemented);\n\n\n(+) Golem web client: a web interface for Golem nodes as an alternative to the native GUI / console interface;\n\n\n(++) Golem Developer Toolkit: a set of diagnostic and test tools to make creation process of applications for Golem even easier;\n\n\n(++) Reputation system: reputation protocol that allows the node to effectively supervise network behaviour; \n\n\n(++) Advanced transaction system: a system that automatically tries to match requestors with providers in a way that is most profitable to all participants;\n\n\n(++) Golem Developer Toolkit tutorial\n\n\n(++) Provider dashboard: providing stats, graphs and more advanced settings management for providers;\n\n\n(+++) devp2p integration: changes in p2p and network protocols using new version of devp2p;\n\n\n(+++) MapReduce and topological sorting of tasks: add the next abstraction layer, allowing users to define more generic tasks that are interdependent;\n\n\n(+++) Golem Standard Library (GSL): language agnostic functionality providing access to the low level core components required to interact with Golem from within a programming language. Special attention will be paid to I/O functions exposed to task and subtask related functionalities. Each supported programming language will have bindings to the GSL. These bindings will serve as a means of extending the default standard library of the language in question (custom extensions provided by developers of programming languages will also be possible). With GLS an automatic task definition, independent from the operating system, will be possible. GSL will allow users to create Golem applications using different programming languages, which shall significantly increase the number of potential use cases and simplify task creation process;\n\n\n(+++) GSL tutorial for developers.",
            "title": "Golem Milestones"
        },
        {
            "location": "/3.-FAQ/Roadmap/#golem-milestones",
            "text": "",
            "title": "Golem Milestones"
        },
        {
            "location": "/3.-FAQ/Roadmap/#brass-golem",
            "text": "...these are created to fulfill one goal, set at the time of their creation, and wait with absolute patience until activated to perform this task.   Brass Golem is where we are at the moment with our proof-of-concept, in alpha testing now. This current version of Golem is only focused on rendering in Blender and LuxRender, and although it will be useful to CGI artists, we consider CGI rendering to be a proof of concept primarily, and also a training ground. Brass Golem should be frozen within 6 months after crowdfunding and a full battery of tests will be administered. Even though we do not expect that Blender CGI rendering will create enough turnover to justify all the work we have put into the project, this will be the first decentralized compute market.  List of proposed  functionalities:  Basic Task Definition Scheme;  Basic Application Registry - first version of Ethereum-based Application Registry which allows to save tasks defined with basic task definition scheme;  IPFS integration for coordinating task data and content delivery, e.g. deliver files needed to compute a task, deliver the results back to the requester;  Docker environment with Golem-provided images for sandboxing the computations;  Local verification: a probabilistic verification system based on the calculation of a fraction of the task on the requestor\u2019s machine;  Basic UI and CLI;  Basic reputation system;   Implementation of Blender and LuxRender tasks.  Next version: [0.4] (https://github.com/golemfactory/golem/milestones/Brass%200.4)",
            "title": "Brass Golem"
        },
        {
            "location": "/3.-FAQ/Roadmap/#clay-golem",
            "text": "There is a chance (...) that a Clay Golem will be possessed by a chaotic evil spirit. If this happens control is lost and the Golem attacks the closest living creature.   Clay Golem is a big leap from the Brass milestone. Clay Golem will introduce the Task API and the Application Registry, which together are going to make Golem a multi-purpose, generalized distributed computation solution. Developers will have the means to integrate with Golem. This advance, however, may come at the cost of compromised stability and security, so this version should be considered an experiment for early adopters and tech enthusiast to prototype their new ideas and solutions on Clay.   Basic Task API: an interface that allows a user to define simple tasks;  Initial Transaction Framework Model with hard-coded payments schemes;;   Redundant verification: a verification scheme based on the comparison of redundant computation results;  Basic subtask delegation: a mechanism for more fine grained subtasks distribution (e.g. can be used to help with creation of an ad-hoc proxy delegating tasks in a more efficient manner);  Basic tutorials for software developers;  (+) Support for virtual machines as a sandbox for computation;  (+) Set of extended tutorials for developers explaining how to implement their own tasks for Golem network;  (+) Example computational chemistry use case implementation;  (++) Example machine learning use case implementation.",
            "title": "Clay Golem"
        },
        {
            "location": "/3.-FAQ/Roadmap/#stone-golem",
            "text": "Stone Golems do not revoke their creators control like (...) Clay Golems.   Stone Golem will add more security and stability, but also enhance the functionalities implemented in Clay. An advanced version of the Task API will be introduced. The Application Registry will be complemented by the Certification Mechanism that will create a community-driven trust network for applications. Also, the Transaction Framework will create an environment that will allow Golem to be used in a SaaS model.   Full Task API: an interface that allows users to define tasks;  Application Registry: where developers publish applications ready to run on Golem;  Transaction Framework that allows a choice of remuneration models for task templates;  Basic Certification support for Software: a mechanism that allows users to whitelist and blacklist applications, building a decentralized trust network;  Support for SaaS: the possibility to add support for proprietary software which can be used in tasks. Payments for task creators should also be implemented in the application;  Application Registry and Transaction Framework tutorials for developers;  (+) SaaS tasks examples - example use cases that show developers how to create tasks available in a SaaS model;",
            "title": "Stone Golem"
        },
        {
            "location": "/3.-FAQ/Roadmap/#iron-golem",
            "text": "Iron Golems are made of iron and are among the strongest type of Golem. They never revoke the control of the wizard that created them.   Iron is a deeply tested Golem that gives more freedom to developers, allowing them to create applications that use an Internet connection or applications that run outside the sandbox. Of course, the decision to accept higher-risk applications will still belong to the providers renting their computing power. Iron Golem should be robust, highly resistant to attacks, stable and scalable. Iron will also introduce various tools for developers that will make application creation far easier. Finally, the Golem Standard Library will be implemented.   (+) External data link: enables Golem to use resources and interface with software outside of the Golem network;  (+) Host-direct mode: a trusted mode for explicitly whitelisted applications or invulnerable environments, where Golem runs computation outside the Docker/VM;  (+) Certification support for Environments:   (+) Network Status Dashboard: public website displaying basic stats about Golem network;  (+) Additional security mechanism: tasks that uses public data link or host-direct mode are particularly challenging for security. Additional means may be necessary to make running those tasks safer for providers (eg. central audit oracles, agreements contracts or code-execution observers may be implemented);  (+) Golem web client: a web interface for Golem nodes as an alternative to the native GUI / console interface;  (++) Golem Developer Toolkit: a set of diagnostic and test tools to make creation process of applications for Golem even easier;  (++) Reputation system: reputation protocol that allows the node to effectively supervise network behaviour;   (++) Advanced transaction system: a system that automatically tries to match requestors with providers in a way that is most profitable to all participants;  (++) Golem Developer Toolkit tutorial  (++) Provider dashboard: providing stats, graphs and more advanced settings management for providers;  (+++) devp2p integration: changes in p2p and network protocols using new version of devp2p;  (+++) MapReduce and topological sorting of tasks: add the next abstraction layer, allowing users to define more generic tasks that are interdependent;  (+++) Golem Standard Library (GSL): language agnostic functionality providing access to the low level core components required to interact with Golem from within a programming language. Special attention will be paid to I/O functions exposed to task and subtask related functionalities. Each supported programming language will have bindings to the GSL. These bindings will serve as a means of extending the default standard library of the language in question (custom extensions provided by developers of programming languages will also be possible). With GLS an automatic task definition, independent from the operating system, will be possible. GSL will allow users to create Golem applications using different programming languages, which shall significantly increase the number of potential use cases and simplify task creation process;  (+++) GSL tutorial for developers.",
            "title": "Iron Golem"
        },
        {
            "location": "/3.-FAQ/UseCases/Blender/",
            "text": "About Blender\n\n\nFrom Blender \nwebsite\n:\n\n\n\n\nBlender is the free and open source 3D creation suite. It supports the entirety of the 3D pipeline\u2014modeling, rigging, animation, simulation, rendering, compositing and motion tracking, even video editing and game creation. \n\n\n\n\nGolem is supporting rendering images and frames from .blend files using Blender. \n\n\nSplitting into subtask\n\n\n1) If there is only one image to render.\nWe're using a \"crop to window\" mechanism to define only a part of a picture that should be rendered in this subtask.  \n\n\n2) If there are as many frames as total tasks\n\n\nEach frame is a different subtask. \n\n\n3) If there are more frames than total tasks\n\n\nEach subtask contains a few frames.\n\n\n4) If there are less frames than total tasks\n\n\nEach subtask contains a part of one frame (\"crop to window\" is used). \n\n\nCollecting results\n\n\nAfter receiving all parts of rendered images, the requestor's node brings them together and creates the final image / frames. Frames are saved in the \"output file\" directory and are named like the output file with the added frame numbers, ie. if user defines the output file to be \n\n/home/golem/img/my_img.EXR\n than the first frame will be saved in \n/home/golem/img/my_img0001.EXR\n, fourth in \n/home/golem/img/my_img0004.EXR\n, etc.\n\n\nVerification\n\n\nUser may choose simple verification, then the correctness of the computation is not checked (only image size and type is checked). Alternatively she may choose advanced verification, then a random, small part of the image is rendered locally and compared with the received result. This method is more secure but also slower. \n\n\nTask specific options guide\n\n\n\n\n\n\nMain scene file: click \"...\" button on the right to choose .blend file. If a scene is using external resources, textures, etc. and they are not built into .blend file then you should add them using the \"Add\" button. Make sure that your scene is using only \nrelative paths\n, otherwise your task won't compute properly. \n\n\n\n\n\n\nFrames: if checkbox is not checked than only the first frame will be rendered. If you want to render a specific frame or set of frames, check checkbox and write the numbers of frames that should be rendered. You may use short notation, eg.: \"1-4, 10-20;2\" will render frames 1, 2, 3, 4, 10, 12, 14, 16, 18, 20.",
            "title": "Blender"
        },
        {
            "location": "/3.-FAQ/UseCases/Blender/#about-blender",
            "text": "From Blender  website :   Blender is the free and open source 3D creation suite. It supports the entirety of the 3D pipeline\u2014modeling, rigging, animation, simulation, rendering, compositing and motion tracking, even video editing and game creation.    Golem is supporting rendering images and frames from .blend files using Blender.",
            "title": "About Blender"
        },
        {
            "location": "/3.-FAQ/UseCases/Blender/#splitting-into-subtask",
            "text": "1) If there is only one image to render.\nWe're using a \"crop to window\" mechanism to define only a part of a picture that should be rendered in this subtask.    2) If there are as many frames as total tasks  Each frame is a different subtask.   3) If there are more frames than total tasks  Each subtask contains a few frames.  4) If there are less frames than total tasks  Each subtask contains a part of one frame (\"crop to window\" is used).",
            "title": "Splitting into subtask"
        },
        {
            "location": "/3.-FAQ/UseCases/Blender/#collecting-results",
            "text": "After receiving all parts of rendered images, the requestor's node brings them together and creates the final image / frames. Frames are saved in the \"output file\" directory and are named like the output file with the added frame numbers, ie. if user defines the output file to be  /home/golem/img/my_img.EXR  than the first frame will be saved in  /home/golem/img/my_img0001.EXR , fourth in  /home/golem/img/my_img0004.EXR , etc.",
            "title": "Collecting results"
        },
        {
            "location": "/3.-FAQ/UseCases/Blender/#verification",
            "text": "User may choose simple verification, then the correctness of the computation is not checked (only image size and type is checked). Alternatively she may choose advanced verification, then a random, small part of the image is rendered locally and compared with the received result. This method is more secure but also slower.",
            "title": "Verification"
        },
        {
            "location": "/3.-FAQ/UseCases/Blender/#task-specific-options-guide",
            "text": "Main scene file: click \"...\" button on the right to choose .blend file. If a scene is using external resources, textures, etc. and they are not built into .blend file then you should add them using the \"Add\" button. Make sure that your scene is using only  relative paths , otherwise your task won't compute properly.     Frames: if checkbox is not checked than only the first frame will be rendered. If you want to render a specific frame or set of frames, check checkbox and write the numbers of frames that should be rendered. You may use short notation, eg.: \"1-4, 10-20;2\" will render frames 1, 2, 3, 4, 10, 12, 14, 16, 18, 20.",
            "title": "Task specific options guide"
        },
        {
            "location": "/3.-FAQ/UseCases/LuxRender/",
            "text": "About LuxRender\n\n\nFrom LuxRender \nwebsite\n:\n\n\n\n\nLuxRender is a physically based and unbiased rendering engine. Based on state of the art algorithms, LuxRender simulates the flow of light according to physical equations, thus producing realistic images of photographic quality.\n\n\n\n\nGolem allows users to compute their .lux scenes using LuxRender standalone.\n\n\nSplitting into subtasks\n\n\nA LuxRender task in Golem works differently than other renderers. Instead of rendering part of the image, the whole image is rendered but with a lower quality. Users may define subtask quality by specifying the number of samples per pixel or defining how long rendering should take.\n\n\nCollecting results\n\n\nLuxRender standalone produces files in .flm format, and render results are saved as such. Rendering from an .flm file can be continued. .Flm files can also be merged into one .flm with higher quality. In Golem, received .flm files are merged into one .flm file which is used to generate final image. Rendering is indeterministic so the numbers of samples per pixel in subtasks adds up to the final number of samples per pixel in the final image.\n\n\nVerification\n\n\nIt's difficult to verify images from Luxrender because of their non-determinism.\nTo validate the results, one has to calculate a metric against a reference image. \nNo matter which metric we use, there will always be some mismatch because of non-determinism.\nTo overcome this issue, the requestor's machine renders two sample images and calculates the metric between them. \nSince the result depends on image resolution and quality (sampling rate), we have to formulate a self-adjustable validation mechanism:\n\n\n    \nif\n \nMetric\n(\nsample1\n,\n \nproviders_results\n)\n \n<\n \nrelaxation_coeff\n \n*\n \nMetric\n(\nsample1\n,\n \nsample2\n)\n\n       \nvalidation\n \nsuccess\n\n    \nelse\n \n       \nvalidation\n \nfalse\n\n\n\n\n\n\nTask specific options\n\n\n\n\n\n\nMain scene file: click \"...\" button on the right to choose .lxs file. If the scene is using external resources, textures, etc. you should add them using the \"Add\" button. Make sure that in your scene you're using only relative paths, otherwise your task won't compute properly. If there is an .flm file with the proper resolution in additional resources then rendering will be continued from the state saved in this file. \n\n\n\n\n\n\nSubtask stop condition: halt time means that each subtask will be stopped after a specific number of seconds. Halt spp means that each subtask will be stopped after generating a specific number of samples per pixel. States from subtasks will be added, so if you want to generate an image with 2000 samples per pixel, you may split your task into 100 subtasks with a halt spp equal to 20 or into 20 subtasks with a halt spp equal to 100.",
            "title": "LuxRender"
        },
        {
            "location": "/3.-FAQ/UseCases/LuxRender/#about-luxrender",
            "text": "From LuxRender  website :   LuxRender is a physically based and unbiased rendering engine. Based on state of the art algorithms, LuxRender simulates the flow of light according to physical equations, thus producing realistic images of photographic quality.   Golem allows users to compute their .lux scenes using LuxRender standalone.",
            "title": "About LuxRender"
        },
        {
            "location": "/3.-FAQ/UseCases/LuxRender/#splitting-into-subtasks",
            "text": "A LuxRender task in Golem works differently than other renderers. Instead of rendering part of the image, the whole image is rendered but with a lower quality. Users may define subtask quality by specifying the number of samples per pixel or defining how long rendering should take.",
            "title": "Splitting into subtasks"
        },
        {
            "location": "/3.-FAQ/UseCases/LuxRender/#collecting-results",
            "text": "LuxRender standalone produces files in .flm format, and render results are saved as such. Rendering from an .flm file can be continued. .Flm files can also be merged into one .flm with higher quality. In Golem, received .flm files are merged into one .flm file which is used to generate final image. Rendering is indeterministic so the numbers of samples per pixel in subtasks adds up to the final number of samples per pixel in the final image.",
            "title": "Collecting results"
        },
        {
            "location": "/3.-FAQ/UseCases/LuxRender/#verification",
            "text": "It's difficult to verify images from Luxrender because of their non-determinism.\nTo validate the results, one has to calculate a metric against a reference image. \nNo matter which metric we use, there will always be some mismatch because of non-determinism.\nTo overcome this issue, the requestor's machine renders two sample images and calculates the metric between them. \nSince the result depends on image resolution and quality (sampling rate), we have to formulate a self-adjustable validation mechanism:       if   Metric ( sample1 ,   providers_results )   <   relaxation_coeff   *   Metric ( sample1 ,   sample2 ) \n        validation   success \n     else  \n        validation   false",
            "title": "Verification"
        },
        {
            "location": "/3.-FAQ/UseCases/LuxRender/#task-specific-options",
            "text": "Main scene file: click \"...\" button on the right to choose .lxs file. If the scene is using external resources, textures, etc. you should add them using the \"Add\" button. Make sure that in your scene you're using only relative paths, otherwise your task won't compute properly. If there is an .flm file with the proper resolution in additional resources then rendering will be continued from the state saved in this file.     Subtask stop condition: halt time means that each subtask will be stopped after a specific number of seconds. Halt spp means that each subtask will be stopped after generating a specific number of samples per pixel. States from subtasks will be added, so if you want to generate an image with 2000 samples per pixel, you may split your task into 100 subtasks with a halt spp equal to 20 or into 20 subtasks with a halt spp equal to 100.",
            "title": "Task specific options"
        },
        {
            "location": "/3.-FAQ/UseCases/Use-cases/",
            "text": "Current use cases:\n\n\n\n\nBlender rendering\n\n\nLuxRender rendering\n\n\n\n\nTested, but removed:\n\n\n\n\nVray rendering\n\n\n3DS Max rendering\n\n\nPBRT rendering\n\n\nHashcash \n\n\n\n\nComing soon:\n\n\n\n\nMachine-learning tasks\n\n\nChemical computations \n\n\n\n\nFurther potential applications:\n\n\n\n\nStock market simulations\n\n\nBig data analysis\n\n\nImage recognition \n\n\nNatural language processing\n\n\nInteger factorization\n\n\nDNA analysis\n\n\nProtein fold simulations\n\n\nParticles simulations\n\n\nSearch for extraterrestrial intelligence\n\n\nEther mining pools\n\n\n\n\nAdditional ideas can be found in the \nblog post\n.",
            "title": "Current use cases:"
        },
        {
            "location": "/3.-FAQ/UseCases/Use-cases/#current-use-cases",
            "text": "Blender rendering  LuxRender rendering",
            "title": "Current use cases:"
        },
        {
            "location": "/3.-FAQ/UseCases/Use-cases/#tested-but-removed",
            "text": "Vray rendering  3DS Max rendering  PBRT rendering  Hashcash",
            "title": "Tested, but removed:"
        },
        {
            "location": "/3.-FAQ/UseCases/Use-cases/#coming-soon",
            "text": "Machine-learning tasks  Chemical computations",
            "title": "Coming soon:"
        },
        {
            "location": "/3.-FAQ/UseCases/Use-cases/#further-potential-applications",
            "text": "Stock market simulations  Big data analysis  Image recognition   Natural language processing  Integer factorization  DNA analysis  Protein fold simulations  Particles simulations  Search for extraterrestrial intelligence  Ether mining pools   Additional ideas can be found in the  blog post .",
            "title": "Further potential applications:"
        }
    ]
}